2021/01/10 22:07:35 [INFO] Terraform version: 0.12.24  
2021/01/10 22:07:35 [INFO] Go runtime version: go1.12.13
2021/01/10 22:07:35 [INFO] CLI args: []string{"/bin/terraform", "apply", "--auto-approve"}
2021/01/10 22:07:35 [DEBUG] Attempting to open CLI config file: /home/harry/.terraformrc
2021/01/10 22:07:35 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/01/10 22:07:35 [INFO] CLI command args: []string{"apply", "--auto-approve"}
2021/01/10 22:07:35 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/01/10 22:07:35 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/01/10 22:07:35 [DEBUG] New state was assigned lineage "c4516c42-b8c0-e2e0-ac11-354f51499dba"
2021/01/10 22:07:35 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/01/10 22:07:35 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/01/10 22:07:35 [DEBUG] checking for provider in "."
2021/01/10 22:07:35 [DEBUG] checking for provider in "/bin"
2021/01/10 22:07:35 [DEBUG] checking for provider in ".terraform/plugins/linux_amd64"
2021/01/10 22:07:35 [DEBUG] found provider "terraform-provider-aws_v3.23.0_x5"
2021/01/10 22:07:35 [DEBUG] found valid plugin: "aws", "3.23.0", "/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5"
2021/01/10 22:07:35 [DEBUG] checking for provisioner in "."
2021/01/10 22:07:35 [DEBUG] checking for provisioner in "/bin"
2021/01/10 22:07:35 [DEBUG] checking for provisioner in ".terraform/plugins/linux_amd64"
2021/01/10 22:07:35 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/01/10 22:07:35 [INFO] backend/local: starting Apply operation
2021/01/10 22:07:35 [TRACE] backend/local: requesting state manager for workspace "default"
2021/01/10 22:07:35 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/01/10 22:07:35 [TRACE] backend/local: requesting state lock for workspace "default"
2021/01/10 22:07:35 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/01/10 22:07:35 [TRACE] statemgr.Filesystem: existing snapshot has lineage "a7dd2240-7020-bbb5-43cd-661fea0f9fa2" serial 922
2021/01/10 22:07:35 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/01/10 22:07:35 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/01/10 22:07:35 [TRACE] backend/local: reading remote state for workspace "default"
2021/01/10 22:07:35 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/01/10 22:07:35 [TRACE] statemgr.Filesystem: read snapshot with lineage "a7dd2240-7020-bbb5-43cd-661fea0f9fa2" serial 922
2021/01/10 22:07:35 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/01/10 22:07:35 [TRACE] backend/local: building context for current working directory
2021/01/10 22:07:35 [TRACE] terraform.NewContext: starting
2021/01/10 22:07:35 [TRACE] terraform.NewContext: resolving provider version selections
2021/01/10 22:07:36 [TRACE] terraform.NewContext: loading provider schemas
2021/01/10 22:07:36 [TRACE] LoadSchemas: retrieving schema for provider type "aws"
2021-01-10T22:07:36.567Z [INFO]  plugin: configuring client automatic mTLS
2021-01-10T22:07:36.607Z [DEBUG] plugin: starting plugin: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 args=[/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5]
2021-01-10T22:07:36.608Z [DEBUG] plugin: plugin started: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 pid=38019
2021-01-10T22:07:36.608Z [DEBUG] plugin: waiting for RPC address: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5
2021-01-10T22:07:36.659Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: configuring server automatic mTLS: timestamp=2021-01-10T22:07:36.659Z
2021-01-10T22:07:36.706Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: plugin address: address=/tmp/plugin623293424 network=unix timestamp=2021-01-10T22:07:36.706Z
2021-01-10T22:07:36.706Z [DEBUG] plugin: using plugin: version=5
2021/01/10 22:07:36 [TRACE] GRPCProvider: GetSchema
2021/01/10 22:07:36 [TRACE] GRPCProvider: Close
2021-01-10T22:07:36.941Z [DEBUG] plugin: plugin process exited: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 pid=38019
2021-01-10T22:07:36.941Z [DEBUG] plugin: plugin exited
2021/01/10 22:07:36 [TRACE] LoadSchemas: retrieving schema for provisioner "file"
2021-01-10T22:07:36.941Z [DEBUG] plugin: starting plugin: path=/bin/terraform args=[/bin/terraform, internal-plugin, provisioner, file]
2021-01-10T22:07:36.942Z [DEBUG] plugin: plugin started: path=/bin/terraform pid=38025
2021-01-10T22:07:36.942Z [DEBUG] plugin: waiting for RPC address: path=/bin/terraform
2021-01-10T22:07:36.965Z [DEBUG] plugin: using plugin: version=5
2021-01-10T22:07:36.970Z [DEBUG] plugin: plugin process exited: path=/bin/terraform pid=38025
2021-01-10T22:07:36.970Z [DEBUG] plugin: plugin exited
2021/01/10 22:07:36 [TRACE] LoadSchemas: retrieving schema for provisioner "remote-exec"
2021-01-10T22:07:36.970Z [DEBUG] plugin: starting plugin: path=/bin/terraform args=[/bin/terraform, internal-plugin, provisioner, remote-exec]
2021-01-10T22:07:36.971Z [DEBUG] plugin: plugin started: path=/bin/terraform pid=38040
2021-01-10T22:07:36.971Z [DEBUG] plugin: waiting for RPC address: path=/bin/terraform
2021-01-10T22:07:36.992Z [DEBUG] plugin: using plugin: version=5
2021-01-10T22:07:36.997Z [DEBUG] plugin: plugin process exited: path=/bin/terraform pid=38040
2021-01-10T22:07:36.997Z [DEBUG] plugin: plugin exited
2021/01/10 22:07:36 [TRACE] LoadSchemas: retrieving schema for provisioner "local-exec"
2021-01-10T22:07:36.997Z [DEBUG] plugin: starting plugin: path=/bin/terraform args=[/bin/terraform, internal-plugin, provisioner, local-exec]
2021-01-10T22:07:36.998Z [DEBUG] plugin: plugin started: path=/bin/terraform pid=38055
2021-01-10T22:07:36.998Z [DEBUG] plugin: waiting for RPC address: path=/bin/terraform
2021-01-10T22:07:37.018Z [DEBUG] plugin: using plugin: version=5
2021-01-10T22:07:37.024Z [DEBUG] plugin: plugin process exited: path=/bin/terraform pid=38055
2021-01-10T22:07:37.024Z [DEBUG] plugin: plugin exited
2021/01/10 22:07:37 [TRACE] terraform.NewContext: complete
2021/01/10 22:07:37 [TRACE] backend/local: finished building terraform.Context
2021/01/10 22:07:37 [TRACE] backend/local: requesting interactive input, if necessary
2021/01/10 22:07:37 [TRACE] Context.Input: Prompting for provider arguments
2021/01/10 22:07:37 [TRACE] Context.Input: Provider provider.aws declared at provider.tf:2,1-15
2021/01/10 22:07:37 [TRACE] Context.Input: Input for provider.aws: map[string]cty.Value{}
2021/01/10 22:07:37 [TRACE] backend/local: running validation operation
2021/01/10 22:07:37 [INFO] terraform: building graph: GraphTypeValidate
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/01/10 22:07:37 [TRACE] ConfigTransformer: Starting for path: 
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_alb.alb - *terraform.NodeValidatableResource
  aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
  aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
  aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
  aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
  aws_instance.prometheus_a - *terraform.NodeValidatableResource
  aws_instance.prometheus_b - *terraform.NodeValidatableResource
  aws_instance.web_a - *terraform.NodeValidatableResource
  aws_instance.web_b - *terraform.NodeValidatableResource
  aws_internet_gateway.gw - *terraform.NodeValidatableResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
  aws_route.internet_access - *terraform.NodeValidatableResource
  aws_route53_record.A - *terraform.NodeValidatableResource
  aws_route53_record.A_www - *terraform.NodeValidatableResource
  aws_route53_zone.zone - *terraform.NodeValidatableResource
  aws_security_group.internal_access - *terraform.NodeValidatableResource
  aws_security_group.prometheus_access - *terraform.NodeValidatableResource
  aws_security_group.web_access - *terraform.NodeValidatableResource
  aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
  aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
  aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
  aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
  aws_vpc.vpc - *terraform.NodeValidatableResource
  data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
  data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_alb.alb - *terraform.NodeValidatableResource
  aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
  aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
  aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
  aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
  aws_instance.prometheus_a - *terraform.NodeValidatableResource
  aws_instance.prometheus_b - *terraform.NodeValidatableResource
  aws_instance.web_a - *terraform.NodeValidatableResource
  aws_instance.web_b - *terraform.NodeValidatableResource
  aws_internet_gateway.gw - *terraform.NodeValidatableResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
  aws_route.internet_access - *terraform.NodeValidatableResource
  aws_route53_record.A - *terraform.NodeValidatableResource
  aws_route53_record.A_www - *terraform.NodeValidatableResource
  aws_route53_zone.zone - *terraform.NodeValidatableResource
  aws_security_group.internal_access - *terraform.NodeValidatableResource
  aws_security_group.prometheus_access - *terraform.NodeValidatableResource
  aws_security_group.web_access - *terraform.NodeValidatableResource
  aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
  aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
  aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
  aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
  aws_vpc.vpc - *terraform.NodeValidatableResource
  data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
  data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.StateTransformer
2021/01/10 22:07:37 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user.prometheus_iam" (*terraform.NodeValidatableResource) config from prometheus_iam.tf:1,1-41
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_public_az_a" (*terraform.NodeValidatableResource) config from networking.tf:41,1-43
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.prometheus_b" (*terraform.NodeValidatableResource) config from prometheus.tf:48,1-39
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.web_access" (*terraform.NodeValidatableResource) config from security_groups.tf:2,1-43
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lb_target_group_attachment.attach_web_a" (*terraform.NodeValidatableResource) config from load_balancer.tf:67,1-57
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_internet_gateway.gw" (*terraform.NodeValidatableResource) config from networking.tf:7,1-37
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_private_az_a" (*terraform.NodeValidatableResource) config from networking.tf:55,1-44
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_instances.web_instances_a" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:80, Column:1, Byte:2458}, End:hcl.Pos{Line:80, Column:39, Byte:2496}}
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_zone.zone" (*terraform.NodeValidatableResource) config from route_53.tf:2,1-35
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route.internet_access" (*terraform.NodeValidatableResource) config from networking.tf:34,1-39
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.internal_access" (*terraform.NodeValidatableResource) config from security_groups.tf:37,1-48
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.web_b" (*terraform.NodeValidatableResource) config from main.tf:41,1-32
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_public_az_b" (*terraform.NodeValidatableResource) config from networking.tf:47,1-43
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_access_key.prometheus_access_key" (*terraform.NodeValidatableResource) config from prometheus_iam.tf:6,1-54
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_private_az_b" (*terraform.NodeValidatableResource) config from networking.tf:60,1-44
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.ovpDevOpsKey" (*terraform.NodeValidatableResource) config from key_pair.tf:2,1-39
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.web_a" (*terraform.NodeValidatableResource) config from main.tf:2,1-32
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_listener.alb_listener_https" (*terraform.NodeValidatableResource) config from load_balancer.tf:20,1-49
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc.vpc" (*terraform.NodeValidatableResource) config from networking.tf:2,1-25
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb.alb" (*terraform.NodeValidatableResource) config from load_balancer.tf:2,1-25
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_target_group.alb_target_group_http" (*terraform.NodeValidatableResource) config from load_balancer.tf:50,1-56
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.prometheus_a" (*terraform.NodeValidatableResource) config from prometheus.tf:3,1-39
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_instances.web_instances_b" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:92, Column:1, Byte:2675}, End:hcl.Pos{Line:92, Column:39, Byte:2713}}
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lb_target_group_attachment.attach_web_b" (*terraform.NodeValidatableResource) config from load_balancer.tf:75,1-57
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_listener.alb_listener_http" (*terraform.NodeValidatableResource) config from load_balancer.tf:9,1-48
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user_policy.prometheus_role" (*terraform.NodeValidatableResource) config from prometheus_iam.tf:10,1-49
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.prometheus_access" (*terraform.NodeValidatableResource) config from security_groups.tf:60,1-50
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_listener_rule.listener_rule_http" (*terraform.NodeValidatableResource) config from load_balancer.tf:34,1-54
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.A_www" (*terraform.NodeValidatableResource) config from route_53.tf:20,1-38
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.A" (*terraform.NodeValidatableResource) config from route_53.tf:8,1-34
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_alb.alb - *terraform.NodeValidatableResource
  aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
  aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
  aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
  aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
  aws_instance.prometheus_a - *terraform.NodeValidatableResource
  aws_instance.prometheus_b - *terraform.NodeValidatableResource
  aws_instance.web_a - *terraform.NodeValidatableResource
  aws_instance.web_b - *terraform.NodeValidatableResource
  aws_internet_gateway.gw - *terraform.NodeValidatableResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
  aws_route.internet_access - *terraform.NodeValidatableResource
  aws_route53_record.A - *terraform.NodeValidatableResource
  aws_route53_record.A_www - *terraform.NodeValidatableResource
  aws_route53_zone.zone - *terraform.NodeValidatableResource
  aws_security_group.internal_access - *terraform.NodeValidatableResource
  aws_security_group.prometheus_access - *terraform.NodeValidatableResource
  aws_security_group.web_access - *terraform.NodeValidatableResource
  aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
  aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
  aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
  aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
  aws_vpc.vpc - *terraform.NodeValidatableResource
  data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
  data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/01/10 22:07:37 [TRACE] MissingProviderTransformer: added implicit provisioner file, first implied by aws_instance.prometheus_b
2021/01/10 22:07:37 [TRACE] MissingProviderTransformer: added implicit provisioner remote-exec, first implied by aws_instance.prometheus_b
2021/01/10 22:07:37 [TRACE] MissingProviderTransformer: added implicit provisioner local-exec, first implied by aws_instance.prometheus_b
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer with new graph:
  aws_alb.alb - *terraform.NodeValidatableResource
  aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
  aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
  aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
  aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
  aws_instance.prometheus_a - *terraform.NodeValidatableResource
  aws_instance.prometheus_b - *terraform.NodeValidatableResource
  aws_instance.web_a - *terraform.NodeValidatableResource
  aws_instance.web_b - *terraform.NodeValidatableResource
  aws_internet_gateway.gw - *terraform.NodeValidatableResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
  aws_route.internet_access - *terraform.NodeValidatableResource
  aws_route53_record.A - *terraform.NodeValidatableResource
  aws_route53_record.A_www - *terraform.NodeValidatableResource
  aws_route53_zone.zone - *terraform.NodeValidatableResource
  aws_security_group.internal_access - *terraform.NodeValidatableResource
  aws_security_group.prometheus_access - *terraform.NodeValidatableResource
  aws_security_group.web_access - *terraform.NodeValidatableResource
  aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
  aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
  aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
  aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
  aws_vpc.vpc - *terraform.NodeValidatableResource
  data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
  data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/01/10 22:07:37 [TRACE] ProvisionerTransformer: aws_instance.prometheus_b is provisioned by file ("provisioner.file")
2021/01/10 22:07:37 [TRACE] ProvisionerTransformer: aws_instance.prometheus_b is provisioned by remote-exec ("provisioner.remote-exec")
2021/01/10 22:07:37 [TRACE] ProvisionerTransformer: aws_instance.prometheus_b is provisioned by local-exec ("provisioner.local-exec")
2021/01/10 22:07:37 [TRACE] ProvisionerTransformer: aws_instance.web_b is provisioned by remote-exec ("provisioner.remote-exec")
2021/01/10 22:07:37 [TRACE] ProvisionerTransformer: aws_instance.web_b is provisioned by local-exec ("provisioner.local-exec")
2021/01/10 22:07:37 [TRACE] ProvisionerTransformer: aws_instance.prometheus_a is provisioned by file ("provisioner.file")
2021/01/10 22:07:37 [TRACE] ProvisionerTransformer: aws_instance.prometheus_a is provisioned by remote-exec ("provisioner.remote-exec")
2021/01/10 22:07:37 [TRACE] ProvisionerTransformer: aws_instance.prometheus_a is provisioned by local-exec ("provisioner.local-exec")
2021/01/10 22:07:37 [TRACE] ProvisionerTransformer: aws_instance.web_a is provisioned by remote-exec ("provisioner.remote-exec")
2021/01/10 22:07:37 [TRACE] ProvisionerTransformer: aws_instance.web_a is provisioned by local-exec ("provisioner.local-exec")
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.ProvisionerTransformer with new graph:
  aws_alb.alb - *terraform.NodeValidatableResource
  aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
  aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
  aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
  aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
  aws_instance.prometheus_a - *terraform.NodeValidatableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b - *terraform.NodeValidatableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.gw - *terraform.NodeValidatableResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
  aws_route.internet_access - *terraform.NodeValidatableResource
  aws_route53_record.A - *terraform.NodeValidatableResource
  aws_route53_record.A_www - *terraform.NodeValidatableResource
  aws_route53_zone.zone - *terraform.NodeValidatableResource
  aws_security_group.internal_access - *terraform.NodeValidatableResource
  aws_security_group.prometheus_access - *terraform.NodeValidatableResource
  aws_security_group.web_access - *terraform.NodeValidatableResource
  aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
  aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
  aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
  aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
  aws_vpc.vpc - *terraform.NodeValidatableResource
  data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
  data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/01/10 22:07:37 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from provider.tf:2,1-15
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_alb.alb - *terraform.NodeValidatableResource
  aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
  aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
  aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
  aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
  aws_instance.prometheus_a - *terraform.NodeValidatableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b - *terraform.NodeValidatableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.gw - *terraform.NodeValidatableResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
  aws_route.internet_access - *terraform.NodeValidatableResource
  aws_route53_record.A - *terraform.NodeValidatableResource
  aws_route53_record.A_www - *terraform.NodeValidatableResource
  aws_route53_zone.zone - *terraform.NodeValidatableResource
  aws_security_group.internal_access - *terraform.NodeValidatableResource
  aws_security_group.prometheus_access - *terraform.NodeValidatableResource
  aws_security_group.web_access - *terraform.NodeValidatableResource
  aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
  aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
  aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
  aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
  aws_vpc.vpc - *terraform.NodeValidatableResource
  data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
  data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_route53_record.A is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_subnet.subnet_public_az_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_instance.prometheus_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_security_group.web_access is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_route53_zone.zone is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_security_group.internal_access is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: data.aws_instances.web_instances_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_iam_access_key.prometheus_access_key is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_instance.web_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_instance.web_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_alb_listener.alb_listener_https is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_alb_target_group.alb_target_group_http is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_instance.prometheus_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_lb_target_group_attachment.attach_web_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: data.aws_instances.web_instances_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_security_group.prometheus_access is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_alb_listener_rule.listener_rule_http is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_iam_user.prometheus_iam is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_lb_target_group_attachment.attach_web_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_internet_gateway.gw is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_subnet.subnet_private_az_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_route.internet_access is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_subnet.subnet_public_az_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_subnet.subnet_private_az_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_vpc.vpc is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_alb.alb is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_key_pair.ovpDevOpsKey is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_alb_listener.alb_listener_http is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_iam_user_policy.prometheus_role is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_route53_record.A_www is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_public_az_a
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_subnet.subnet_public_az_a" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_zone.zone
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_route53_zone.zone" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_public_az_b
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_subnet.subnet_public_az_b" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb.alb
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_alb.alb" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.web_a
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_instance.web_a" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_listener.alb_listener_https
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_alb_listener.alb_listener_https" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.prometheus_a
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_instance.prometheus_a" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_private_az_a
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_subnet.subnet_private_az_a" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_user_policy.prometheus_role
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_iam_user_policy.prometheus_role" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.web_access
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_security_group.web_access" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.web_b
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_instance.web_b" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.prometheus_access
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_security_group.prometheus_access" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_vpc.vpc
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_vpc.vpc" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_instances.web_instances_a
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "data.aws_instances.web_instances_a" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_internet_gateway.gw
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_internet_gateway.gw" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_private_az_b
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_subnet.subnet_private_az_b" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_iam_access_key.prometheus_access_key" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lb_target_group_attachment.attach_web_b
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_lb_target_group_attachment.attach_web_b" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_listener.alb_listener_http
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_alb_listener.alb_listener_http" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_record.A
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_route53_record.A" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_key_pair.ovpDevOpsKey" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.prometheus_b
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_instance.prometheus_b" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.internal_access
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_security_group.internal_access" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_alb_target_group.alb_target_group_http" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lb_target_group_attachment.attach_web_a
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_lb_target_group_attachment.attach_web_a" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route.internet_access
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_route.internet_access" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_record.A_www
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_route53_record.A_www" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_instances.web_instances_b
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "data.aws_instances.web_instances_b" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_alb_listener_rule.listener_rule_http" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_user.prometheus_iam
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_iam_user.prometheus_iam" (*terraform.NodeValidatableResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_alb.alb - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.gw - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route.internet_access - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A_www - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.internal_access - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_alb.alb - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.gw - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route.internet_access - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A_www - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.internal_access - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_public_az_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.prometheus_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to aws_instance.prometheus_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.prometheus_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.prometheus_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.web_access
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_zone.zone
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.internal_access
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_instances.web_instances_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.web_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.web_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.web_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.web_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.web_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.web_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_listener.alb_listener_https
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.prometheus_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to aws_instance.prometheus_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.prometheus_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.prometheus_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lb_target_group_attachment.attach_web_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_instances.web_instances_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.prometheus_access
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user.prometheus_iam
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lb_target_group_attachment.attach_web_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_internet_gateway.gw
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_private_az_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route.internet_access
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_public_az_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_private_az_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc.vpc
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb.alb
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_listener.alb_listener_http
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user_policy.prometheus_role
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.A_www
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.A
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_vpc.vpc" references: [var.cidr_vpc]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_alb.alb" references: [aws_subnet.subnet_public_az_a aws_subnet.subnet_public_az_b aws_security_group.web_access]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_key_pair.ovpDevOpsKey" references: [var.public_key]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_alb_listener.alb_listener_http" references: [aws_alb.alb aws_alb_target_group.alb_target_group_http]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_iam_user_policy.prometheus_role" references: [aws_iam_user.prometheus_iam]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_route53_record.A_www" references: [aws_route53_zone.zone var.hosted_zone aws_alb.alb aws_alb.alb]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.cidr_subnet_private_b" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.instance" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_route53_record.A" references: [aws_route53_zone.zone var.hosted_zone aws_alb.alb aws_alb.alb]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_public_az_a" references: [var.az_a var.cidr_subnet_public_a aws_vpc.vpc]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_instance.prometheus_b" references: [var.instance aws_subnet.subnet_public_az_b aws_security_group.prometheus_access aws_key_pair.ovpDevOpsKey var.private_key var.ubuntu_user var.private_key var.ubuntu_user aws_iam_access_key.prometheus_access_key aws_iam_access_key.prometheus_access_key var.private_key aws_iam_access_key.prometheus_access_key aws_iam_access_key.prometheus_access_key]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_security_group.web_access" references: [aws_vpc.vpc]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "output.Grafana_URL" references: [aws_instance.prometheus_a]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.ami" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.hosted_zone" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.instance_count" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.ansible_user" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_route53_zone.zone" references: [var.hosted_zone]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_security_group.internal_access" references: [aws_vpc.vpc]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "data.aws_instances.web_instances_a" references: [aws_instance.web_a]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.az_b" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.public_key" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_iam_access_key.prometheus_access_key" references: [aws_iam_user.prometheus_iam]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_instance.web_b" references: [var.instance_count aws_subnet.subnet_private_az_b aws_security_group.internal_access aws_security_group.prometheus_access var.az_b var.instance aws_key_pair.ovpDevOpsKey var.ami var.ansible_user var.private_key var.private_key]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "output.name_servers" references: [aws_route53_zone.zone]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.private_key" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_alb_target_group.alb_target_group_http" references: [aws_vpc.vpc]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_instance.prometheus_a" references: [var.instance aws_subnet.subnet_public_az_a aws_security_group.prometheus_access aws_key_pair.ovpDevOpsKey var.private_key var.ubuntu_user var.ubuntu_user var.private_key aws_iam_access_key.prometheus_access_key aws_iam_access_key.prometheus_access_key var.private_key aws_iam_access_key.prometheus_access_key aws_iam_access_key.prometheus_access_key]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_instance.web_a" references: [var.instance_count var.ami aws_security_group.internal_access aws_security_group.web_access aws_security_group.prometheus_access aws_subnet.subnet_public_az_a var.instance var.az_a aws_key_pair.ovpDevOpsKey var.ansible_user var.private_key var.private_key]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_alb_listener.alb_listener_https" references: [aws_alb.alb var.cert aws_alb_target_group.alb_target_group_http]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.az_a" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.cidr_subnet_private_a" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_lb_target_group_attachment.attach_web_b" references: [var.instance_count data.aws_instances.web_instances_b aws_alb_target_group.alb_target_group_http]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "data.aws_instances.web_instances_b" references: [aws_instance.web_b]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.cidr_vpc" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.cidr_subnet_public_a" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.ubuntu_user" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "provisioner.local-exec" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_security_group.prometheus_access" references: [aws_vpc.vpc]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_alb_listener_rule.listener_rule_http" references: [aws_alb_listener.alb_listener_https aws_alb_target_group.alb_target_group_http]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "output.alb_address" references: [aws_alb.alb]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.cidr_subnet_public_b" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_iam_user.prometheus_iam" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_lb_target_group_attachment.attach_web_a" references: [var.instance_count aws_alb_target_group.alb_target_group_http data.aws_instances.web_instances_a]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_internet_gateway.gw" references: [aws_vpc.vpc]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_private_az_a" references: [var.az_a aws_vpc.vpc var.cidr_subnet_private_a]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.cert" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.region" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_route.internet_access" references: [aws_vpc.vpc aws_internet_gateway.gw]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_public_az_b" references: [aws_vpc.vpc var.az_b var.cidr_subnet_public_b]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_private_az_b" references: [var.cidr_subnet_private_b var.az_b aws_vpc.vpc]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "output.Prometheus_URL" references: [aws_instance.prometheus_a]
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_alb.alb - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access - *terraform.NodeValidatableResource
    aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodeValidatableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_alb.alb - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access - *terraform.NodeValidatableResource
    aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
    aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_route.internet_access - *terraform.NodeValidatableResource
    aws_route53_record.A - *terraform.NodeValidatableResource
    aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.cert - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
    var.cidr_vpc - *terraform.NodeRootVariable
    var.hosted_zone - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.public_key - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodeValidatableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_alb.alb - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access - *terraform.NodeValidatableResource
    aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
    aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_route.internet_access - *terraform.NodeValidatableResource
    aws_route53_record.A - *terraform.NodeValidatableResource
    aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.cert - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
    var.cidr_vpc - *terraform.NodeRootVariable
    var.hosted_zone - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.public_key - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodeValidatableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
    aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_route.internet_access - *terraform.NodeValidatableResource
    aws_route53_record.A - *terraform.NodeValidatableResource
    aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer with new graph:
  aws_alb.alb - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access - *terraform.NodeValidatableResource
    aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
    aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_route.internet_access - *terraform.NodeValidatableResource
    aws_route53_record.A - *terraform.NodeValidatableResource
    aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.cert - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
    var.cidr_vpc - *terraform.NodeRootVariable
    var.hosted_zone - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.public_key - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodeValidatableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
    aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_route.internet_access - *terraform.NodeValidatableResource
    aws_route53_record.A - *terraform.NodeValidatableResource
    aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
  provisioner.remote-exec - *terraform.NodeProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_alb.alb - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access - *terraform.NodeValidatableResource
    aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
    aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_route.internet_access - *terraform.NodeValidatableResource
    aws_route53_record.A - *terraform.NodeValidatableResource
    aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.cert - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
    var.cidr_vpc - *terraform.NodeRootVariable
    var.hosted_zone - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.public_key - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodeValidatableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
    aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_route.internet_access - *terraform.NodeValidatableResource
    aws_route53_record.A - *terraform.NodeValidatableResource
    aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
  provisioner.remote-exec - *terraform.NodeProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_alb.alb - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
  aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
  aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_alb_listener.alb_listener_https - *terraform.NodeValidatableResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
  aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_iam_user.prometheus_iam - *terraform.NodeValidatableResource
  aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodeValidatableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeValidatableResource
    data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
  aws_route.internet_access - *terraform.NodeValidatableResource
    aws_internet_gateway.gw - *terraform.NodeValidatableResource
  aws_route53_record.A - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
  aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_alb.alb - *terraform.NodeValidatableResource
    aws_route53_zone.zone - *terraform.NodeValidatableResource
  aws_route53_zone.zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
  aws_security_group.prometheus_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
  aws_security_group.web_access - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
  aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
  data.aws_instances.web_instances_b - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_route.internet_access - *terraform.NodeValidatableResource
    aws_route53_record.A - *terraform.NodeValidatableResource
    aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodeValidatableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb_listener.alb_listener_http - *terraform.NodeValidatableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodeValidatableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodeValidatableResource
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodeValidatableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodeValidatableResource
    aws_route.internet_access - *terraform.NodeValidatableResource
    aws_route53_record.A - *terraform.NodeValidatableResource
    aws_route53_record.A_www - *terraform.NodeValidatableResource
    aws_subnet.subnet_private_az_a - *terraform.NodeValidatableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
  provisioner.remote-exec - *terraform.NodeProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodeValidatableResource
    aws_instance.prometheus_b - *terraform.NodeValidatableResource
    aws_instance.web_a - *terraform.NodeValidatableResource
    aws_instance.web_b - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [DEBUG] Starting graph walk: walkValidate
2021/01/10 22:07:37 [TRACE] dag/walk: updating graph
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "output.name_servers"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_private_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_route53_zone.zone"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.private_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.ubuntu_user"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_security_group.prometheus_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.region"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.hosted_zone"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_public_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "provisioner.file"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "output.Grafana_URL"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_instance.web_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_lb_target_group_attachment.attach_web_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "output.alb_address"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_route.internet_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_route53_record.A"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_security_group.internal_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_iam_user.prometheus_iam"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.gw"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.instance"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "provisioner.local-exec"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.cert"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.public_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_private_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.instance_count"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_instance.prometheus_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.cidr_vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "provisioner.file (close)"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "root"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "provisioner.remote-exec"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.ami"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_public_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_alb.alb"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "data.aws_instances.web_instances_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_lb_target_group_attachment.attach_web_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_security_group.web_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.ansible_user"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "data.aws_instances.web_instances_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_instance.web_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_private_az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "output.Prometheus_URL"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_route53_record.A_www"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "provisioner.local-exec (close)"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_instance.prometheus_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "provider.aws"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.Prometheus_URL"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_instance.prometheus_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.instance"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "var.ubuntu_user"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "provisioner.file"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "provisioner.local-exec"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_security_group.internal_access" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_security_group.internal_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_a" waiting on "var.cidr_subnet_private_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "aws_instance.web_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "provisioner.remote-exec"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "var.instance"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route53_record.A_www"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route.internet_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.instance_count"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "provisioner.remote-exec"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.Grafana_URL"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.name_servers"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_route.internet_access" waiting on "aws_internet_gateway.gw"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_http" waiting on "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "var.instance"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_security_group.prometheus_access" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_iam_user_policy.prometheus_role" waiting on "aws_iam_user.prometheus_iam"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_instance.prometheus_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_key_pair.ovpDevOpsKey" waiting on "provider.aws"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "aws_security_group.prometheus_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.ami"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_route53_record.A" waiting on "aws_route53_zone.zone"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_lb_target_group_attachment.attach_web_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.private_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_b" waiting on "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_a" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "provisioner.local-exec"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "data.aws_instances.web_instances_b" waiting on "aws_instance.web_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_https" waiting on "var.cert"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "output.Prometheus_URL" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "aws_subnet.subnet_private_az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb.alb" waiting on "aws_security_group.web_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_lb_target_group_attachment.attach_web_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_instance.web_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_b" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "aws_security_group.prometheus_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.instance"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "var.ubuntu_user"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "provisioner.remote-exec"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "provisioner.local-exec"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.ami"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route53_record.A_www"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_security_group.prometheus_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "aws_instance.web_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_instance.prometheus_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.region"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_b" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.private_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "output.alb_address" waiting on "aws_alb.alb"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.ansible_user"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "output.name_servers" waiting on "aws_route53_zone.zone"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.ansible_user"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_security_group.web_access" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb_listener_rule.listener_rule_http" waiting on "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_route53_zone.zone" waiting on "var.hosted_zone"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.instance_count"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "aws_instance.prometheus_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb_target_group.alb_target_group_http" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route.internet_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "var.private_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "provisioner.file"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_lb_target_group_attachment.attach_web_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.alb_address"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_https" waiting on "aws_alb.alb"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_a" waiting on "var.cidr_subnet_public_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_https" waiting on "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb.alb" waiting on "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_instance.prometheus_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_a" waiting on "var.az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_security_group.web_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_b" waiting on "var.cidr_subnet_public_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_route53_record.A" waiting on "aws_alb.alb"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_b" waiting on "var.az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_b" waiting on "var.az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "data.aws_instances.web_instances_a" waiting on "aws_instance.web_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "var.private_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_a" waiting on "var.az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_lb_target_group_attachment.attach_web_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "aws_security_group.internal_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_a" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_b" waiting on "data.aws_instances.web_instances_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_a" waiting on "data.aws_instances.web_instances_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_instance.web_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_a" waiting on "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route53_record.A"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_http" waiting on "aws_alb.alb"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "aws_security_group.prometheus_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_b" waiting on "var.cidr_subnet_private_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "output.Grafana_URL" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_iam_user.prometheus_iam" waiting on "provider.aws"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_route53_zone.zone" waiting on "provider.aws"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_iam_access_key.prometheus_access_key" waiting on "aws_iam_user.prometheus_iam"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "root" waiting on "provisioner.local-exec (close)"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_key_pair.ovpDevOpsKey" waiting on "var.public_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_route53_record.A_www" waiting on "aws_route53_zone.zone"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_vpc.vpc" waiting on "provider.aws"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_vpc.vpc" waiting on "var.cidr_vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb.alb" waiting on "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_route53_record.A_www" waiting on "aws_alb.alb"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_internet_gateway.gw" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "provisioner.remote-exec"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route53_record.A"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "provisioner.local-exec"
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_security_group.prometheus_access", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_public_az_a", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_alb.alb", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_alb_listener_rule.listener_rule_http", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_instance.web_a", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "provisioner.local-exec (close)", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_iam_access_key.prometheus_access_key", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_vpc.vpc", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "data.aws_instances.web_instances_b", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_public_az_b", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "output.alb_address", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "output.name_servers", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_key_pair.ovpDevOpsKey", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_security_group.web_access", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_internet_gateway.gw", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_instance.prometheus_b", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_route53_record.A", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "output.Grafana_URL", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_iam_user.prometheus_iam", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_lb_target_group_attachment.attach_web_b", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "output.Prometheus_URL", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_private_az_b", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_alb_listener.alb_listener_https", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_route53_zone.zone", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "data.aws_instances.web_instances_a", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_route53_record.A_www", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_instance.web_b", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_private_az_a", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_alb_listener.alb_listener_http", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_instance.prometheus_a", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_security_group.internal_access", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_iam_user_policy.prometheus_role", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_alb_target_group.alb_target_group_http", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_lb_target_group_attachment.attach_web_a", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_route.internet_access", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.az_b"
2021/01/10 22:07:37 [TRACE] vertex "var.az_b": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.az_b": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.az_b
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.az_b
2021/01/10 22:07:37 [TRACE] vertex "var.az_b": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.instance"
2021/01/10 22:07:37 [TRACE] vertex "var.instance": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.instance": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.instance
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.instance
2021/01/10 22:07:37 [TRACE] vertex "var.instance": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "provisioner.local-exec"
2021/01/10 22:07:37 [TRACE] vertex "provisioner.local-exec": starting visit (*terraform.NodeProvisioner)
2021/01/10 22:07:37 [TRACE] vertex "provisioner.local-exec": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: provisioner.local-exec
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalInitProvisioner
2021-01-10T22:07:37.056Z [DEBUG] plugin: starting plugin: path=/bin/terraform args=[/bin/terraform, internal-plugin, provisioner, local-exec]
2021-01-10T22:07:37.057Z [DEBUG] plugin: plugin started: path=/bin/terraform pid=38070
2021-01-10T22:07:37.057Z [DEBUG] plugin: waiting for RPC address: path=/bin/terraform
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.cert"
2021/01/10 22:07:37 [TRACE] vertex "var.cert": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.cert": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.cert
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.cert
2021/01/10 22:07:37 [TRACE] vertex "var.cert": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.public_key"
2021/01/10 22:07:37 [TRACE] vertex "var.public_key": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.public_key": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.public_key
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.public_key
2021/01/10 22:07:37 [TRACE] vertex "var.public_key": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.cidr_subnet_private_b"
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_private_b": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_private_b": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.cidr_subnet_private_b
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.cidr_subnet_private_b
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_private_b": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.instance_count"
2021/01/10 22:07:37 [TRACE] vertex "var.instance_count": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.instance_count": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.instance_count
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.instance_count
2021/01/10 22:07:37 [TRACE] vertex "var.instance_count": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.cidr_vpc"
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_vpc": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_vpc": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.cidr_vpc
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.cidr_vpc
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_vpc": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.az_a"
2021/01/10 22:07:37 [TRACE] vertex "var.az_a": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.az_a": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.az_a
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.az_a
2021/01/10 22:07:37 [TRACE] vertex "var.az_a": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "provisioner.remote-exec"
2021/01/10 22:07:37 [TRACE] vertex "provisioner.remote-exec": starting visit (*terraform.NodeProvisioner)
2021/01/10 22:07:37 [TRACE] vertex "provisioner.remote-exec": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: provisioner.remote-exec
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalInitProvisioner
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.ami"
2021/01/10 22:07:37 [TRACE] vertex "var.ami": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.ami": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.ami
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.ami
2021/01/10 22:07:37 [TRACE] vertex "var.ami": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.cidr_subnet_public_a"
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_public_a": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_public_a": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.cidr_subnet_public_a
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.cidr_subnet_public_a
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_public_a": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.ansible_user"
2021/01/10 22:07:37 [TRACE] vertex "var.ansible_user": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.ansible_user": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.ansible_user
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.ansible_user
2021/01/10 22:07:37 [TRACE] vertex "var.ansible_user": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.cidr_subnet_private_a"
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_private_a": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_private_a": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.cidr_subnet_private_a
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.cidr_subnet_private_a
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_private_a": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.private_key"
2021/01/10 22:07:37 [TRACE] vertex "var.private_key": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.private_key": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.private_key
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.private_key
2021/01/10 22:07:37 [TRACE] vertex "var.private_key": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.ubuntu_user"
2021/01/10 22:07:37 [TRACE] vertex "var.ubuntu_user": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.ubuntu_user": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.ubuntu_user
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.ubuntu_user
2021/01/10 22:07:37 [TRACE] vertex "var.ubuntu_user": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.region"
2021/01/10 22:07:37 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.region": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.region
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.region
2021/01/10 22:07:37 [TRACE] vertex "var.region": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "provider.aws"
2021/01/10 22:07:37 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2021/01/10 22:07:37 [TRACE] vertex "provider.aws": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: provider.aws
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021-01-10T22:07:37.057Z [INFO]  plugin: configuring client automatic mTLS
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.hosted_zone"
2021/01/10 22:07:37 [TRACE] vertex "var.hosted_zone": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.hosted_zone": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.hosted_zone
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.hosted_zone
2021/01/10 22:07:37 [TRACE] vertex "var.hosted_zone": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.cidr_subnet_public_b"
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_public_b": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_public_b": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: var.cidr_subnet_public_b
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: var.cidr_subnet_public_b
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_public_b": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "provisioner.file"
2021/01/10 22:07:37 [TRACE] vertex "provisioner.file": starting visit (*terraform.NodeProvisioner)
2021/01/10 22:07:37 [TRACE] vertex "provisioner.file": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: provisioner.file
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalInitProvisioner
2021-01-10T22:07:37.122Z [DEBUG] plugin: starting plugin: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 args=[/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5]
2021-01-10T22:07:37.124Z [DEBUG] plugin: plugin started: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 pid=38085
2021-01-10T22:07:37.124Z [DEBUG] plugin: waiting for RPC address: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5
2021-01-10T22:07:37.124Z [DEBUG] plugin: using plugin: version=5
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: provisioner.local-exec
2021/01/10 22:07:37 [TRACE] vertex "provisioner.local-exec": visit complete
2021-01-10T22:07:37.124Z [DEBUG] plugin: starting plugin: path=/bin/terraform args=[/bin/terraform, internal-plugin, provisioner, remote-exec]
2021-01-10T22:07:37.128Z [DEBUG] plugin: plugin started: path=/bin/terraform pid=38086
2021-01-10T22:07:37.128Z [DEBUG] plugin: waiting for RPC address: path=/bin/terraform
2021-01-10T22:07:37.179Z [DEBUG] plugin: using plugin: version=5
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: provisioner.remote-exec
2021/01/10 22:07:37 [TRACE] vertex "provisioner.remote-exec": visit complete
2021-01-10T22:07:37.180Z [DEBUG] plugin: starting plugin: path=/bin/terraform args=[/bin/terraform, internal-plugin, provisioner, file]
2021-01-10T22:07:37.181Z [DEBUG] plugin: plugin started: path=/bin/terraform pid=38103
2021-01-10T22:07:37.181Z [DEBUG] plugin: waiting for RPC address: path=/bin/terraform
2021-01-10T22:07:37.214Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: configuring server automatic mTLS: timestamp=2021-01-10T22:07:37.214Z
2021-01-10T22:07:37.228Z [DEBUG] plugin: using plugin: version=5
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: provisioner.file
2021/01/10 22:07:37 [TRACE] vertex "provisioner.file": visit complete
2021-01-10T22:07:37.268Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: plugin address: address=/tmp/plugin752261770 network=unix timestamp=2021-01-10T22:07:37.268Z
2021-01-10T22:07:37.268Z [DEBUG] plugin: using plugin: version=5
2021/01/10 22:07:37 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2021/01/10 22:07:37 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2021/01/10 22:07:37 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2021/01/10 22:07:37 [TRACE] GRPCProvider: GetSchema
2021/01/10 22:07:37 [TRACE] GRPCProvider: PrepareProviderConfig
2021/01/10 22:07:37 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:37 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: provider.aws
2021/01/10 22:07:37 [TRACE] vertex "provider.aws": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] vertex "aws_vpc.vpc": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_vpc.vpc": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_vpc.vpc
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_route53_zone.zone"
2021/01/10 22:07:37 [TRACE] vertex "aws_route53_zone.zone": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_route53_zone.zone": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_route53_zone.zone
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_iam_user.prometheus_iam"
2021/01/10 22:07:37 [TRACE] vertex "aws_iam_user.prometheus_iam": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_iam_user.prometheus_iam": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_iam_user.prometheus_iam
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:37 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_iam_user.prometheus_iam
2021/01/10 22:07:37 [TRACE] vertex "aws_iam_user.prometheus_iam": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:37 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:37 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_vpc.vpc
2021/01/10 22:07:37 [TRACE] vertex "aws_vpc.vpc": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_security_group.prometheus_access"
2021/01/10 22:07:37 [TRACE] vertex "aws_security_group.prometheus_access": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_security_group.prometheus_access": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_security_group.prometheus_access
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_route53_zone.zone
2021/01/10 22:07:37 [TRACE] vertex "aws_route53_zone.zone": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "output.name_servers"
2021/01/10 22:07:37 [TRACE] vertex "output.name_servers": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:37 [TRACE] vertex "output.name_servers": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: output.name_servers
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:37 [TRACE] EvalWriteOutput: Removing output.name_servers from state (it is now null)
2021/01/10 22:07:37 [TRACE] EvalWriteOutput: Saving Create change for output.name_servers in changeset
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: output.name_servers
2021/01/10 22:07:37 [TRACE] vertex "output.name_servers": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:37 [TRACE] vertex "aws_iam_user_policy.prometheus_role": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_iam_user_policy.prometheus_role": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_iam_user_policy.prometheus_role
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:37 [TRACE] vertex "aws_subnet.subnet_public_az_a": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_subnet.subnet_public_az_a": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_subnet.subnet_public_az_a
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:37 [TRACE] vertex "aws_subnet.subnet_private_az_a": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_subnet.subnet_private_az_a": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_subnet.subnet_private_az_a
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:37 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_security_group.internal_access"
2021/01/10 22:07:37 [TRACE] vertex "aws_security_group.internal_access": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_security_group.internal_access": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_security_group.internal_access
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_subnet.subnet_private_az_b"
2021/01/10 22:07:37 [TRACE] vertex "aws_subnet.subnet_private_az_b": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_subnet.subnet_private_az_b": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_subnet.subnet_private_az_b
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_internet_gateway.gw"
2021/01/10 22:07:37 [TRACE] vertex "aws_internet_gateway.gw": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_internet_gateway.gw": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_internet_gateway.gw
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_security_group.web_access"
2021/01/10 22:07:37 [TRACE] vertex "aws_security_group.web_access": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_security_group.web_access": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_security_group.web_access
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:37 [TRACE] vertex "aws_subnet.subnet_public_az_b": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_subnet.subnet_public_az_b": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_subnet.subnet_public_az_b
2021-01-10T22:07:37.651Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:37 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:37.651Z
2021-01-10T22:07:37.651Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:37 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:37.651Z
2021-01-10T22:07:37.652Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:37 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:37.652Z
2021-01-10T22:07:37.652Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:37 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:37.652Z
2021-01-10T22:07:37.653Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:37 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:37.653Z
2021-01-10T22:07:37.653Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:37 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:37.653Z
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_internet_gateway.gw
2021/01/10 22:07:37 [TRACE] vertex "aws_internet_gateway.gw": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_route.internet_access"
2021/01/10 22:07:37 [TRACE] vertex "aws_route.internet_access": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_route.internet_access": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_route.internet_access
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.web_access
2021/01/10 22:07:37 [TRACE] vertex "aws_security_group.web_access": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:37 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.prometheus_access
2021/01/10 22:07:37 [TRACE] vertex "aws_security_group.prometheus_access": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_iam_user_policy.prometheus_role
2021/01/10 22:07:37 [TRACE] vertex "aws_iam_user_policy.prometheus_role": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_subnet.subnet_public_az_a
2021/01/10 22:07:37 [TRACE] vertex "aws_subnet.subnet_public_az_a": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_instance.prometheus_a"
2021/01/10 22:07:37 [TRACE] vertex "aws_instance.prometheus_a": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_instance.prometheus_a": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_instance.prometheus_a
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_subnet.subnet_private_az_a
2021/01/10 22:07:37 [TRACE] vertex "aws_subnet.subnet_private_az_a": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:37 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.internal_access
2021/01/10 22:07:37 [TRACE] vertex "aws_security_group.internal_access": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_subnet.subnet_private_az_b
2021/01/10 22:07:37 [TRACE] vertex "aws_subnet.subnet_private_az_b": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_instance.web_b"
2021/01/10 22:07:37 [TRACE] vertex "aws_instance.web_b": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_instance.web_b": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_instance.web_b
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_instance.web_a"
2021/01/10 22:07:37 [TRACE] vertex "aws_instance.web_a": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_instance.web_a": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_instance.web_a
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_route.internet_access
2021/01/10 22:07:37 [TRACE] vertex "aws_route.internet_access": visit complete
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_subnet.subnet_public_az_b
2021/01/10 22:07:37 [TRACE] vertex "aws_subnet.subnet_public_az_b": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_instance.prometheus_b"
2021/01/10 22:07:37 [TRACE] vertex "aws_instance.prometheus_b": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_instance.prometheus_b": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_instance.prometheus_b
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_alb.alb"
2021/01/10 22:07:37 [TRACE] vertex "aws_alb.alb": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_alb.alb": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_alb.alb
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_alb.alb
2021/01/10 22:07:37 [TRACE] vertex "aws_alb.alb": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "output.alb_address"
2021/01/10 22:07:37 [TRACE] vertex "output.alb_address": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:37 [TRACE] vertex "output.alb_address": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: output.alb_address
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:37 [TRACE] EvalWriteOutput: Removing output.alb_address from state (it is now null)
2021/01/10 22:07:37 [TRACE] EvalWriteOutput: Saving Create change for output.alb_address in changeset
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: output.alb_address
2021/01/10 22:07:37 [TRACE] vertex "output.alb_address": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:37 [TRACE] vertex "aws_alb_listener.alb_listener_http": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_alb_listener.alb_listener_http": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_alb_listener.alb_listener_http
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_route53_record.A"
2021/01/10 22:07:37 [TRACE] vertex "aws_route53_record.A": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_route53_record.A": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_route53_record.A
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:37 [TRACE] vertex "aws_alb_listener.alb_listener_https": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_alb_listener.alb_listener_https": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_alb_listener.alb_listener_https
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_route53_record.A_www"
2021/01/10 22:07:37 [TRACE] vertex "aws_route53_record.A_www": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_route53_record.A_www": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_route53_record.A_www
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_instance.prometheus_a
2021/01/10 22:07:37 [TRACE] vertex "aws_instance.prometheus_a": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_instance.web_a
2021/01/10 22:07:37 [TRACE] vertex "aws_instance.web_a": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_instance.web_b
2021/01/10 22:07:37 [TRACE] vertex "aws_instance.web_b": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "data.aws_instances.web_instances_b"
2021/01/10 22:07:37 [TRACE] vertex "data.aws_instances.web_instances_b": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "data.aws_instances.web_instances_b": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: data.aws_instances.web_instances_b
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "output.Prometheus_URL"
2021/01/10 22:07:37 [TRACE] vertex "output.Prometheus_URL": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:37 [TRACE] vertex "output.Prometheus_URL": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: output.Prometheus_URL
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:37 [TRACE] EvalWriteOutput: Removing output.Prometheus_URL from state (it is now null)
2021/01/10 22:07:37 [TRACE] EvalWriteOutput: Saving Create change for output.Prometheus_URL in changeset
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: output.Prometheus_URL
2021/01/10 22:07:37 [TRACE] vertex "output.Prometheus_URL": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "output.Grafana_URL"
2021/01/10 22:07:37 [TRACE] vertex "output.Grafana_URL": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:37 [TRACE] vertex "output.Grafana_URL": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: output.Grafana_URL
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:37 [TRACE] EvalWriteOutput: Removing output.Grafana_URL from state (it is now null)
2021/01/10 22:07:37 [TRACE] EvalWriteOutput: Saving Create change for output.Grafana_URL in changeset
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: output.Grafana_URL
2021/01/10 22:07:37 [TRACE] vertex "output.Grafana_URL": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "data.aws_instances.web_instances_a"
2021/01/10 22:07:37 [TRACE] vertex "data.aws_instances.web_instances_a": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "data.aws_instances.web_instances_a": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: data.aws_instances.web_instances_a
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvisioner
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateProvisioner
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_alb_listener.alb_listener_https
2021/01/10 22:07:37 [TRACE] vertex "aws_alb_listener.alb_listener_https": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:37 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_route53_record.A_www
2021/01/10 22:07:37 [TRACE] vertex "aws_route53_record.A_www": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_alb_listener.alb_listener_http
2021/01/10 22:07:37 [TRACE] vertex "aws_alb_listener.alb_listener_http": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_route53_record.A
2021/01/10 22:07:37 [TRACE] vertex "aws_route53_record.A": visit complete
2021-01-10T22:07:37.673Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:37 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:37.673Z
2021-01-10T22:07:37.673Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:37 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:37.673Z
2021-01-10T22:07:37.673Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:37 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:37.673Z
2021-01-10T22:07:37.673Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:37 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:37.673Z
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: data.aws_instances.web_instances_a
2021/01/10 22:07:37 [TRACE] vertex "data.aws_instances.web_instances_a": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_lb_target_group_attachment.attach_web_a"
2021/01/10 22:07:37 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_lb_target_group_attachment.attach_web_a
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_instance.prometheus_b
2021/01/10 22:07:37 [TRACE] vertex "aws_instance.prometheus_b": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "provisioner.file (close)"
2021/01/10 22:07:37 [TRACE] vertex "provisioner.file (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2021/01/10 22:07:37 [TRACE] vertex "provisioner.file (close)": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: provisioner.file (close)
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalCloseProvisioner
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:37 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: data.aws_instances.web_instances_b
2021/01/10 22:07:37 [TRACE] vertex "data.aws_instances.web_instances_b": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "aws_lb_target_group_attachment.attach_web_b"
2021/01/10 22:07:37 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b": starting visit (*terraform.NodeValidatableResource)
2021/01/10 22:07:37 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: aws_lb_target_group_attachment.attach_web_b
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/01/10 22:07:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "provisioner.remote-exec (close)"
2021/01/10 22:07:37 [TRACE] vertex "provisioner.remote-exec (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2021/01/10 22:07:37 [TRACE] vertex "provisioner.remote-exec (close)": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: provisioner.remote-exec (close)
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalCloseProvisioner
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "provisioner.local-exec (close)"
2021/01/10 22:07:37 [TRACE] vertex "provisioner.local-exec (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2021/01/10 22:07:37 [TRACE] vertex "provisioner.local-exec (close)": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: provisioner.local-exec (close)
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalCloseProvisioner
2021-01-10T22:07:37.679Z [DEBUG] plugin: plugin process exited: path=/bin/terraform pid=38103
2021-01-10T22:07:37.679Z [DEBUG] plugin: plugin exited
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: provisioner.file (close)
2021/01/10 22:07:37 [TRACE] vertex "provisioner.file (close)": visit complete
2021-01-10T22:07:37.682Z [DEBUG] plugin: plugin process exited: path=/bin/terraform pid=38086
2021-01-10T22:07:37.682Z [DEBUG] plugin: plugin exited
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: provisioner.remote-exec (close)
2021/01/10 22:07:37 [TRACE] vertex "provisioner.remote-exec (close)": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_lb_target_group_attachment.attach_web_a
2021/01/10 22:07:37 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a": visit complete
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: aws_lb_target_group_attachment.attach_web_b
2021/01/10 22:07:37 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/01/10 22:07:37 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/01/10 22:07:37 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2021/01/10 22:07:37 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "provider.aws (close)"
2021/01/10 22:07:37 [TRACE] vertex "provider.aws (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/01/10 22:07:37 [TRACE] vertex "provider.aws (close)": evaluating
2021/01/10 22:07:37 [TRACE] [walkValidate] Entering eval tree: provider.aws (close)
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/01/10 22:07:37 [TRACE] GRPCProvider: Close
2021-01-10T22:07:37.689Z [DEBUG] plugin: plugin process exited: path=/bin/terraform pid=38070
2021-01-10T22:07:37.689Z [DEBUG] plugin: plugin exited
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: provisioner.local-exec (close)
2021/01/10 22:07:37 [TRACE] vertex "provisioner.local-exec (close)": visit complete
2021-01-10T22:07:37.690Z [DEBUG] plugin: plugin process exited: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 pid=38085
2021-01-10T22:07:37.690Z [DEBUG] plugin: plugin exited
2021/01/10 22:07:37 [TRACE] [walkValidate] Exiting eval tree: provider.aws (close)
2021/01/10 22:07:37 [TRACE] vertex "provider.aws (close)": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "root"
2021/01/10 22:07:37 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/01/10 22:07:37 [TRACE] vertex "root": visit complete
2021/01/10 22:07:37 [INFO] backend/local: apply calling Refresh
2021/01/10 22:07:37 [INFO] terraform: building graph: GraphTypeRefresh
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/01/10 22:07:37 [TRACE] ConfigTransformer: Starting for path: 
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_alb.alb - *terraform.NodeRefreshableManagedResource
  aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResource
  aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
  aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
  aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResource
  aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
  aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResource
  aws_instance.web_a - *terraform.NodeRefreshableManagedResource
  aws_instance.web_b - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeRefreshableManagedResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeRefreshableManagedResource
  aws_route.internet_access - *terraform.NodeRefreshableManagedResource
  aws_route53_record.A - *terraform.NodeRefreshableManagedResource
  aws_route53_record.A_www - *terraform.NodeRefreshableManagedResource
  aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
  aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
  aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/01/10 22:07:37 [TRACE] ConfigTransformer: Starting for path: 
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_alb.alb - *terraform.NodeRefreshableManagedResource
  aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResource
  aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
  aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
  aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResource
  aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
  aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResource
  aws_instance.web_a - *terraform.NodeRefreshableManagedResource
  aws_instance.web_b - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeRefreshableManagedResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeRefreshableManagedResource
  aws_route.internet_access - *terraform.NodeRefreshableManagedResource
  aws_route53_record.A - *terraform.NodeRefreshableManagedResource
  aws_route53_record.A_www - *terraform.NodeRefreshableManagedResource
  aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
  aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
  aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
  data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
  data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.StateTransformer
2021/01/10 22:07:37 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.web_access" (*terraform.NodeRefreshableManagedResource) config from security_groups.tf:2,1-43
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.prometheus_b" (*terraform.NodeRefreshableManagedResource) config from prometheus.tf:48,1-39
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_target_group.alb_target_group_http" (*terraform.NodeRefreshableManagedResource) config from load_balancer.tf:50,1-56
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_internet_gateway.gw" (*terraform.NodeRefreshableManagedResource) config from networking.tf:7,1-37
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.internal_access" (*terraform.NodeRefreshableManagedResource) config from security_groups.tf:37,1-48
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.web_a" (*terraform.NodeRefreshableManagedResource) config from main.tf:2,1-32
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.web_b" (*terraform.NodeRefreshableManagedResource) config from main.tf:41,1-32
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_public_az_b" (*terraform.NodeRefreshableManagedResource) config from networking.tf:47,1-43
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb.alb" (*terraform.NodeRefreshableManagedResource) config from load_balancer.tf:2,1-25
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user.prometheus_iam" (*terraform.NodeRefreshableManagedResource) config from prometheus_iam.tf:1,1-41
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.prometheus_access" (*terraform.NodeRefreshableManagedResource) config from security_groups.tf:60,1-50
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lb_target_group_attachment.attach_web_a" (*terraform.NodeRefreshableManagedResource) config from load_balancer.tf:67,1-57
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_private_az_b" (*terraform.NodeRefreshableManagedResource) config from networking.tf:60,1-44
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_listener_rule.listener_rule_http" (*terraform.NodeRefreshableManagedResource) config from load_balancer.tf:34,1-54
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_private_az_a" (*terraform.NodeRefreshableManagedResource) config from networking.tf:55,1-44
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.A" (*terraform.NodeRefreshableManagedResource) config from route_53.tf:8,1-34
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_access_key.prometheus_access_key" (*terraform.NodeRefreshableManagedResource) config from prometheus_iam.tf:6,1-54
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_listener.alb_listener_http" (*terraform.NodeRefreshableManagedResource) config from load_balancer.tf:9,1-48
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.prometheus_a" (*terraform.NodeRefreshableManagedResource) config from prometheus.tf:3,1-39
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.A_www" (*terraform.NodeRefreshableManagedResource) config from route_53.tf:20,1-38
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_instances.web_instances_a" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:80, Column:1, Byte:2458}, End:hcl.Pos{Line:80, Column:39, Byte:2496}}
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_public_az_a" (*terraform.NodeRefreshableManagedResource) config from networking.tf:41,1-43
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_zone.zone" (*terraform.NodeRefreshableManagedResource) config from route_53.tf:2,1-35
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route.internet_access" (*terraform.NodeRefreshableManagedResource) config from networking.tf:34,1-39
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_listener.alb_listener_https" (*terraform.NodeRefreshableManagedResource) config from load_balancer.tf:20,1-49
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc.vpc" (*terraform.NodeRefreshableManagedResource) config from networking.tf:2,1-25
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lb_target_group_attachment.attach_web_b" (*terraform.NodeRefreshableManagedResource) config from load_balancer.tf:75,1-57
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user_policy.prometheus_role" (*terraform.NodeRefreshableManagedResource) config from prometheus_iam.tf:10,1-49
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.ovpDevOpsKey" (*terraform.NodeRefreshableManagedResource) config from key_pair.tf:2,1-39
2021/01/10 22:07:37 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_instances.web_instances_b" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:92, Column:1, Byte:2675}, End:hcl.Pos{Line:92, Column:39, Byte:2713}}
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_alb.alb - *terraform.NodeRefreshableManagedResource
  aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResource
  aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
  aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
  aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResource
  aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
  aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResource
  aws_instance.web_a - *terraform.NodeRefreshableManagedResource
  aws_instance.web_b - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeRefreshableManagedResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeRefreshableManagedResource
  aws_route.internet_access - *terraform.NodeRefreshableManagedResource
  aws_route53_record.A - *terraform.NodeRefreshableManagedResource
  aws_route53_record.A_www - *terraform.NodeRefreshableManagedResource
  aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
  aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
  aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
  data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
  data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_alb.alb - *terraform.NodeRefreshableManagedResource
  aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResource
  aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
  aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
  aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResource
  aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
  aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResource
  aws_instance.web_a - *terraform.NodeRefreshableManagedResource
  aws_instance.web_b - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeRefreshableManagedResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeRefreshableManagedResource
  aws_route.internet_access - *terraform.NodeRefreshableManagedResource
  aws_route53_record.A - *terraform.NodeRefreshableManagedResource
  aws_route53_record.A_www - *terraform.NodeRefreshableManagedResource
  aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
  aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
  aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
  data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
  data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/01/10 22:07:37 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from provider.tf:2,1-15
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_alb.alb - *terraform.NodeRefreshableManagedResource
  aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResource
  aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
  aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
  aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResource
  aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
  aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResource
  aws_instance.web_a - *terraform.NodeRefreshableManagedResource
  aws_instance.web_b - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeRefreshableManagedResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeRefreshableManagedResource
  aws_route.internet_access - *terraform.NodeRefreshableManagedResource
  aws_route53_record.A - *terraform.NodeRefreshableManagedResource
  aws_route53_record.A_www - *terraform.NodeRefreshableManagedResource
  aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
  aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
  aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
  data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
  data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_instance.prometheus_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_alb_target_group.alb_target_group_http is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_internet_gateway.gw is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_security_group.internal_access is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_instance.web_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_instance.web_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_subnet.subnet_public_az_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_alb.alb is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_iam_user.prometheus_iam is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_security_group.prometheus_access is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_lb_target_group_attachment.attach_web_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_subnet.subnet_private_az_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_alb_listener_rule.listener_rule_http is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_subnet.subnet_private_az_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_route53_record.A is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_iam_access_key.prometheus_access_key is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_alb_listener.alb_listener_http is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_instance.prometheus_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_route53_record.A_www is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: data.aws_instances.web_instances_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_subnet.subnet_public_az_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_route53_zone.zone is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_route.internet_access is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_alb_listener.alb_listener_https is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_vpc.vpc is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_lb_target_group_attachment.attach_web_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_iam_user_policy.prometheus_role is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_key_pair.ovpDevOpsKey is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: data.aws_instances.web_instances_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: aws_security_group.web_access is provided by provider.aws or inherited equivalent
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_record.A
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_route53_record.A" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route.internet_access
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_route.internet_access" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_alb_target_group.alb_target_group_http" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.prometheus_access
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_security_group.prometheus_access" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_public_az_a
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_subnet.subnet_public_az_a" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_key_pair.ovpDevOpsKey" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_public_az_b
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_subnet.subnet_public_az_b" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lb_target_group_attachment.attach_web_a
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_lb_target_group_attachment.attach_web_a" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_private_az_b
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_subnet.subnet_private_az_b" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_vpc.vpc
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_vpc.vpc" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lb_target_group_attachment.attach_web_b
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_lb_target_group_attachment.attach_web_b" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_instances.web_instances_b
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "data.aws_instances.web_instances_b" (*terraform.NodeRefreshableDataResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_internet_gateway.gw
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_internet_gateway.gw" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_user.prometheus_iam
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_iam_user.prometheus_iam" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_user_policy.prometheus_role
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_iam_user_policy.prometheus_role" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.web_access
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_security_group.web_access" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.web_a
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_instance.web_a" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_alb_listener_rule.listener_rule_http" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.internal_access
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_security_group.internal_access" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_private_az_a
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_subnet.subnet_private_az_a" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_listener.alb_listener_http
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_alb_listener.alb_listener_http" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.prometheus_a
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_instance.prometheus_a" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_instances.web_instances_a
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "data.aws_instances.web_instances_a" (*terraform.NodeRefreshableDataResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_listener.alb_listener_https
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_alb_listener.alb_listener_https" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.prometheus_b
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_instance.prometheus_b" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.web_b
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_instance.web_b" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_record.A_www
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_route53_record.A_www" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_zone.zone
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_route53_zone.zone" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb.alb
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_alb.alb" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:37 [DEBUG] ProviderTransformer: "aws_iam_access_key.prometheus_access_key" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_alb.alb - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.web_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.web_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route.internet_access - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A_www - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/01/10 22:07:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_alb.alb - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.web_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.web_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route.internet_access - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A_www - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_instances.web_instances_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lb_target_group_attachment.attach_web_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user_policy.prometheus_role
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.web_access
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.prometheus_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to aws_instance.prometheus_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.prometheus_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.prometheus_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.web_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.web_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.web_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.web_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.web_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.web_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_internet_gateway.gw
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.internal_access
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_public_az_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb.alb
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user.prometheus_iam
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_private_az_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.A
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.prometheus_access
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lb_target_group_attachment.attach_web_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_private_az_b
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.A_www
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_instances.web_instances_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_listener.alb_listener_http
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.prometheus_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to aws_instance.prometheus_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.prometheus_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.prometheus_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_listener.alb_listener_https
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc.vpc
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_public_az_a
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_zone.zone
2021/01/10 22:07:37 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route.internet_access
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_instance.prometheus_b" references: [aws_security_group.prometheus_access aws_subnet.subnet_public_az_b var.instance aws_key_pair.ovpDevOpsKey var.ubuntu_user var.private_key var.private_key var.ubuntu_user aws_iam_access_key.prometheus_access_key aws_iam_access_key.prometheus_access_key var.private_key aws_iam_access_key.prometheus_access_key aws_iam_access_key.prometheus_access_key]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.az_a" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.instance" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_instance.web_b" references: [var.instance_count aws_subnet.subnet_private_az_b var.ami var.az_b aws_security_group.internal_access aws_security_group.prometheus_access aws_key_pair.ovpDevOpsKey var.instance var.ansible_user var.private_key var.private_key]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "output.name_servers" references: [aws_route53_zone.zone]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_alb_target_group.alb_target_group_http" references: [aws_vpc.vpc]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_internet_gateway.gw" references: [aws_vpc.vpc]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_security_group.internal_access" references: [aws_vpc.vpc]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_instance.web_a" references: [var.instance_count aws_subnet.subnet_public_az_a var.instance var.ami var.az_a aws_security_group.internal_access aws_security_group.web_access aws_security_group.prometheus_access aws_key_pair.ovpDevOpsKey var.private_key var.ansible_user var.private_key]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.private_key" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.public_key" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.cidr_subnet_private_b" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.cidr_vpc" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_public_az_b" references: [aws_vpc.vpc var.cidr_subnet_public_b var.az_b]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_alb.alb" references: [aws_subnet.subnet_public_az_a aws_subnet.subnet_public_az_b aws_security_group.web_access]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_iam_user.prometheus_iam" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.instance_count" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_private_az_a" references: [var.az_a aws_vpc.vpc var.cidr_subnet_private_a]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_route53_record.A" references: [aws_route53_zone.zone var.hosted_zone aws_alb.alb aws_alb.alb]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.hosted_zone" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_security_group.prometheus_access" references: [aws_vpc.vpc]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_lb_target_group_attachment.attach_web_a" references: [var.instance_count data.aws_instances.web_instances_a aws_alb_target_group.alb_target_group_http]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_private_az_b" references: [aws_vpc.vpc var.cidr_subnet_private_b var.az_b]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_alb_listener_rule.listener_rule_http" references: [aws_alb_listener.alb_listener_https aws_alb_target_group.alb_target_group_http]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "data.aws_instances.web_instances_a" references: [aws_instance.web_a]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.region" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.ami" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.cert" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_iam_access_key.prometheus_access_key" references: [aws_iam_user.prometheus_iam]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_alb_listener.alb_listener_http" references: [aws_alb.alb aws_alb_target_group.alb_target_group_http]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_instance.prometheus_a" references: [aws_key_pair.ovpDevOpsKey aws_security_group.prometheus_access aws_subnet.subnet_public_az_a var.instance var.private_key var.ubuntu_user var.private_key var.ubuntu_user aws_iam_access_key.prometheus_access_key aws_iam_access_key.prometheus_access_key var.private_key aws_iam_access_key.prometheus_access_key aws_iam_access_key.prometheus_access_key]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_route53_record.A_www" references: [var.hosted_zone aws_route53_zone.zone aws_alb.alb aws_alb.alb]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.ansible_user" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_vpc.vpc" references: [var.cidr_vpc]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.ubuntu_user" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.cidr_subnet_public_b" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_public_az_a" references: [var.az_a aws_vpc.vpc var.cidr_subnet_public_a]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_route53_zone.zone" references: [var.hosted_zone]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_route.internet_access" references: [aws_vpc.vpc aws_internet_gateway.gw]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_alb_listener.alb_listener_https" references: [var.cert aws_alb.alb aws_alb_target_group.alb_target_group_http]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.az_b" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.cidr_subnet_public_a" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "output.Grafana_URL" references: [aws_instance.prometheus_a]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "output.Prometheus_URL" references: [aws_instance.prometheus_a]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_lb_target_group_attachment.attach_web_b" references: [var.instance_count aws_alb_target_group.alb_target_group_http data.aws_instances.web_instances_b]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_iam_user_policy.prometheus_role" references: [aws_iam_user.prometheus_iam]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_key_pair.ovpDevOpsKey" references: [var.public_key]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "data.aws_instances.web_instances_b" references: [aws_instance.web_b]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "aws_security_group.web_access" references: [aws_vpc.vpc]
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "var.cidr_subnet_private_a" references: []
2021/01/10 22:07:37 [DEBUG] ReferenceTransformer: "output.alb_address" references: [aws_alb.alb]
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResource
    aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResource
    aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access - *terraform.NodeRefreshableManagedResource
    aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_record.A_www - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
    aws_instance.web_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
    aws_instance.web_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_alb_target_group.alb_target_group_http depends on [aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_internet_gateway.gw depends on [aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_security_group.internal_access depends on [aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_instance.web_a depends on [aws_key_pair.ovpDevOpsKey aws_security_group.internal_access aws_security_group.prometheus_access aws_security_group.web_access aws_subnet.subnet_public_az_a aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_instance.web_b depends on [aws_key_pair.ovpDevOpsKey aws_security_group.internal_access aws_security_group.prometheus_access aws_subnet.subnet_private_az_b aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_subnet.subnet_public_az_b depends on [aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_alb.alb depends on [aws_security_group.web_access aws_subnet.subnet_public_az_a aws_subnet.subnet_public_az_b aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_iam_user.prometheus_iam depends on []
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_security_group.prometheus_access depends on [aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_lb_target_group_attachment.attach_web_a depends on [aws_alb_target_group.alb_target_group_http aws_instance.web_a aws_key_pair.ovpDevOpsKey aws_security_group.internal_access aws_security_group.prometheus_access aws_security_group.web_access aws_subnet.subnet_public_az_a aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_subnet.subnet_private_az_b depends on [aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_alb_listener_rule.listener_rule_http depends on [aws_alb.alb aws_alb_listener.alb_listener_https aws_alb_target_group.alb_target_group_http aws_security_group.web_access aws_subnet.subnet_public_az_a aws_subnet.subnet_public_az_b aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_subnet.subnet_private_az_a depends on [aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_route53_record.A depends on [aws_alb.alb aws_route53_zone.zone aws_security_group.web_access aws_subnet.subnet_public_az_a aws_subnet.subnet_public_az_b aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_iam_access_key.prometheus_access_key depends on [aws_iam_user.prometheus_iam]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_alb_listener.alb_listener_http depends on [aws_alb.alb aws_alb_target_group.alb_target_group_http aws_security_group.web_access aws_subnet.subnet_public_az_a aws_subnet.subnet_public_az_b aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_instance.prometheus_a depends on [aws_iam_access_key.prometheus_access_key aws_iam_user.prometheus_iam aws_key_pair.ovpDevOpsKey aws_security_group.prometheus_access aws_subnet.subnet_public_az_a aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_route53_record.A_www depends on [aws_alb.alb aws_route53_zone.zone aws_security_group.web_access aws_subnet.subnet_public_az_a aws_subnet.subnet_public_az_b aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_subnet.subnet_public_az_a depends on [aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_route53_zone.zone depends on []
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_route.internet_access depends on [aws_internet_gateway.gw aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_alb_listener.alb_listener_https depends on [aws_alb.alb aws_alb_target_group.alb_target_group_http aws_security_group.web_access aws_subnet.subnet_public_az_a aws_subnet.subnet_public_az_b aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_vpc.vpc depends on []
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_lb_target_group_attachment.attach_web_b depends on [aws_alb_target_group.alb_target_group_http aws_instance.web_b aws_key_pair.ovpDevOpsKey aws_security_group.internal_access aws_security_group.prometheus_access aws_subnet.subnet_private_az_b aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_iam_user_policy.prometheus_role depends on [aws_iam_user.prometheus_iam]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_key_pair.ovpDevOpsKey depends on []
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_security_group.web_access depends on [aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] AttachDependenciesTransformer: aws_instance.prometheus_b depends on [aws_iam_access_key.prometheus_access_key aws_iam_user.prometheus_iam aws_key_pair.ovpDevOpsKey aws_security_group.prometheus_access aws_subnet.subnet_public_az_b aws_vpc.vpc]
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResource
    aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResource
    aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access - *terraform.NodeRefreshableManagedResource
    aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_record.A_www - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
    aws_instance.web_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
    aws_instance.web_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResource
    aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
    aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResource
    aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
    aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResource
    aws_instance.web_a - *terraform.NodeRefreshableManagedResource
    aws_instance.web_b - *terraform.NodeRefreshableManagedResource
    aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodeRefreshableManagedResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodeRefreshableManagedResource
    aws_route.internet_access - *terraform.NodeRefreshableManagedResource
    aws_route53_record.A - *terraform.NodeRefreshableManagedResource
    aws_route53_record.A_www - *terraform.NodeRefreshableManagedResource
    aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
    aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
    data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResource
    aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResource
    aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access - *terraform.NodeRefreshableManagedResource
    aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_record.A_www - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
    aws_instance.web_a - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
    aws_instance.web_b - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResource
    aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
    aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResource
    aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
    aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResource
    aws_instance.web_a - *terraform.NodeRefreshableManagedResource
    aws_instance.web_b - *terraform.NodeRefreshableManagedResource
    aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodeRefreshableManagedResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodeRefreshableManagedResource
    aws_route.internet_access - *terraform.NodeRefreshableManagedResource
    aws_route53_record.A - *terraform.NodeRefreshableManagedResource
    aws_route53_record.A_www - *terraform.NodeRefreshableManagedResource
    aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
    aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
    data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    provider.aws (close) - *terraform.graphNodeCloseProvider
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/01/10 22:07:37 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
  aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
  aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResource
    aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
  aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResource
    aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResource
  aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodeRefreshableManagedResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodeRefreshableManagedResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResource
    data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
  aws_route.internet_access - *terraform.NodeRefreshableManagedResource
    aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResource
  aws_route53_record.A - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
  aws_route53_record.A_www - *terraform.NodeRefreshableManagedResource
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
    aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
  aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
  aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
  aws_security_group.web_access - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
  aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResource
    aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResource
    aws_instance.web_a - *terraform.NodeRefreshableManagedResource
  data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResource
    aws_instance.web_b - *terraform.NodeRefreshableManagedResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodeRefreshableManagedResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResource
    aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResource
    aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResource
    aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodeRefreshableManagedResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodeRefreshableManagedResource
    aws_route.internet_access - *terraform.NodeRefreshableManagedResource
    aws_route53_record.A - *terraform.NodeRefreshableManagedResource
    aws_route53_record.A_www - *terraform.NodeRefreshableManagedResource
    aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResource
  root - terraform.graphNodeRoot
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    provider.aws (close) - *terraform.graphNodeCloseProvider
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:37 [DEBUG] Starting graph walk: walkRefresh
2021/01/10 22:07:37 [TRACE] dag/walk: updating graph
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.ansible_user"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "data.aws_instances.web_instances_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_instance.prometheus_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.hosted_zone"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_instance.prometheus_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_security_group.internal_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_route.internet_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "root"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "output.name_servers"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "data.aws_instances.web_instances_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_route53_zone.zone"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.instance"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.cidr_vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_lb_target_group_attachment.attach_web_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.gw"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_public_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_iam_user.prometheus_iam"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.public_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_private_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.instance_count"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_security_group.prometheus_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "provider.aws"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_instance.web_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.private_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_security_group.web_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_lb_target_group_attachment.attach_web_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.ubuntu_user"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.cert"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_public_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "output.Grafana_URL"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_instance.web_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.ami"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_route53_record.A_www"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "output.Prometheus_URL"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_alb.alb"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "output.alb_address"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.region"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_private_az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "aws_route53_record.A"
2021/01/10 22:07:37 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_private_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_b" waiting on "var.az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_https" waiting on "var.cert"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "var.ubuntu_user"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_iam_access_key.prometheus_access_key" waiting on "aws_iam_user.prometheus_iam"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_http" waiting on "aws_alb.alb"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_lb_target_group_attachment.attach_web_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_security_group.web_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_a" waiting on "var.cidr_subnet_public_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "output.name_servers" waiting on "aws_route53_zone.zone"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "var.instance"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_a" waiting on "var.cidr_subnet_private_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_a" waiting on "var.az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_security_group.internal_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.ami"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb_listener_rule.listener_rule_http" waiting on "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_key_pair.ovpDevOpsKey" waiting on "provider.aws"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route.internet_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "root" waiting on "output.name_servers"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.instance"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_b" waiting on "var.cidr_subnet_private_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_internet_gateway.gw" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.private_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "aws_security_group.prometheus_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_vpc.vpc" waiting on "provider.aws"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_iam_user_policy.prometheus_role" waiting on "aws_iam_user.prometheus_iam"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_route.internet_access" waiting on "aws_internet_gateway.gw"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb_target_group.alb_target_group_http" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "output.Prometheus_URL" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.instance_count"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_route53_record.A_www" waiting on "aws_alb.alb"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_http" waiting on "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_lb_target_group_attachment.attach_web_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "var.instance"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_iam_user.prometheus_iam" waiting on "provider.aws"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_vpc.vpc" waiting on "var.cidr_vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb.alb" waiting on "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "aws_security_group.internal_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_b" waiting on "var.cidr_subnet_public_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "var.private_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_instance.prometheus_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "root" waiting on "output.Grafana_URL"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.ansible_user"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.instance_count"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_a" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.instance"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route53_record.A_www"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_b" waiting on "var.az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_security_group.internal_access" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb.alb" waiting on "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "output.Grafana_URL" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "root" waiting on "output.Prometheus_URL"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "aws_security_group.prometheus_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_b" waiting on "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.ami"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_https" waiting on "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_b" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_a" waiting on "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_route53_zone.zone" waiting on "var.hosted_zone"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "data.aws_instances.web_instances_b" waiting on "aws_instance.web_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_a" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "data.aws_instances.web_instances_a" waiting on "aws_instance.web_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_key_pair.ovpDevOpsKey" waiting on "var.public_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb.alb" waiting on "aws_security_group.web_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_security_group.web_access" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.ansible_user"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_b" waiting on "data.aws_instances.web_instances_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "aws_subnet.subnet_private_az_b"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "var.private_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_route53_record.A" waiting on "aws_route53_zone.zone"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_security_group.prometheus_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "aws_security_group.prometheus_access"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_a" waiting on "data.aws_instances.web_instances_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "var.ubuntu_user"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.private_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "output.alb_address" waiting on "aws_alb.alb"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_route53_record.A_www" waiting on "aws_route53_zone.zone"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_route53_zone.zone" waiting on "provider.aws"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "root" waiting on "output.alb_address"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_a" waiting on "var.az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_https" waiting on "aws_alb.alb"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_security_group.prometheus_access" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route53_record.A"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_route53_record.A" waiting on "aws_alb.alb"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_b" waiting on "aws_vpc.vpc"
2021/01/10 22:07:37 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.region"
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_private_az_a", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_alb_listener_rule.listener_rule_http", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_vpc.vpc", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_alb_listener.alb_listener_http", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "output.name_servers", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "output.Prometheus_URL", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_route53_record.A_www", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_alb_listener.alb_listener_https", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_iam_access_key.prometheus_access_key", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_public_az_a", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_key_pair.ovpDevOpsKey", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "data.aws_instances.web_instances_b", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_internet_gateway.gw", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_iam_user_policy.prometheus_role", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_alb_target_group.alb_target_group_http", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_public_az_b", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_private_az_b", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_instance.prometheus_b", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_route.internet_access", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_lb_target_group_attachment.attach_web_b", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_security_group.web_access", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "output.alb_address", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_instance.web_a", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_instance.web_b", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_instance.prometheus_a", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_iam_user.prometheus_iam", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "output.Grafana_URL", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "data.aws_instances.web_instances_a", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_route53_record.A", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_route53_zone.zone", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_security_group.prometheus_access", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_alb.alb", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_security_group.internal_access", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: dependencies changed for "aws_lb_target_group_attachment.attach_web_a", sending new deps
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.ami"
2021/01/10 22:07:37 [TRACE] vertex "var.ami": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.ami": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.ami
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.ami
2021/01/10 22:07:37 [TRACE] vertex "var.ami": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.region"
2021/01/10 22:07:37 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.region": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.region
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.region
2021/01/10 22:07:37 [TRACE] vertex "var.region": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.az_b"
2021/01/10 22:07:37 [TRACE] vertex "var.az_b": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.az_b": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.az_b
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.az_b
2021/01/10 22:07:37 [TRACE] vertex "var.az_b": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.cidr_subnet_private_a"
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_private_a": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_private_a": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.cidr_subnet_private_a
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.cidr_subnet_private_a
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_private_a": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.ansible_user"
2021/01/10 22:07:37 [TRACE] vertex "var.ansible_user": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.ansible_user": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.ansible_user
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.ansible_user
2021/01/10 22:07:37 [TRACE] vertex "var.ansible_user": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.hosted_zone"
2021/01/10 22:07:37 [TRACE] vertex "var.hosted_zone": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.hosted_zone": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.hosted_zone
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.hosted_zone
2021/01/10 22:07:37 [TRACE] vertex "var.hosted_zone": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.instance"
2021/01/10 22:07:37 [TRACE] vertex "var.instance": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.instance": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.instance
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.instance
2021/01/10 22:07:37 [TRACE] vertex "var.instance": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.cidr_vpc"
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_vpc": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_vpc": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.cidr_vpc
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.cidr_vpc
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_vpc": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.cidr_subnet_public_a"
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_public_a": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_public_a": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.cidr_subnet_public_a
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.cidr_subnet_public_a
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_public_a": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.public_key"
2021/01/10 22:07:37 [TRACE] vertex "var.public_key": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.public_key": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.public_key
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.public_key
2021/01/10 22:07:37 [TRACE] vertex "var.public_key": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.cidr_subnet_private_b"
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_private_b": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_private_b": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.cidr_subnet_private_b
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.cidr_subnet_private_b
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_private_b": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "provider.aws"
2021/01/10 22:07:37 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2021/01/10 22:07:37 [TRACE] vertex "provider.aws": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: provider.aws
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021-01-10T22:07:37.721Z [INFO]  plugin: configuring client automatic mTLS
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.private_key"
2021/01/10 22:07:37 [TRACE] vertex "var.private_key": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.private_key": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.private_key
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.private_key
2021/01/10 22:07:37 [TRACE] vertex "var.private_key": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.instance_count"
2021/01/10 22:07:37 [TRACE] vertex "var.instance_count": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.instance_count": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.instance_count
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.instance_count
2021/01/10 22:07:37 [TRACE] vertex "var.instance_count": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.ubuntu_user"
2021/01/10 22:07:37 [TRACE] vertex "var.ubuntu_user": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.ubuntu_user": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.ubuntu_user
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.ubuntu_user
2021/01/10 22:07:37 [TRACE] vertex "var.ubuntu_user": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.az_a"
2021/01/10 22:07:37 [TRACE] vertex "var.az_a": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.az_a": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.az_a
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.az_a
2021/01/10 22:07:37 [TRACE] vertex "var.az_a": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.cidr_subnet_public_b"
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_public_b": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_public_b": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.cidr_subnet_public_b
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.cidr_subnet_public_b
2021/01/10 22:07:37 [TRACE] vertex "var.cidr_subnet_public_b": visit complete
2021/01/10 22:07:37 [TRACE] dag/walk: visiting "var.cert"
2021/01/10 22:07:37 [TRACE] vertex "var.cert": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:37 [TRACE] vertex "var.cert": evaluating
2021/01/10 22:07:37 [TRACE] [walkRefresh] Entering eval tree: var.cert
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] [walkRefresh] Exiting eval tree: var.cert
2021/01/10 22:07:37 [TRACE] vertex "var.cert": visit complete
2021-01-10T22:07:37.763Z [DEBUG] plugin: starting plugin: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 args=[/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5]
2021-01-10T22:07:37.764Z [DEBUG] plugin: plugin started: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 pid=38121
2021-01-10T22:07:37.764Z [DEBUG] plugin: waiting for RPC address: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5
2021-01-10T22:07:37.815Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: configuring server automatic mTLS: timestamp=2021-01-10T22:07:37.815Z
2021-01-10T22:07:37.861Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: plugin address: address=/tmp/plugin380182799 network=unix timestamp=2021-01-10T22:07:37.861Z
2021-01-10T22:07:37.861Z [DEBUG] plugin: using plugin: version=5
2021/01/10 22:07:37 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2021/01/10 22:07:37 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:37 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:37 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/01/10 22:07:37 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2021/01/10 22:07:37 [TRACE] GRPCProvider: GetSchema
2021/01/10 22:07:38 [TRACE] GRPCProvider: Configure
2021-01-10T22:07:38.088Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:38 [INFO] AWS Auth provider used: "SharedCredentialsProvider": timestamp=2021-01-10T22:07:38.086Z
2021-01-10T22:07:38.088Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:38 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-01-10T22:07:38.086Z
2021-01-10T22:07:38.485Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:38 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-01-10T22:07:38.485Z
2021/01/10 22:07:39 [TRACE] [walkRefresh] Exiting eval tree: provider.aws
2021/01/10 22:07:39 [TRACE] vertex "provider.aws": visit complete
2021/01/10 22:07:39 [TRACE] dag/walk: visiting "aws_vpc.vpc"
2021/01/10 22:07:39 [TRACE] vertex "aws_vpc.vpc": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:39 [TRACE] vertex "aws_vpc.vpc": expanding dynamic subgraph
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_vpc.vpc - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:39 [DEBUG] ReferenceTransformer: "aws_vpc.vpc" references: []
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:39 [TRACE] vertex "aws_vpc.vpc": entering dynamic subgraph
2021/01/10 22:07:39 [TRACE] dag/walk: updating graph
2021/01/10 22:07:39 [TRACE] dag/walk: added new vertex: "aws_vpc.vpc"
2021/01/10 22:07:39 [TRACE] dag/walk: visiting "aws_vpc.vpc"
2021/01/10 22:07:39 [TRACE] vertex "aws_vpc.vpc": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:39 [TRACE] NodeRefreshableManagedResourceInstance: aws_vpc.vpc will be refreshed
2021/01/10 22:07:39 [TRACE] vertex "aws_vpc.vpc": evaluating
2021/01/10 22:07:39 [TRACE] [walkRefresh] Entering eval tree: aws_vpc.vpc
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:39 [TRACE] EvalReadState: reading state for aws_vpc.vpc
2021/01/10 22:07:39 [TRACE] UpgradeResourceState: schema version of aws_vpc.vpc is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:39 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:39 [TRACE] dag/walk: visiting "aws_route53_zone.zone"
2021/01/10 22:07:39 [TRACE] vertex "aws_route53_zone.zone": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:39 [TRACE] vertex "aws_route53_zone.zone": expanding dynamic subgraph
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route53_zone.zone - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:39 [DEBUG] ReferenceTransformer: "aws_route53_zone.zone" references: []
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:39 [TRACE] vertex "aws_route53_zone.zone": entering dynamic subgraph
2021/01/10 22:07:39 [TRACE] dag/walk: updating graph
2021/01/10 22:07:39 [TRACE] dag/walk: added new vertex: "aws_route53_zone.zone"
2021/01/10 22:07:39 [TRACE] dag/walk: visiting "aws_route53_zone.zone"
2021/01/10 22:07:39 [TRACE] vertex "aws_route53_zone.zone": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:39 [TRACE] NodeRefreshableManagedResourceInstance: aws_route53_zone.zone will be refreshed
2021/01/10 22:07:39 [TRACE] vertex "aws_route53_zone.zone": evaluating
2021/01/10 22:07:39 [TRACE] [walkRefresh] Entering eval tree: aws_route53_zone.zone
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:39 [TRACE] EvalReadState: reading state for aws_route53_zone.zone
2021/01/10 22:07:39 [TRACE] UpgradeResourceState: schema version of aws_route53_zone.zone is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:39 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:39 [TRACE] dag/walk: visiting "aws_iam_user.prometheus_iam"
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_user.prometheus_iam": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_user.prometheus_iam": expanding dynamic subgraph
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_user.prometheus_iam - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:39 [DEBUG] ReferenceTransformer: "aws_iam_user.prometheus_iam" references: []
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_user.prometheus_iam": entering dynamic subgraph
2021/01/10 22:07:39 [TRACE] dag/walk: updating graph
2021/01/10 22:07:39 [TRACE] dag/walk: added new vertex: "aws_iam_user.prometheus_iam"
2021/01/10 22:07:39 [TRACE] dag/walk: visiting "aws_iam_user.prometheus_iam"
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_user.prometheus_iam": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:39 [TRACE] NodeRefreshableManagedResourceInstance: aws_iam_user.prometheus_iam will be refreshed
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_user.prometheus_iam": evaluating
2021/01/10 22:07:39 [TRACE] [walkRefresh] Entering eval tree: aws_iam_user.prometheus_iam
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:39 [TRACE] EvalReadState: reading state for aws_iam_user.prometheus_iam
2021/01/10 22:07:39 [TRACE] UpgradeResourceState: schema version of aws_iam_user.prometheus_iam is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:39 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:39 [TRACE] dag/walk: visiting "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:39 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:39 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": expanding dynamic subgraph
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_key_pair.ovpDevOpsKey - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:39 [DEBUG] ReferenceTransformer: "aws_key_pair.ovpDevOpsKey" references: []
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:39 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": entering dynamic subgraph
2021/01/10 22:07:39 [TRACE] dag/walk: updating graph
2021/01/10 22:07:39 [TRACE] dag/walk: added new vertex: "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:39 [TRACE] dag/walk: visiting "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:39 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:39 [TRACE] NodeRefreshableManagedResourceInstance: aws_key_pair.ovpDevOpsKey will be refreshed
2021/01/10 22:07:39 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": evaluating
2021/01/10 22:07:39 [TRACE] [walkRefresh] Entering eval tree: aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:39 [TRACE] EvalReadState: reading state for aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:39 [TRACE] UpgradeResourceState: schema version of aws_key_pair.ovpDevOpsKey is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:39 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:39 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:39 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:39 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:39 [TRACE] GRPCProvider: ReadResource
2021-01-10T22:07:39.310Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:39 [DEBUG] Getting Route53 Hosted Zone: {
  Id: "Z0097728PODLCQZ6D6QV"
}: timestamp=2021-01-10T22:07:39.310Z
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:39 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_user.prometheus_iam
2021/01/10 22:07:39 [TRACE] EvalWriteState: writing current state object for aws_iam_user.prometheus_iam
2021/01/10 22:07:39 [TRACE] [walkRefresh] Exiting eval tree: aws_iam_user.prometheus_iam
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_user.prometheus_iam": visit complete
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_user.prometheus_iam": dynamic subgraph completed successfully
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_user.prometheus_iam": visit complete
2021/01/10 22:07:39 [TRACE] dag/walk: visiting "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": expanding dynamic subgraph
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_access_key.prometheus_access_key - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:39 [DEBUG] ReferenceTransformer: "aws_iam_access_key.prometheus_access_key" references: []
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": entering dynamic subgraph
2021/01/10 22:07:39 [TRACE] dag/walk: updating graph
2021/01/10 22:07:39 [TRACE] dag/walk: added new vertex: "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:39 [TRACE] dag/walk: visiting "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:39 [TRACE] NodeRefreshableManagedResourceInstance: aws_iam_access_key.prometheus_access_key will be refreshed
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": evaluating
2021/01/10 22:07:39 [TRACE] [walkRefresh] Entering eval tree: aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:39 [TRACE] EvalReadState: reading state for aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:39 [TRACE] UpgradeResourceState: schema version of aws_iam_access_key.prometheus_access_key is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:39 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:39 [TRACE] dag/walk: visiting "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_user_policy.prometheus_role": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_user_policy.prometheus_role": expanding dynamic subgraph
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_user_policy.prometheus_role - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:39 [DEBUG] ReferenceTransformer: "aws_iam_user_policy.prometheus_role" references: []
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:39 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:39 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_user_policy.prometheus_role": entering dynamic subgraph
2021/01/10 22:07:39 [TRACE] dag/walk: updating graph
2021/01/10 22:07:39 [TRACE] dag/walk: added new vertex: "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:39 [TRACE] dag/walk: visiting "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_user_policy.prometheus_role": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:39 [TRACE] NodeRefreshableManagedResourceInstance: aws_iam_user_policy.prometheus_role will be refreshed
2021/01/10 22:07:39 [TRACE] vertex "aws_iam_user_policy.prometheus_role": evaluating
2021/01/10 22:07:39 [TRACE] [walkRefresh] Entering eval tree: aws_iam_user_policy.prometheus_role
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:39 [TRACE] EvalReadState: reading state for aws_iam_user_policy.prometheus_role
2021/01/10 22:07:39 [TRACE] UpgradeResourceState: schema version of aws_iam_user_policy.prometheus_role is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:39 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:39 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:39 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:39 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:39 [TRACE] EvalWriteState: recording 0 dependencies for aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:39 [TRACE] EvalWriteState: writing current state object for aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:39 [TRACE] [walkRefresh] Exiting eval tree: aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:39 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": visit complete
2021/01/10 22:07:39 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": dynamic subgraph completed successfully
2021/01/10 22:07:39 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": visit complete
2021/01/10 22:07:40 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:40 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_user_policy.prometheus_role
2021/01/10 22:07:40 [TRACE] EvalWriteState: writing current state object for aws_iam_user_policy.prometheus_role
2021/01/10 22:07:40 [TRACE] [walkRefresh] Exiting eval tree: aws_iam_user_policy.prometheus_role
2021/01/10 22:07:40 [TRACE] vertex "aws_iam_user_policy.prometheus_role": visit complete
2021/01/10 22:07:40 [TRACE] vertex "aws_iam_user_policy.prometheus_role": dynamic subgraph completed successfully
2021/01/10 22:07:40 [TRACE] vertex "aws_iam_user_policy.prometheus_role": visit complete
2021/01/10 22:07:40 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:40 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:40 [TRACE] EvalWriteState: writing current state object for aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:40 [TRACE] [walkRefresh] Exiting eval tree: aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:40 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": visit complete
2021/01/10 22:07:40 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": dynamic subgraph completed successfully
2021/01/10 22:07:40 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": visit complete
2021/01/10 22:07:40 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:40 [TRACE] EvalWriteState: recording 0 dependencies for aws_route53_zone.zone
2021/01/10 22:07:40 [TRACE] EvalWriteState: writing current state object for aws_route53_zone.zone
2021/01/10 22:07:40 [TRACE] [walkRefresh] Exiting eval tree: aws_route53_zone.zone
2021/01/10 22:07:40 [TRACE] vertex "aws_route53_zone.zone": visit complete
2021/01/10 22:07:40 [TRACE] vertex "aws_route53_zone.zone": dynamic subgraph completed successfully
2021/01/10 22:07:40 [TRACE] vertex "aws_route53_zone.zone": visit complete
2021/01/10 22:07:40 [TRACE] dag/walk: visiting "output.name_servers"
2021/01/10 22:07:40 [TRACE] vertex "output.name_servers": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:40 [TRACE] vertex "output.name_servers": evaluating
2021/01/10 22:07:40 [TRACE] [walkRefresh] Entering eval tree: output.name_servers
2021/01/10 22:07:40 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:40 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:40 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:40 [TRACE] EvalWriteOutput: Saving value for output.name_servers in state
2021/01/10 22:07:40 [TRACE] EvalWriteOutput: Saving Create change for output.name_servers in changeset
2021/01/10 22:07:40 [TRACE] [walkRefresh] Exiting eval tree: output.name_servers
2021/01/10 22:07:40 [TRACE] vertex "output.name_servers": visit complete
2021-01-10T22:07:41.068Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:41 [WARN] VPC Classic Link is not supported in this region: timestamp=2021-01-10T22:07:41.068Z
2021-01-10T22:07:41.491Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:41 [WARN] VPC Classic Link DNS Support is not supported in this region: timestamp=2021-01-10T22:07:41.491Z
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_lb_target_group_attachment.attach_web_a" is waiting for "data.aws_instances.web_instances_a"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_alb_listener_rule.listener_rule_http" is waiting for "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_alb_listener.alb_listener_http" is waiting for "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_instance.prometheus_b"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "output.Prometheus_URL" is waiting for "aws_instance.prometheus_a"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "data.aws_instances.web_instances_b" is waiting for "aws_instance.web_b"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_internet_gateway.gw" is waiting for "aws_vpc.vpc"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_alb_target_group.alb_target_group_http" is waiting for "aws_vpc.vpc"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_route.internet_access" is waiting for "aws_internet_gateway.gw"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_lb_target_group_attachment.attach_web_b" is waiting for "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_security_group.web_access" is waiting for "aws_vpc.vpc"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "output.alb_address" is waiting for "aws_alb.alb"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_instance.prometheus_a" is waiting for "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "output.Grafana_URL" is waiting for "aws_instance.prometheus_a"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "data.aws_instances.web_instances_a" is waiting for "aws_instance.web_a"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_route53_record.A" is waiting for "aws_alb.alb"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_security_group.prometheus_access" is waiting for "aws_vpc.vpc"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "root" is waiting for "output.Prometheus_URL"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_alb.alb" is waiting for "aws_security_group.web_access"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_security_group.internal_access" is waiting for "aws_vpc.vpc"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_subnet.subnet_public_az_b" is waiting for "aws_vpc.vpc"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_subnet.subnet_public_az_a" is waiting for "aws_vpc.vpc"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_instance.web_b" is waiting for "aws_security_group.prometheus_access"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_instance.web_a" is waiting for "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_subnet.subnet_private_az_a" is waiting for "aws_vpc.vpc"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_alb_listener.alb_listener_https" is waiting for "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:42 [TRACE] dag/walk: vertex "aws_subnet.subnet_private_az_b" is waiting for "aws_vpc.vpc"
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:43 [TRACE] EvalWriteState: recording 0 dependencies for aws_vpc.vpc
2021/01/10 22:07:43 [TRACE] EvalWriteState: writing current state object for aws_vpc.vpc
2021/01/10 22:07:43 [TRACE] [walkRefresh] Exiting eval tree: aws_vpc.vpc
2021/01/10 22:07:43 [TRACE] vertex "aws_vpc.vpc": visit complete
2021/01/10 22:07:43 [TRACE] vertex "aws_vpc.vpc": dynamic subgraph completed successfully
2021/01/10 22:07:43 [TRACE] vertex "aws_vpc.vpc": visit complete
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_internet_gateway.gw"
2021/01/10 22:07:43 [TRACE] vertex "aws_internet_gateway.gw": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_internet_gateway.gw": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_internet_gateway.gw - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_internet_gateway.gw" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_internet_gateway.gw": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.gw"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_internet_gateway.gw"
2021/01/10 22:07:43 [TRACE] vertex "aws_internet_gateway.gw": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_internet_gateway.gw will be refreshed
2021/01/10 22:07:43 [TRACE] vertex "aws_internet_gateway.gw": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_internet_gateway.gw
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_internet_gateway.gw
2021/01/10 22:07:43 [TRACE] UpgradeResourceState: schema version of aws_internet_gateway.gw is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:43 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_subnet.subnet_private_az_b"
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_b": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_b": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.subnet_private_az_b - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_private_az_b" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_b": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_private_az_b"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_subnet.subnet_private_az_b"
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_b": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_subnet.subnet_private_az_b will be refreshed
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_b": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_subnet.subnet_private_az_b
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_subnet.subnet_private_az_b
2021/01/10 22:07:43 [TRACE] UpgradeResourceState: schema version of aws_subnet.subnet_private_az_b is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:43 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_a": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_a": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.subnet_private_az_a - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_private_az_a" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_a": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_a": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_subnet.subnet_private_az_a will be refreshed
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_a": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_subnet.subnet_private_az_a
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_subnet.subnet_private_az_a
2021/01/10 22:07:43 [TRACE] UpgradeResourceState: schema version of aws_subnet.subnet_private_az_a is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:43 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_a": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_a": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.subnet_public_az_a - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_public_az_a" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_a": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_a": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_subnet.subnet_public_az_a will be refreshed
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_a": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_subnet.subnet_public_az_a
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_subnet.subnet_public_az_a
2021/01/10 22:07:43 [TRACE] UpgradeResourceState: schema version of aws_subnet.subnet_public_az_a is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:43 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_b": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_b": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.subnet_public_az_b - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_public_az_b" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_b": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_b": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_subnet.subnet_public_az_b will be refreshed
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_b": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_subnet.subnet_public_az_b
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_subnet.subnet_public_az_b
2021/01/10 22:07:43 [TRACE] UpgradeResourceState: schema version of aws_subnet.subnet_public_az_b is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:43 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_security_group.internal_access"
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.internal_access": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.internal_access": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.internal_access - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_security_group.internal_access" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.internal_access": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_security_group.internal_access"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_security_group.internal_access"
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.internal_access": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_security_group.internal_access will be refreshed
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.internal_access": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.internal_access
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_security_group.internal_access
2021/01/10 22:07:43 [TRACE] UpgradeResourceState: schema version of aws_security_group.internal_access is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:43 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_security_group.prometheus_access"
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.prometheus_access": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.prometheus_access": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.prometheus_access - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_security_group.prometheus_access" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.prometheus_access": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_security_group.prometheus_access"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_security_group.prometheus_access"
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.prometheus_access": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_security_group.prometheus_access will be refreshed
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.prometheus_access": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.prometheus_access
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_security_group.prometheus_access
2021/01/10 22:07:43 [TRACE] UpgradeResourceState: schema version of aws_security_group.prometheus_access is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:43 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_security_group.web_access"
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.web_access": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.web_access": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.web_access - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_security_group.web_access" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.web_access": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_security_group.web_access"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_security_group.web_access"
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.web_access": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_security_group.web_access will be refreshed
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.web_access": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.web_access
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_security_group.web_access
2021/01/10 22:07:43 [TRACE] UpgradeResourceState: schema version of aws_security_group.web_access is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:43 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:43 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_alb_target_group.alb_target_group_http - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_alb_target_group.alb_target_group_http" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:43 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_alb_target_group.alb_target_group_http will be refreshed
2021/01/10 22:07:43 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:43 [TRACE] UpgradeResourceState: schema version of aws_alb_target_group.alb_target_group_http is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:43 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:43 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:43 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:43 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:43 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:43 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:43 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:43 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:43 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:43 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:43 [TRACE] EvalWriteState: recording 1 dependencies for aws_security_group.prometheus_access
2021/01/10 22:07:43 [TRACE] EvalWriteState: writing current state object for aws_security_group.prometheus_access
2021/01/10 22:07:43 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.prometheus_access
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.prometheus_access": visit complete
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.prometheus_access": dynamic subgraph completed successfully
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.prometheus_access": visit complete
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:43 [TRACE] EvalWriteState: recording 1 dependencies for aws_security_group.internal_access
2021/01/10 22:07:43 [TRACE] EvalWriteState: writing current state object for aws_security_group.internal_access
2021/01/10 22:07:43 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.internal_access
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.internal_access": visit complete
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.internal_access": dynamic subgraph completed successfully
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.internal_access": visit complete
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:43 [TRACE] EvalWriteState: recording 1 dependencies for aws_subnet.subnet_public_az_b
2021/01/10 22:07:43 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnet_public_az_b
2021/01/10 22:07:43 [TRACE] [walkRefresh] Exiting eval tree: aws_subnet.subnet_public_az_b
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_b": visit complete
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_b": dynamic subgraph completed successfully
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_b": visit complete
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_instance.prometheus_b"
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.prometheus_b": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.prometheus_b": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.prometheus_b - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [WARN] no schema for provisioner "file" is attached to aws_instance.prometheus_b, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.prometheus_b, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "local-exec" is attached to aws_instance.prometheus_b, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "file" is attached to aws_instance.prometheus_b, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.prometheus_b, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "local-exec" is attached to aws_instance.prometheus_b, so provisioner block references cannot be detected
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_instance.prometheus_b" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.prometheus_b": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_instance.prometheus_b"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_instance.prometheus_b"
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.prometheus_b": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_instance.prometheus_b will be refreshed
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.prometheus_b": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_instance.prometheus_b
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_instance.prometheus_b
2021/01/10 22:07:43 [TRACE] UpgradeResourceState: schema version of aws_instance.prometheus_b is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:43 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:43 [TRACE] EvalWriteState: recording 1 dependencies for aws_internet_gateway.gw
2021/01/10 22:07:43 [TRACE] EvalWriteState: writing current state object for aws_internet_gateway.gw
2021/01/10 22:07:43 [TRACE] [walkRefresh] Exiting eval tree: aws_internet_gateway.gw
2021/01/10 22:07:43 [TRACE] vertex "aws_internet_gateway.gw": visit complete
2021/01/10 22:07:43 [TRACE] vertex "aws_internet_gateway.gw": dynamic subgraph completed successfully
2021/01/10 22:07:43 [TRACE] vertex "aws_internet_gateway.gw": visit complete
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_route.internet_access"
2021/01/10 22:07:43 [TRACE] vertex "aws_route.internet_access": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_route.internet_access": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route.internet_access - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_route.internet_access" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_route.internet_access": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_route.internet_access"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_route.internet_access"
2021/01/10 22:07:43 [TRACE] vertex "aws_route.internet_access": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_route.internet_access will be refreshed
2021/01/10 22:07:43 [TRACE] vertex "aws_route.internet_access": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_route.internet_access
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_route.internet_access
2021/01/10 22:07:43 [TRACE] UpgradeResourceState: schema version of aws_route.internet_access is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:43 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:43 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:43 [TRACE] EvalWriteState: recording 1 dependencies for aws_subnet.subnet_private_az_b
2021/01/10 22:07:43 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnet_private_az_b
2021/01/10 22:07:43 [TRACE] [walkRefresh] Exiting eval tree: aws_subnet.subnet_private_az_b
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_b": visit complete
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_b": dynamic subgraph completed successfully
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_b": visit complete
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_instance.web_b"
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.web_b": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.web_b": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.web_b[0] - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [DEBUG] Resource state not found for node "aws_instance.web_b[0]", instance aws_instance.web_b[0]
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.web_b, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "local-exec" is attached to aws_instance.web_b, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.web_b, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "local-exec" is attached to aws_instance.web_b, so provisioner block references cannot be detected
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_instance.web_b[0]" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.web_b": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_instance.web_b[0]"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_instance.web_b[0]"
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.web_b[0]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_instance.web_b[0] has no existing state to refresh
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.web_b[0]": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_instance.web_b[0]
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_instance.web_b[0]
2021/01/10 22:07:43 [TRACE] EvalReadState: no state present for aws_instance.web_b[0]
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:43 [TRACE] Re-validating config for "aws_instance.web_b[0]"
2021/01/10 22:07:43 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:43 [TRACE] GRPCProvider: ReadResource
2021-01-10T22:07:43.847Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:43 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:43.847Z
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:43 [TRACE] EvalWriteState: recording 1 dependencies for aws_subnet.subnet_private_az_a
2021/01/10 22:07:43 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnet_private_az_a
2021/01/10 22:07:43 [TRACE] [walkRefresh] Exiting eval tree: aws_subnet.subnet_private_az_a
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_a": visit complete
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_a": dynamic subgraph completed successfully
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_private_az_a": visit complete
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:43 [TRACE] EvalWriteState: recording 1 dependencies for aws_subnet.subnet_public_az_a
2021/01/10 22:07:43 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnet_public_az_a
2021/01/10 22:07:43 [TRACE] [walkRefresh] Exiting eval tree: aws_subnet.subnet_public_az_a
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_a": visit complete
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_a": dynamic subgraph completed successfully
2021/01/10 22:07:43 [TRACE] vertex "aws_subnet.subnet_public_az_a": visit complete
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_instance.prometheus_a"
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.prometheus_a": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.prometheus_a": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.prometheus_a - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [WARN] no schema for provisioner "file" is attached to aws_instance.prometheus_a, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.prometheus_a, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "local-exec" is attached to aws_instance.prometheus_a, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "file" is attached to aws_instance.prometheus_a, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.prometheus_a, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "local-exec" is attached to aws_instance.prometheus_a, so provisioner block references cannot be detected
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_instance.prometheus_a" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.prometheus_a": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_instance.prometheus_a"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_instance.prometheus_a"
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.prometheus_a": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_instance.prometheus_a will be refreshed
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.prometheus_a": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_instance.prometheus_a
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_instance.prometheus_a
2021/01/10 22:07:43 [TRACE] UpgradeResourceState: schema version of aws_instance.prometheus_a is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:43 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:43 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.web_b[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:43 [TRACE] EvalWriteState: recording 5 dependencies for aws_instance.web_b[0]
2021/01/10 22:07:43 [TRACE] EvalWriteState: writing current state object for aws_instance.web_b[0]
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:43 [TRACE] EvalWriteDiff: recorded Create change for aws_instance.web_b[0]
2021/01/10 22:07:43 [TRACE] [walkRefresh] Exiting eval tree: aws_instance.web_b[0]
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.web_b[0]": visit complete
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.web_b": dynamic subgraph completed successfully
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.web_b": visit complete
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "data.aws_instances.web_instances_b"
2021/01/10 22:07:43 [TRACE] vertex "data.aws_instances.web_instances_b": starting visit (*terraform.NodeRefreshableDataResource)
2021/01/10 22:07:43 [TRACE] vertex "data.aws_instances.web_instances_b": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_instances.web_instances_b - *terraform.NodeRefreshableDataResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [DEBUG] Resource state not found for node "data.aws_instances.web_instances_b", instance data.aws_instances.web_instances_b
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "data.aws_instances.web_instances_b" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "data.aws_instances.web_instances_b": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "data.aws_instances.web_instances_b"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "data.aws_instances.web_instances_b"
2021/01/10 22:07:43 [TRACE] vertex "data.aws_instances.web_instances_b": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2021/01/10 22:07:43 [TRACE] vertex "data.aws_instances.web_instances_b": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: data.aws_instances.web_instances_b
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:43 [TRACE] EvalWriteState: removing state object for data.aws_instances.web_instances_b
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadData
2021/01/10 22:07:43 [TRACE] EvalReadData: working on data.aws_instances.web_instances_b
2021/01/10 22:07:43 [TRACE] EvalReadData: data.aws_instances.web_instances_b configuration is fully known, but we're forcing a read plan to be created
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:43 [TRACE] EvalWriteDiff: recorded Read change for data.aws_instances.web_instances_b
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:43 [TRACE] EvalWriteState: writing current state object for data.aws_instances.web_instances_b
2021/01/10 22:07:43 [TRACE] [walkRefresh] Exiting eval tree: data.aws_instances.web_instances_b
2021/01/10 22:07:43 [TRACE] vertex "data.aws_instances.web_instances_b": visit complete
2021/01/10 22:07:43 [TRACE] vertex "data.aws_instances.web_instances_b": dynamic subgraph completed successfully
2021/01/10 22:07:43 [TRACE] vertex "data.aws_instances.web_instances_b": visit complete
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:43 [TRACE] EvalWriteState: recording 1 dependencies for aws_security_group.web_access
2021/01/10 22:07:43 [TRACE] EvalWriteState: writing current state object for aws_security_group.web_access
2021/01/10 22:07:43 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.web_access
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.web_access": visit complete
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.web_access": dynamic subgraph completed successfully
2021/01/10 22:07:43 [TRACE] vertex "aws_security_group.web_access": visit complete
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_alb.alb"
2021/01/10 22:07:43 [TRACE] vertex "aws_alb.alb": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_alb.alb": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_alb.alb - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_alb.alb" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_alb.alb": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_alb.alb"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_alb.alb"
2021/01/10 22:07:43 [TRACE] vertex "aws_alb.alb": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_alb.alb will be refreshed
2021/01/10 22:07:43 [TRACE] vertex "aws_alb.alb": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_alb.alb
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_alb.alb
2021/01/10 22:07:43 [TRACE] UpgradeResourceState: schema version of aws_alb.alb is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:43 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:43 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_instance.web_a"
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.web_a": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.web_a": expanding dynamic subgraph
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.web_a[0] - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:43 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.web_a, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "local-exec" is attached to aws_instance.web_a, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "remote-exec" is attached to aws_instance.web_a, so provisioner block references cannot be detected
2021/01/10 22:07:43 [WARN] no schema for provisioner "local-exec" is attached to aws_instance.web_a, so provisioner block references cannot be detected
2021/01/10 22:07:43 [DEBUG] ReferenceTransformer: "aws_instance.web_a[0]" references: []
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:43 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.web_a": entering dynamic subgraph
2021/01/10 22:07:43 [TRACE] dag/walk: updating graph
2021/01/10 22:07:43 [TRACE] dag/walk: added new vertex: "aws_instance.web_a[0]"
2021/01/10 22:07:43 [TRACE] dag/walk: visiting "aws_instance.web_a[0]"
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.web_a[0]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:43 [TRACE] NodeRefreshableManagedResourceInstance: aws_instance.web_a[0] will be refreshed
2021/01/10 22:07:43 [TRACE] vertex "aws_instance.web_a[0]": evaluating
2021/01/10 22:07:43 [TRACE] [walkRefresh] Entering eval tree: aws_instance.web_a[0]
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:43 [TRACE] EvalReadState: reading state for aws_instance.web_a[0]
2021/01/10 22:07:43 [TRACE] UpgradeResourceState: schema version of aws_instance.web_a[0] is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:43 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:43 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:43 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:43 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:44 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:44 [TRACE] EvalWriteState: recording 2 dependencies for aws_route.internet_access
2021/01/10 22:07:44 [TRACE] EvalWriteState: writing current state object for aws_route.internet_access
2021/01/10 22:07:44 [TRACE] [walkRefresh] Exiting eval tree: aws_route.internet_access
2021/01/10 22:07:44 [TRACE] vertex "aws_route.internet_access": visit complete
2021/01/10 22:07:44 [TRACE] vertex "aws_route.internet_access": dynamic subgraph completed successfully
2021/01/10 22:07:44 [TRACE] vertex "aws_route.internet_access": visit complete
2021/01/10 22:07:44 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:44 [TRACE] EvalWriteState: recording 1 dependencies for aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:44 [TRACE] EvalWriteState: writing current state object for aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:44 [TRACE] [walkRefresh] Exiting eval tree: aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:44 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": visit complete
2021/01/10 22:07:44 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": dynamic subgraph completed successfully
2021/01/10 22:07:44 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": visit complete
2021/01/10 22:07:44 [TRACE] dag/walk: visiting "aws_lb_target_group_attachment.attach_web_b"
2021/01/10 22:07:44 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:44 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b": expanding dynamic subgraph
2021/01/10 22:07:44 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:44 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:44 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:44 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:44 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:44 [DEBUG] Resource state not found for node "aws_lb_target_group_attachment.attach_web_b[0]", instance aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:44 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:44 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:44 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:44 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:44 [DEBUG] ReferenceTransformer: "aws_lb_target_group_attachment.attach_web_b[0]" references: []
2021/01/10 22:07:44 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:44 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:44 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:44 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b": entering dynamic subgraph
2021/01/10 22:07:44 [TRACE] dag/walk: updating graph
2021/01/10 22:07:44 [TRACE] dag/walk: added new vertex: "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:07:44 [TRACE] dag/walk: visiting "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:07:44 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b[0]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:44 [TRACE] NodeRefreshableManagedResourceInstance: aws_lb_target_group_attachment.attach_web_b[0] has no existing state to refresh
2021/01/10 22:07:44 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b[0]": evaluating
2021/01/10 22:07:44 [TRACE] [walkRefresh] Entering eval tree: aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:44 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:44 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:44 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:44 [TRACE] EvalReadState: reading state for aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:44 [TRACE] EvalReadState: no state present for aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:44 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:44 [TRACE] Re-validating config for "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:07:44 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:44 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:44 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:44 [TRACE] EvalWriteState: recording 7 dependencies for aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:44 [TRACE] EvalWriteState: writing current state object for aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:44 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:44 [TRACE] EvalWriteDiff: recorded Create change for aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:44 [TRACE] [walkRefresh] Exiting eval tree: aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:44 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b[0]": visit complete
2021/01/10 22:07:44 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b": dynamic subgraph completed successfully
2021/01/10 22:07:44 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b": visit complete
2021-01-10T22:07:45.141Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:45 [DEBUG] Setting ALB Timeout Seconds: 60: timestamp=2021-01-10T22:07:45.141Z
2021-01-10T22:07:45.141Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:45 [DEBUG] Setting LB Deletion Protection Enabled: false: timestamp=2021-01-10T22:07:45.141Z
2021-01-10T22:07:45.141Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:45 [DEBUG] Setting ALB HTTP/2 Enabled: true: timestamp=2021-01-10T22:07:45.141Z
2021-01-10T22:07:45.141Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:45 [DEBUG] Setting LB Invalid Header Fields Enabled: false: timestamp=2021-01-10T22:07:45.141Z
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:45 [TRACE] EvalWriteState: recording 4 dependencies for aws_alb.alb
2021/01/10 22:07:45 [TRACE] EvalWriteState: writing current state object for aws_alb.alb
2021/01/10 22:07:45 [TRACE] [walkRefresh] Exiting eval tree: aws_alb.alb
2021/01/10 22:07:45 [TRACE] vertex "aws_alb.alb": visit complete
2021/01/10 22:07:45 [TRACE] vertex "aws_alb.alb": dynamic subgraph completed successfully
2021/01/10 22:07:45 [TRACE] vertex "aws_alb.alb": visit complete
2021/01/10 22:07:45 [TRACE] dag/walk: visiting "aws_route53_record.A_www"
2021/01/10 22:07:45 [TRACE] vertex "aws_route53_record.A_www": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:45 [TRACE] vertex "aws_route53_record.A_www": expanding dynamic subgraph
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route53_record.A_www - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:45 [DEBUG] ReferenceTransformer: "aws_route53_record.A_www" references: []
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:45 [TRACE] vertex "aws_route53_record.A_www": entering dynamic subgraph
2021/01/10 22:07:45 [TRACE] dag/walk: updating graph
2021/01/10 22:07:45 [TRACE] dag/walk: added new vertex: "aws_route53_record.A_www"
2021/01/10 22:07:45 [TRACE] dag/walk: visiting "aws_route53_record.A_www"
2021/01/10 22:07:45 [TRACE] vertex "aws_route53_record.A_www": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:45 [TRACE] NodeRefreshableManagedResourceInstance: aws_route53_record.A_www will be refreshed
2021/01/10 22:07:45 [TRACE] vertex "aws_route53_record.A_www": evaluating
2021/01/10 22:07:45 [TRACE] [walkRefresh] Entering eval tree: aws_route53_record.A_www
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:45 [TRACE] EvalReadState: reading state for aws_route53_record.A_www
2021/01/10 22:07:45 [TRACE] UpgradeResourceState: schema version of aws_route53_record.A_www is still 2; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:45 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:45 [TRACE] dag/walk: visiting "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_https": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_https": expanding dynamic subgraph
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_alb_listener.alb_listener_https - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:45 [DEBUG] ReferenceTransformer: "aws_alb_listener.alb_listener_https" references: []
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_https": entering dynamic subgraph
2021/01/10 22:07:45 [TRACE] dag/walk: updating graph
2021/01/10 22:07:45 [TRACE] dag/walk: added new vertex: "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:45 [TRACE] dag/walk: visiting "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_https": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:45 [TRACE] NodeRefreshableManagedResourceInstance: aws_alb_listener.alb_listener_https will be refreshed
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_https": evaluating
2021/01/10 22:07:45 [TRACE] [walkRefresh] Entering eval tree: aws_alb_listener.alb_listener_https
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:45 [TRACE] EvalReadState: reading state for aws_alb_listener.alb_listener_https
2021/01/10 22:07:45 [TRACE] UpgradeResourceState: schema version of aws_alb_listener.alb_listener_https is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:45 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:45 [TRACE] dag/walk: visiting "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_http": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_http": expanding dynamic subgraph
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_alb_listener.alb_listener_http - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:45 [DEBUG] ReferenceTransformer: "aws_alb_listener.alb_listener_http" references: []
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_http": entering dynamic subgraph
2021/01/10 22:07:45 [TRACE] dag/walk: updating graph
2021/01/10 22:07:45 [TRACE] dag/walk: added new vertex: "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:45 [TRACE] dag/walk: visiting "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_http": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:45 [TRACE] NodeRefreshableManagedResourceInstance: aws_alb_listener.alb_listener_http will be refreshed
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_http": evaluating
2021/01/10 22:07:45 [TRACE] [walkRefresh] Entering eval tree: aws_alb_listener.alb_listener_http
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:45 [TRACE] EvalReadState: reading state for aws_alb_listener.alb_listener_http
2021/01/10 22:07:45 [TRACE] UpgradeResourceState: schema version of aws_alb_listener.alb_listener_http is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:45 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:45 [TRACE] dag/walk: visiting "aws_route53_record.A"
2021/01/10 22:07:45 [TRACE] vertex "aws_route53_record.A": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:45 [TRACE] vertex "aws_route53_record.A": expanding dynamic subgraph
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route53_record.A - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:45 [DEBUG] ReferenceTransformer: "aws_route53_record.A" references: []
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:45 [TRACE] vertex "aws_route53_record.A": entering dynamic subgraph
2021/01/10 22:07:45 [TRACE] dag/walk: updating graph
2021/01/10 22:07:45 [TRACE] dag/walk: added new vertex: "aws_route53_record.A"
2021/01/10 22:07:45 [TRACE] dag/walk: visiting "aws_route53_record.A"
2021/01/10 22:07:45 [TRACE] vertex "aws_route53_record.A": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:45 [TRACE] NodeRefreshableManagedResourceInstance: aws_route53_record.A will be refreshed
2021/01/10 22:07:45 [TRACE] vertex "aws_route53_record.A": evaluating
2021/01/10 22:07:45 [TRACE] [walkRefresh] Entering eval tree: aws_route53_record.A
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:45 [TRACE] EvalReadState: reading state for aws_route53_record.A
2021/01/10 22:07:45 [TRACE] UpgradeResourceState: schema version of aws_route53_record.A is still 2; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:45 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:45 [TRACE] dag/walk: visiting "output.alb_address"
2021/01/10 22:07:45 [TRACE] vertex "output.alb_address": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:45 [TRACE] vertex "output.alb_address": evaluating
2021/01/10 22:07:45 [TRACE] [walkRefresh] Entering eval tree: output.alb_address
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:45 [TRACE] EvalWriteOutput: Saving value for output.alb_address in state
2021/01/10 22:07:45 [TRACE] EvalWriteOutput: Saving Create change for output.alb_address in changeset
2021/01/10 22:07:45 [TRACE] [walkRefresh] Exiting eval tree: output.alb_address
2021/01/10 22:07:45 [TRACE] vertex "output.alb_address": visit complete
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:45 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:45 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:45 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:45 [TRACE] GRPCProvider: ReadResource
2021-01-10T22:07:45.158Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:45 [DEBUG] Waiting for state to become: [success]: timestamp=2021-01-10T22:07:45.155Z
2021-01-10T22:07:45.158Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:45 [DEBUG] Waiting for state to become: [success]: timestamp=2021-01-10T22:07:45.156Z
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:45 [TRACE] EvalWriteState: recording 6 dependencies for aws_alb_listener.alb_listener_http
2021/01/10 22:07:45 [TRACE] EvalWriteState: writing current state object for aws_alb_listener.alb_listener_http
2021/01/10 22:07:45 [TRACE] [walkRefresh] Exiting eval tree: aws_alb_listener.alb_listener_http
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_http": visit complete
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_http": dynamic subgraph completed successfully
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_http": visit complete
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:45 [TRACE] EvalWriteState: recording 6 dependencies for aws_alb_listener.alb_listener_https
2021/01/10 22:07:45 [TRACE] EvalWriteState: writing current state object for aws_alb_listener.alb_listener_https
2021/01/10 22:07:45 [TRACE] [walkRefresh] Exiting eval tree: aws_alb_listener.alb_listener_https
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_https": visit complete
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_https": dynamic subgraph completed successfully
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener.alb_listener_https": visit complete
2021/01/10 22:07:45 [TRACE] dag/walk: visiting "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": expanding dynamic subgraph
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_alb_listener_rule.listener_rule_http - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:45 [DEBUG] ReferenceTransformer: "aws_alb_listener_rule.listener_rule_http" references: []
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:45 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:45 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": entering dynamic subgraph
2021/01/10 22:07:45 [TRACE] dag/walk: updating graph
2021/01/10 22:07:45 [TRACE] dag/walk: added new vertex: "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:45 [TRACE] dag/walk: visiting "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:45 [TRACE] NodeRefreshableManagedResourceInstance: aws_alb_listener_rule.listener_rule_http will be refreshed
2021/01/10 22:07:45 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": evaluating
2021/01/10 22:07:45 [TRACE] [walkRefresh] Entering eval tree: aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:45 [TRACE] EvalReadState: reading state for aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:45 [TRACE] UpgradeResourceState: schema version of aws_alb_listener_rule.listener_rule_http is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:45 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:45 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:45 [TRACE] GRPCProvider: ReadResource
2021-01-10T22:07:45.622Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:45 [DEBUG] Waiting for state to become: [success]: timestamp=2021-01-10T22:07:45.622Z
2021-01-10T22:07:45.662Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:45 [DEBUG] Expanded record name: www.ovpdevops.xyz: timestamp=2021-01-10T22:07:45.662Z
2021-01-10T22:07:45.662Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:45 [DEBUG] List resource records sets for zone: Z0097728PODLCQZ6D6QV, opts: {
  HostedZoneId: "Z0097728PODLCQZ6D6QV",
  MaxItems: "1",
  StartRecordName: "www.ovpdevops.xyz.",
  StartRecordType: "A"
}: timestamp=2021-01-10T22:07:45.662Z
2021-01-10T22:07:45.721Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:45 [DEBUG] Expanded record name: ovpdevops.xyz: timestamp=2021-01-10T22:07:45.721Z
2021-01-10T22:07:45.721Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:45 [DEBUG] List resource records sets for zone: Z0097728PODLCQZ6D6QV, opts: {
  HostedZoneId: "Z0097728PODLCQZ6D6QV",
  MaxItems: "1",
  StartRecordName: "ovpdevops.xyz.",
  StartRecordType: "A"
}: timestamp=2021-01-10T22:07:45.721Z
2021-01-10T22:07:45.758Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:45 [DEBUG] Setting Security Group IDs: []string{"sg-06fdb1c2ca9a8f6d6"}: timestamp=2021-01-10T22:07:45.758Z
2021-01-10T22:07:45.776Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:45 [DEBUG] Setting Security Group IDs: []string{"sg-06fdb1c2ca9a8f6d6"}: timestamp=2021-01-10T22:07:45.775Z
2021-01-10T22:07:45.834Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:45 [DEBUG] Setting Security Group IDs: []string{"sg-06fdb1c2ca9a8f6d6", "sg-00154f6cb369b2538", "sg-048f3f26d6a3faa4a"}: timestamp=2021-01-10T22:07:45.834Z
2021/01/10 22:07:46 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:46 [TRACE] EvalWriteState: recording 7 dependencies for aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:46 [TRACE] EvalWriteState: writing current state object for aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:46 [TRACE] [walkRefresh] Exiting eval tree: aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:46 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": visit complete
2021/01/10 22:07:46 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": dynamic subgraph completed successfully
2021/01/10 22:07:46 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": visit complete
2021/01/10 22:07:46 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:46 [TRACE] EvalWriteState: recording 6 dependencies for aws_route53_record.A_www
2021/01/10 22:07:46 [TRACE] EvalWriteState: writing current state object for aws_route53_record.A_www
2021/01/10 22:07:46 [TRACE] [walkRefresh] Exiting eval tree: aws_route53_record.A_www
2021/01/10 22:07:46 [TRACE] vertex "aws_route53_record.A_www": visit complete
2021/01/10 22:07:46 [TRACE] vertex "aws_route53_record.A_www": dynamic subgraph completed successfully
2021/01/10 22:07:46 [TRACE] vertex "aws_route53_record.A_www": visit complete
2021/01/10 22:07:46 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:46 [TRACE] EvalWriteState: recording 6 dependencies for aws_route53_record.A
2021/01/10 22:07:46 [TRACE] EvalWriteState: writing current state object for aws_route53_record.A
2021/01/10 22:07:46 [TRACE] [walkRefresh] Exiting eval tree: aws_route53_record.A
2021/01/10 22:07:46 [TRACE] vertex "aws_route53_record.A": visit complete
2021/01/10 22:07:46 [TRACE] vertex "aws_route53_record.A": dynamic subgraph completed successfully
2021/01/10 22:07:46 [TRACE] vertex "aws_route53_record.A": visit complete
2021/01/10 22:07:47 [TRACE] dag/walk: vertex "output.Prometheus_URL" is waiting for "aws_instance.prometheus_a"
2021/01/10 22:07:47 [TRACE] dag/walk: vertex "aws_lb_target_group_attachment.attach_web_a" is waiting for "data.aws_instances.web_instances_a"
2021/01/10 22:07:47 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_instance.prometheus_b"
2021/01/10 22:07:47 [TRACE] dag/walk: vertex "root" is waiting for "output.Prometheus_URL"
2021/01/10 22:07:47 [TRACE] dag/walk: vertex "output.Grafana_URL" is waiting for "aws_instance.prometheus_a"
2021/01/10 22:07:47 [TRACE] dag/walk: vertex "data.aws_instances.web_instances_a" is waiting for "aws_instance.web_a"
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:47 [TRACE] EvalWriteState: recording 6 dependencies for aws_instance.prometheus_b
2021/01/10 22:07:47 [TRACE] EvalWriteState: writing current state object for aws_instance.prometheus_b
2021/01/10 22:07:47 [TRACE] [walkRefresh] Exiting eval tree: aws_instance.prometheus_b
2021/01/10 22:07:47 [TRACE] vertex "aws_instance.prometheus_b": visit complete
2021/01/10 22:07:47 [TRACE] vertex "aws_instance.prometheus_b": dynamic subgraph completed successfully
2021/01/10 22:07:47 [TRACE] vertex "aws_instance.prometheus_b": visit complete
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:47 [TRACE] EvalWriteState: recording 6 dependencies for aws_instance.web_a[0]
2021/01/10 22:07:47 [TRACE] EvalWriteState: writing current state object for aws_instance.web_a[0]
2021/01/10 22:07:47 [TRACE] [walkRefresh] Exiting eval tree: aws_instance.web_a[0]
2021/01/10 22:07:47 [TRACE] vertex "aws_instance.web_a[0]": visit complete
2021/01/10 22:07:47 [TRACE] vertex "aws_instance.web_a": dynamic subgraph completed successfully
2021/01/10 22:07:47 [TRACE] vertex "aws_instance.web_a": visit complete
2021/01/10 22:07:47 [TRACE] dag/walk: visiting "data.aws_instances.web_instances_a"
2021/01/10 22:07:47 [TRACE] vertex "data.aws_instances.web_instances_a": starting visit (*terraform.NodeRefreshableDataResource)
2021/01/10 22:07:47 [TRACE] vertex "data.aws_instances.web_instances_a": expanding dynamic subgraph
2021/01/10 22:07:47 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:47 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_instances.web_instances_a - *terraform.NodeRefreshableDataResourceInstance
  ------
2021/01/10 22:07:47 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:47 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:47 [DEBUG] ReferenceTransformer: "data.aws_instances.web_instances_a" references: []
2021/01/10 22:07:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:47 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:47 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:47 [TRACE] vertex "data.aws_instances.web_instances_a": entering dynamic subgraph
2021/01/10 22:07:47 [TRACE] dag/walk: updating graph
2021/01/10 22:07:47 [TRACE] dag/walk: added new vertex: "data.aws_instances.web_instances_a"
2021/01/10 22:07:47 [TRACE] dag/walk: visiting "data.aws_instances.web_instances_a"
2021/01/10 22:07:47 [TRACE] vertex "data.aws_instances.web_instances_a": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2021/01/10 22:07:47 [TRACE] vertex "data.aws_instances.web_instances_a": evaluating
2021/01/10 22:07:47 [TRACE] [walkRefresh] Entering eval tree: data.aws_instances.web_instances_a
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:47 [TRACE] EvalWriteState: removing state object for data.aws_instances.web_instances_a
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalReadData
2021/01/10 22:07:47 [TRACE] EvalReadData: working on data.aws_instances.web_instances_a
2021/01/10 22:07:47 [TRACE] EvalReadData: data.aws_instances.web_instances_a configuration is fully known, but we're forcing a read plan to be created
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:47 [TRACE] EvalWriteDiff: recorded Read change for data.aws_instances.web_instances_a
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:47 [TRACE] EvalWriteState: writing current state object for data.aws_instances.web_instances_a
2021/01/10 22:07:47 [TRACE] [walkRefresh] Exiting eval tree: data.aws_instances.web_instances_a
2021/01/10 22:07:47 [TRACE] vertex "data.aws_instances.web_instances_a": visit complete
2021/01/10 22:07:47 [TRACE] vertex "data.aws_instances.web_instances_a": dynamic subgraph completed successfully
2021/01/10 22:07:47 [TRACE] vertex "data.aws_instances.web_instances_a": visit complete
2021/01/10 22:07:47 [TRACE] dag/walk: visiting "aws_lb_target_group_attachment.attach_web_a"
2021/01/10 22:07:47 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a": starting visit (*terraform.NodeRefreshableManagedResource)
2021/01/10 22:07:47 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a": expanding dynamic subgraph
2021/01/10 22:07:47 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:47 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/01/10 22:07:47 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:47 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:47 [DEBUG] ReferenceTransformer: "aws_lb_target_group_attachment.attach_web_a[0]" references: []
2021/01/10 22:07:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:47 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:47 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:47 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a": entering dynamic subgraph
2021/01/10 22:07:47 [TRACE] dag/walk: updating graph
2021/01/10 22:07:47 [TRACE] dag/walk: added new vertex: "aws_lb_target_group_attachment.attach_web_a[0]"
2021/01/10 22:07:47 [TRACE] dag/walk: visiting "aws_lb_target_group_attachment.attach_web_a[0]"
2021/01/10 22:07:47 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a[0]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/01/10 22:07:47 [TRACE] NodeRefreshableManagedResourceInstance: aws_lb_target_group_attachment.attach_web_a[0] will be refreshed
2021/01/10 22:07:47 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a[0]": evaluating
2021/01/10 22:07:47 [TRACE] [walkRefresh] Entering eval tree: aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:47 [TRACE] EvalReadState: reading state for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:47 [TRACE] UpgradeResourceState: schema version of aws_lb_target_group_attachment.attach_web_a[0] is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:47 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/01/10 22:07:47 [TRACE] GRPCProvider: ReadResource
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:47 [TRACE] EvalWriteState: recording 6 dependencies for aws_instance.prometheus_a
2021/01/10 22:07:47 [TRACE] EvalWriteState: writing current state object for aws_instance.prometheus_a
2021/01/10 22:07:47 [TRACE] [walkRefresh] Exiting eval tree: aws_instance.prometheus_a
2021/01/10 22:07:47 [TRACE] vertex "aws_instance.prometheus_a": visit complete
2021/01/10 22:07:47 [TRACE] vertex "aws_instance.prometheus_a": dynamic subgraph completed successfully
2021/01/10 22:07:47 [TRACE] vertex "aws_instance.prometheus_a": visit complete
2021/01/10 22:07:47 [TRACE] dag/walk: visiting "output.Prometheus_URL"
2021/01/10 22:07:47 [TRACE] vertex "output.Prometheus_URL": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:47 [TRACE] vertex "output.Prometheus_URL": evaluating
2021/01/10 22:07:47 [TRACE] [walkRefresh] Entering eval tree: output.Prometheus_URL
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:47 [TRACE] EvalWriteOutput: Saving value for output.Prometheus_URL in state
2021/01/10 22:07:47 [TRACE] EvalWriteOutput: Saving Create change for output.Prometheus_URL in changeset
2021/01/10 22:07:47 [TRACE] [walkRefresh] Exiting eval tree: output.Prometheus_URL
2021/01/10 22:07:47 [TRACE] vertex "output.Prometheus_URL": visit complete
2021/01/10 22:07:47 [TRACE] dag/walk: visiting "output.Grafana_URL"
2021/01/10 22:07:47 [TRACE] vertex "output.Grafana_URL": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:47 [TRACE] vertex "output.Grafana_URL": evaluating
2021/01/10 22:07:47 [TRACE] [walkRefresh] Entering eval tree: output.Grafana_URL
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:47 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:47 [TRACE] EvalWriteOutput: Saving value for output.Grafana_URL in state
2021/01/10 22:07:47 [TRACE] EvalWriteOutput: Saving Create change for output.Grafana_URL in changeset
2021/01/10 22:07:47 [TRACE] [walkRefresh] Exiting eval tree: output.Grafana_URL
2021/01/10 22:07:47 [TRACE] vertex "output.Grafana_URL": visit complete
2021-01-10T22:07:48.171Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:48 [WARN] Target Attachment does not exist, recreating attachment: timestamp=2021-01-10T22:07:48.171Z
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:48 [TRACE] EvalWriteState: removing state object for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:48 [TRACE] [walkRefresh] Exiting eval tree: aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:48 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a[0]": visit complete
2021/01/10 22:07:48 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a": dynamic subgraph completed successfully
2021/01/10 22:07:48 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "provider.aws (close)"
2021/01/10 22:07:48 [TRACE] vertex "provider.aws (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/01/10 22:07:48 [TRACE] vertex "provider.aws (close)": evaluating
2021/01/10 22:07:48 [TRACE] [walkRefresh] Entering eval tree: provider.aws (close)
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/01/10 22:07:48 [TRACE] GRPCProvider: Close
2021-01-10T22:07:48.176Z [DEBUG] plugin: plugin process exited: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 pid=38121
2021-01-10T22:07:48.177Z [DEBUG] plugin: plugin exited
2021/01/10 22:07:48 [TRACE] [walkRefresh] Exiting eval tree: provider.aws (close)
2021/01/10 22:07:48 [TRACE] vertex "provider.aws (close)": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "root"
2021/01/10 22:07:48 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/01/10 22:07:48 [TRACE] vertex "root": visit complete
2021/01/10 22:07:48 [INFO] backend/local: apply calling Plan
2021/01/10 22:07:48 [INFO] terraform: building graph: GraphTypePlan
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/01/10 22:07:48 [TRACE] ConfigTransformer: Starting for path: 
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_alb.alb - *terraform.NodePlannableResource
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
  aws_instance.prometheus_a - *terraform.NodePlannableResource
  aws_instance.prometheus_b - *terraform.NodePlannableResource
  aws_instance.web_a - *terraform.NodePlannableResource
  aws_instance.web_b - *terraform.NodePlannableResource
  aws_internet_gateway.gw - *terraform.NodePlannableResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
  aws_route.internet_access - *terraform.NodePlannableResource
  aws_route53_record.A - *terraform.NodePlannableResource
  aws_route53_record.A_www - *terraform.NodePlannableResource
  aws_route53_zone.zone - *terraform.NodePlannableResource
  aws_security_group.internal_access - *terraform.NodePlannableResource
  aws_security_group.prometheus_access - *terraform.NodePlannableResource
  aws_security_group.web_access - *terraform.NodePlannableResource
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
  aws_vpc.vpc - *terraform.NodePlannableResource
  data.aws_instances.web_instances_a - *terraform.NodePlannableResource
  data.aws_instances.web_instances_b - *terraform.NodePlannableResource
  ------
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_alb.alb - *terraform.NodePlannableResource
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
  aws_instance.prometheus_a - *terraform.NodePlannableResource
  aws_instance.prometheus_b - *terraform.NodePlannableResource
  aws_instance.web_a - *terraform.NodePlannableResource
  aws_instance.web_b - *terraform.NodePlannableResource
  aws_internet_gateway.gw - *terraform.NodePlannableResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
  aws_route.internet_access - *terraform.NodePlannableResource
  aws_route53_record.A - *terraform.NodePlannableResource
  aws_route53_record.A_www - *terraform.NodePlannableResource
  aws_route53_zone.zone - *terraform.NodePlannableResource
  aws_security_group.internal_access - *terraform.NodePlannableResource
  aws_security_group.prometheus_access - *terraform.NodePlannableResource
  aws_security_group.web_access - *terraform.NodePlannableResource
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
  aws_vpc.vpc - *terraform.NodePlannableResource
  data.aws_instances.web_instances_a - *terraform.NodePlannableResource
  data.aws_instances.web_instances_b - *terraform.NodePlannableResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  ------
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.StateTransformer
2021/01/10 22:07:48 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.A" (*terraform.NodePlannableResource) config from route_53.tf:8,1-34
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_public_az_a" (*terraform.NodePlannableResource) config from networking.tf:41,1-43
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_listener_rule.listener_rule_http" (*terraform.NodePlannableResource) config from load_balancer.tf:34,1-54
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.ovpDevOpsKey" (*terraform.NodePlannableResource) config from key_pair.tf:2,1-39
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc.vpc" (*terraform.NodePlannableResource) config from networking.tf:2,1-25
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_instances.web_instances_a" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:80, Column:1, Byte:2458}, End:hcl.Pos{Line:80, Column:39, Byte:2496}}
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.web_a" (*terraform.NodePlannableResource) config from main.tf:2,1-32
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_private_az_a" (*terraform.NodePlannableResource) config from networking.tf:55,1-44
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_listener.alb_listener_http" (*terraform.NodePlannableResource) config from load_balancer.tf:9,1-48
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.web_access" (*terraform.NodePlannableResource) config from security_groups.tf:2,1-43
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.internal_access" (*terraform.NodePlannableResource) config from security_groups.tf:37,1-48
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lb_target_group_attachment.attach_web_b" (*terraform.NodePlannableResource) config from load_balancer.tf:75,1-57
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_zone.zone" (*terraform.NodePlannableResource) config from route_53.tf:2,1-35
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.prometheus_a" (*terraform.NodePlannableResource) config from prometheus.tf:3,1-39
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lb_target_group_attachment.attach_web_a" (*terraform.NodePlannableResource) config from load_balancer.tf:67,1-57
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.prometheus_b" (*terraform.NodePlannableResource) config from prometheus.tf:48,1-39
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.A_www" (*terraform.NodePlannableResource) config from route_53.tf:20,1-38
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user_policy.prometheus_role" (*terraform.NodePlannableResource) config from prometheus_iam.tf:10,1-49
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user.prometheus_iam" (*terraform.NodePlannableResource) config from prometheus_iam.tf:1,1-41
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_listener.alb_listener_https" (*terraform.NodePlannableResource) config from load_balancer.tf:20,1-49
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_target_group.alb_target_group_http" (*terraform.NodePlannableResource) config from load_balancer.tf:50,1-56
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route.internet_access" (*terraform.NodePlannableResource) config from networking.tf:34,1-39
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_private_az_b" (*terraform.NodePlannableResource) config from networking.tf:60,1-44
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.web_b" (*terraform.NodePlannableResource) config from main.tf:41,1-32
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.prometheus_access" (*terraform.NodePlannableResource) config from security_groups.tf:60,1-50
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_instances.web_instances_b" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:92, Column:1, Byte:2675}, End:hcl.Pos{Line:92, Column:39, Byte:2713}}
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb.alb" (*terraform.NodePlannableResource) config from load_balancer.tf:2,1-25
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_access_key.prometheus_access_key" (*terraform.NodePlannableResource) config from prometheus_iam.tf:6,1-54
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_internet_gateway.gw" (*terraform.NodePlannableResource) config from networking.tf:7,1-37
2021/01/10 22:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_public_az_b" (*terraform.NodePlannableResource) config from networking.tf:47,1-43
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_alb.alb - *terraform.NodePlannableResource
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
  aws_instance.prometheus_a - *terraform.NodePlannableResource
  aws_instance.prometheus_b - *terraform.NodePlannableResource
  aws_instance.web_a - *terraform.NodePlannableResource
  aws_instance.web_b - *terraform.NodePlannableResource
  aws_internet_gateway.gw - *terraform.NodePlannableResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
  aws_route.internet_access - *terraform.NodePlannableResource
  aws_route53_record.A - *terraform.NodePlannableResource
  aws_route53_record.A_www - *terraform.NodePlannableResource
  aws_route53_zone.zone - *terraform.NodePlannableResource
  aws_security_group.internal_access - *terraform.NodePlannableResource
  aws_security_group.prometheus_access - *terraform.NodePlannableResource
  aws_security_group.web_access - *terraform.NodePlannableResource
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
  aws_vpc.vpc - *terraform.NodePlannableResource
  data.aws_instances.web_instances_a - *terraform.NodePlannableResource
  data.aws_instances.web_instances_b - *terraform.NodePlannableResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/01/10 22:07:48 [TRACE] MissingProviderTransformer: added implicit provisioner remote-exec, first implied by aws_instance.web_a
2021/01/10 22:07:48 [TRACE] MissingProviderTransformer: added implicit provisioner local-exec, first implied by aws_instance.web_a
2021/01/10 22:07:48 [TRACE] MissingProviderTransformer: added implicit provisioner file, first implied by aws_instance.prometheus_a
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer with new graph:
  aws_alb.alb - *terraform.NodePlannableResource
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
  aws_instance.prometheus_a - *terraform.NodePlannableResource
  aws_instance.prometheus_b - *terraform.NodePlannableResource
  aws_instance.web_a - *terraform.NodePlannableResource
  aws_instance.web_b - *terraform.NodePlannableResource
  aws_internet_gateway.gw - *terraform.NodePlannableResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
  aws_route.internet_access - *terraform.NodePlannableResource
  aws_route53_record.A - *terraform.NodePlannableResource
  aws_route53_record.A_www - *terraform.NodePlannableResource
  aws_route53_zone.zone - *terraform.NodePlannableResource
  aws_security_group.internal_access - *terraform.NodePlannableResource
  aws_security_group.prometheus_access - *terraform.NodePlannableResource
  aws_security_group.web_access - *terraform.NodePlannableResource
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
  aws_vpc.vpc - *terraform.NodePlannableResource
  data.aws_instances.web_instances_a - *terraform.NodePlannableResource
  data.aws_instances.web_instances_b - *terraform.NodePlannableResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/01/10 22:07:48 [TRACE] ProvisionerTransformer: aws_instance.web_a is provisioned by remote-exec ("provisioner.remote-exec")
2021/01/10 22:07:48 [TRACE] ProvisionerTransformer: aws_instance.web_a is provisioned by local-exec ("provisioner.local-exec")
2021/01/10 22:07:48 [TRACE] ProvisionerTransformer: aws_instance.prometheus_a is provisioned by file ("provisioner.file")
2021/01/10 22:07:48 [TRACE] ProvisionerTransformer: aws_instance.prometheus_a is provisioned by remote-exec ("provisioner.remote-exec")
2021/01/10 22:07:48 [TRACE] ProvisionerTransformer: aws_instance.prometheus_a is provisioned by local-exec ("provisioner.local-exec")
2021/01/10 22:07:48 [TRACE] ProvisionerTransformer: aws_instance.prometheus_b is provisioned by file ("provisioner.file")
2021/01/10 22:07:48 [TRACE] ProvisionerTransformer: aws_instance.prometheus_b is provisioned by remote-exec ("provisioner.remote-exec")
2021/01/10 22:07:48 [TRACE] ProvisionerTransformer: aws_instance.prometheus_b is provisioned by local-exec ("provisioner.local-exec")
2021/01/10 22:07:48 [TRACE] ProvisionerTransformer: aws_instance.web_b is provisioned by remote-exec ("provisioner.remote-exec")
2021/01/10 22:07:48 [TRACE] ProvisionerTransformer: aws_instance.web_b is provisioned by local-exec ("provisioner.local-exec")
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.ProvisionerTransformer with new graph:
  aws_alb.alb - *terraform.NodePlannableResource
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
  aws_instance.prometheus_a - *terraform.NodePlannableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b - *terraform.NodePlannableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.gw - *terraform.NodePlannableResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
  aws_route.internet_access - *terraform.NodePlannableResource
  aws_route53_record.A - *terraform.NodePlannableResource
  aws_route53_record.A_www - *terraform.NodePlannableResource
  aws_route53_zone.zone - *terraform.NodePlannableResource
  aws_security_group.internal_access - *terraform.NodePlannableResource
  aws_security_group.prometheus_access - *terraform.NodePlannableResource
  aws_security_group.web_access - *terraform.NodePlannableResource
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
  aws_vpc.vpc - *terraform.NodePlannableResource
  data.aws_instances.web_instances_a - *terraform.NodePlannableResource
  data.aws_instances.web_instances_b - *terraform.NodePlannableResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/01/10 22:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/01/10 22:07:48 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from provider.tf:2,1-15
2021/01/10 22:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_alb.alb - *terraform.NodePlannableResource
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
  aws_instance.prometheus_a - *terraform.NodePlannableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b - *terraform.NodePlannableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.gw - *terraform.NodePlannableResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
  aws_route.internet_access - *terraform.NodePlannableResource
  aws_route53_record.A - *terraform.NodePlannableResource
  aws_route53_record.A_www - *terraform.NodePlannableResource
  aws_route53_zone.zone - *terraform.NodePlannableResource
  aws_security_group.internal_access - *terraform.NodePlannableResource
  aws_security_group.prometheus_access - *terraform.NodePlannableResource
  aws_security_group.web_access - *terraform.NodePlannableResource
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
  aws_vpc.vpc - *terraform.NodePlannableResource
  data.aws_instances.web_instances_a - *terraform.NodePlannableResource
  data.aws_instances.web_instances_b - *terraform.NodePlannableResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/01/10 22:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/01/10 22:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_alb_target_group.alb_target_group_http is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_iam_user_policy.prometheus_role is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_alb_listener.alb_listener_https is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_alb.alb is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_instance.web_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_route53_record.A is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_subnet.subnet_public_az_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_vpc.vpc is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: data.aws_instances.web_instances_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_security_group.web_access is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_instance.web_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_route53_zone.zone is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_instance.prometheus_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_lb_target_group_attachment.attach_web_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_instance.prometheus_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_route53_record.A_www is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_lb_target_group_attachment.attach_web_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_route.internet_access is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_iam_user.prometheus_iam is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_iam_access_key.prometheus_access_key is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_subnet.subnet_private_az_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_security_group.prometheus_access is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: data.aws_instances.web_instances_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_internet_gateway.gw is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_subnet.subnet_public_az_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_alb_listener_rule.listener_rule_http is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_key_pair.ovpDevOpsKey is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_alb_listener.alb_listener_http is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_subnet.subnet_private_az_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: aws_security_group.internal_access is provided by provider.aws or inherited equivalent
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_record.A_www
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_route53_record.A_www" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_user.prometheus_iam
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_iam_user.prometheus_iam" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_instances.web_instances_a
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "data.aws_instances.web_instances_a" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lb_target_group_attachment.attach_web_a
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_lb_target_group_attachment.attach_web_a" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_instances.web_instances_b
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "data.aws_instances.web_instances_b" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_alb_listener_rule.listener_rule_http" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_user_policy.prometheus_role
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_iam_user_policy.prometheus_role" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_public_az_a
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_subnet.subnet_public_az_a" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_record.A
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_route53_record.A" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.web_access
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_security_group.web_access" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.prometheus_b
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_instance.prometheus_b" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.web_a
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_instance.web_a" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_zone.zone
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_route53_zone.zone" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.prometheus_access
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_security_group.prometheus_access" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_key_pair.ovpDevOpsKey" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_alb_target_group.alb_target_group_http" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb.alb
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_alb.alb" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.web_b
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_instance.web_b" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_iam_access_key.prometheus_access_key" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_private_az_b
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_subnet.subnet_private_az_b" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_internet_gateway.gw
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_internet_gateway.gw" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_public_az_b
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_subnet.subnet_public_az_b" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_private_az_a
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_subnet.subnet_private_az_a" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.prometheus_a
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_instance.prometheus_a" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lb_target_group_attachment.attach_web_b
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_lb_target_group_attachment.attach_web_b" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route.internet_access
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_route.internet_access" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.internal_access
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_security_group.internal_access" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_listener.alb_listener_https
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_alb_listener.alb_listener_https" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_vpc.vpc
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_vpc.vpc" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_listener.alb_listener_http
2021/01/10 22:07:48 [DEBUG] ProviderTransformer: "aws_alb_listener.alb_listener_http" (*terraform.NodePlannableResource) needs provider.aws
2021/01/10 22:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_alb.alb - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.gw - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route.internet_access - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A_www - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.internal_access - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/01/10 22:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/01/10 22:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/01/10 22:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_alb.alb - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.gw - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route.internet_access - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A_www - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.internal_access - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user_policy.prometheus_role
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_listener.alb_listener_https
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb.alb
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.web_b
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.web_b
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.web_b
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.A
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_public_az_a
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc.vpc
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_instances.web_instances_a
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.web_access
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.web_a
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.web_a
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.web_a
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_zone.zone
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.prometheus_a
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to aws_instance.prometheus_a
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.prometheus_a
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.prometheus_a
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lb_target_group_attachment.attach_web_b
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.prometheus_b
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to aws_instance.prometheus_b
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.prometheus_b
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.prometheus_b
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.A_www
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lb_target_group_attachment.attach_web_a
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route.internet_access
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user.prometheus_iam
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_private_az_b
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.prometheus_access
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_instances.web_instances_b
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_internet_gateway.gw
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_public_az_b
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_listener.alb_listener_http
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_private_az_a
2021/01/10 22:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.internal_access
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.cidr_subnet_public_a" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_alb_target_group.alb_target_group_http" references: [aws_vpc.vpc]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_iam_user_policy.prometheus_role" references: [aws_iam_user.prometheus_iam]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_alb_listener.alb_listener_https" references: [var.cert aws_alb.alb aws_alb_target_group.alb_target_group_http]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.cidr_vpc" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.az_b" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.cidr_subnet_private_b" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_alb.alb" references: [aws_security_group.web_access aws_subnet.subnet_public_az_a aws_subnet.subnet_public_az_b]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_instance.web_b" references: [var.instance_count var.ami var.az_b aws_security_group.internal_access aws_security_group.prometheus_access aws_subnet.subnet_private_az_b aws_key_pair.ovpDevOpsKey var.instance var.ansible_user var.private_key var.private_key]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.public_key" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.cidr_subnet_private_a" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "output.name_servers" references: [aws_route53_zone.zone]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_route53_record.A" references: [aws_route53_zone.zone var.hosted_zone aws_alb.alb aws_alb.alb]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_public_az_a" references: [var.cidr_subnet_public_a aws_vpc.vpc var.az_a]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "output.Grafana_URL" references: [aws_instance.prometheus_a]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.cidr_subnet_public_b" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_vpc.vpc" references: [var.cidr_vpc]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "data.aws_instances.web_instances_a" references: [aws_instance.web_a]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.ansible_user" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_security_group.web_access" references: [aws_vpc.vpc]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_instance.web_a" references: [var.instance_count aws_key_pair.ovpDevOpsKey aws_security_group.internal_access aws_security_group.web_access aws_security_group.prometheus_access var.ami var.instance aws_subnet.subnet_public_az_a var.az_a var.ansible_user var.private_key var.private_key]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_route53_zone.zone" references: [var.hosted_zone]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_instance.prometheus_a" references: [var.instance aws_security_group.prometheus_access aws_subnet.subnet_public_az_a aws_key_pair.ovpDevOpsKey var.private_key var.ubuntu_user var.ubuntu_user var.private_key aws_iam_access_key.prometheus_access_key aws_iam_access_key.prometheus_access_key var.private_key aws_iam_access_key.prometheus_access_key aws_iam_access_key.prometheus_access_key]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_lb_target_group_attachment.attach_web_b" references: [var.instance_count data.aws_instances.web_instances_b aws_alb_target_group.alb_target_group_http]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "output.alb_address" references: [aws_alb.alb]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.ubuntu_user" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_instance.prometheus_b" references: [aws_security_group.prometheus_access var.instance aws_subnet.subnet_public_az_b aws_key_pair.ovpDevOpsKey var.ubuntu_user var.private_key var.private_key var.ubuntu_user aws_iam_access_key.prometheus_access_key aws_iam_access_key.prometheus_access_key var.private_key aws_iam_access_key.prometheus_access_key aws_iam_access_key.prometheus_access_key]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_route53_record.A_www" references: [aws_route53_zone.zone var.hosted_zone aws_alb.alb aws_alb.alb]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_lb_target_group_attachment.attach_web_a" references: [var.instance_count aws_alb_target_group.alb_target_group_http data.aws_instances.web_instances_a]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.region" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.cert" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_route.internet_access" references: [aws_vpc.vpc aws_internet_gateway.gw]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_iam_user.prometheus_iam" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.hosted_zone" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_iam_access_key.prometheus_access_key" references: [aws_iam_user.prometheus_iam]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_private_az_b" references: [aws_vpc.vpc var.cidr_subnet_private_b var.az_b]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_security_group.prometheus_access" references: [aws_vpc.vpc]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "data.aws_instances.web_instances_b" references: [aws_instance.web_b]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.instance" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_internet_gateway.gw" references: [aws_vpc.vpc]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_public_az_b" references: [var.cidr_subnet_public_b aws_vpc.vpc var.az_b]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.az_a" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_alb_listener_rule.listener_rule_http" references: [aws_alb_listener.alb_listener_https aws_alb_target_group.alb_target_group_http]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_key_pair.ovpDevOpsKey" references: [var.public_key]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "output.Prometheus_URL" references: [aws_instance.prometheus_a]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.instance_count" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_alb_listener.alb_listener_http" references: [aws_alb.alb aws_alb_target_group.alb_target_group_http]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_private_az_a" references: [var.az_a var.cidr_subnet_private_a aws_vpc.vpc]
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.ami" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "provisioner.local-exec" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "var.private_key" references: []
2021/01/10 22:07:48 [DEBUG] ReferenceTransformer: "aws_security_group.internal_access" references: [aws_vpc.vpc]
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_alb.alb - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access - *terraform.NodePlannableResource
    aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodePlannableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodePlannableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodePlannableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_alb.alb - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access - *terraform.NodePlannableResource
    aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
    aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_route.internet_access - *terraform.NodePlannableResource
    aws_route53_record.A - *terraform.NodePlannableResource
    aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.cert - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
    var.cidr_vpc - *terraform.NodeRootVariable
    var.hosted_zone - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.public_key - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodePlannableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodePlannableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodePlannableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_alb.alb" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_instance.web_b" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_route53_record.A" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_subnet.subnet_public_az_a" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_vpc.vpc" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "data.aws_instances.web_instances_a" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_security_group.web_access" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_instance.web_a" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_route53_zone.zone" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_instance.prometheus_a" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_lb_target_group_attachment.attach_web_b" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_instance.prometheus_b" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_route53_record.A_www" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_lb_target_group_attachment.attach_web_a" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_route.internet_access" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_iam_user.prometheus_iam" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_iam_access_key.prometheus_access_key" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_subnet.subnet_private_az_b" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_security_group.prometheus_access" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "data.aws_instances.web_instances_b" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_internet_gateway.gw" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_subnet.subnet_public_az_b" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_alb_listener_rule.listener_rule_http" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_key_pair.ovpDevOpsKey" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_alb_listener.alb_listener_http" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_subnet.subnet_private_az_a" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_security_group.internal_access" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_alb_target_group.alb_target_group_http" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_iam_user_policy.prometheus_role" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] ForcedCBDTransformer: "aws_alb_listener.alb_listener_https" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_alb.alb - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access - *terraform.NodePlannableResource
    aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
    aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_route.internet_access - *terraform.NodePlannableResource
    aws_route53_record.A - *terraform.NodePlannableResource
    aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.cert - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
    var.cidr_vpc - *terraform.NodeRootVariable
    var.hosted_zone - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.public_key - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodePlannableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodePlannableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodePlannableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
    aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_route.internet_access - *terraform.NodePlannableResource
    aws_route53_record.A - *terraform.NodePlannableResource
    aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer with new graph:
  aws_alb.alb - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access - *terraform.NodePlannableResource
    aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
    aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_route.internet_access - *terraform.NodePlannableResource
    aws_route53_record.A - *terraform.NodePlannableResource
    aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.cert - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
    var.cidr_vpc - *terraform.NodeRootVariable
    var.hosted_zone - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.public_key - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodePlannableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodePlannableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodePlannableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
    aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_route.internet_access - *terraform.NodePlannableResource
    aws_route53_record.A - *terraform.NodePlannableResource
    aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
  provisioner.remote-exec - *terraform.NodeProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_alb.alb - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access - *terraform.NodePlannableResource
    aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
    aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_route.internet_access - *terraform.NodePlannableResource
    aws_route53_record.A - *terraform.NodePlannableResource
    aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.cert - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
    var.cidr_vpc - *terraform.NodeRootVariable
    var.hosted_zone - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.public_key - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodePlannableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodePlannableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodePlannableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
    aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_route.internet_access - *terraform.NodePlannableResource
    aws_route53_record.A - *terraform.NodePlannableResource
    aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
  provisioner.remote-exec - *terraform.NodeProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:48 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/01/10 22:07:48 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_alb.alb - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    var.cert - *terraform.NodeRootVariable
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_alb_listener.alb_listener_https - *terraform.NodePlannableResource
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_iam_user.prometheus_iam - *terraform.NodePlannableResource
  aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  aws_instance.web_a - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_security_group.web_access - *terraform.NodePlannableResource
    aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_instance.web_b - *terraform.NodePlannableResource
    aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.public_key - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    data.aws_instances.web_instances_a - *terraform.NodePlannableResource
  aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResource
    data.aws_instances.web_instances_b - *terraform.NodePlannableResource
  aws_route.internet_access - *terraform.NodePlannableResource
    aws_internet_gateway.gw - *terraform.NodePlannableResource
  aws_route53_record.A - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
  aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_alb.alb - *terraform.NodePlannableResource
    aws_route53_zone.zone - *terraform.NodePlannableResource
  aws_route53_zone.zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.hosted_zone - *terraform.NodeRootVariable
  aws_security_group.internal_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
  aws_security_group.prometheus_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
  aws_security_group.web_access - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    var.az_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResource
    aws_vpc.vpc - *terraform.NodePlannableResource
    var.az_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.cidr_vpc - *terraform.NodeRootVariable
  data.aws_instances.web_instances_a - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
  data.aws_instances.web_instances_b - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_route.internet_access - *terraform.NodePlannableResource
    aws_route53_record.A - *terraform.NodePlannableResource
    aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodePlannableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a - *terraform.NodePlannableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb - *terraform.NodePlannableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb_listener.alb_listener_http - *terraform.NodePlannableResource
    aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResource
    aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResource
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_a - *terraform.NodePlannableResource
    aws_lb_target_group_attachment.attach_web_b - *terraform.NodePlannableResource
    aws_route.internet_access - *terraform.NodePlannableResource
    aws_route53_record.A - *terraform.NodePlannableResource
    aws_route53_record.A_www - *terraform.NodePlannableResource
    aws_subnet.subnet_private_az_a - *terraform.NodePlannableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
  provisioner.remote-exec - *terraform.NodeProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a - *terraform.NodePlannableResource
    aws_instance.prometheus_b - *terraform.NodePlannableResource
    aws_instance.web_a - *terraform.NodePlannableResource
    aws_instance.web_b - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:48 [DEBUG] Starting graph walk: walkPlan
2021/01/10 22:07:48 [TRACE] dag/walk: updating graph
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.private_key"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_vpc.vpc"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.ubuntu_user"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.ami"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "provisioner.file"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_instance.web_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.region"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.cert"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_route.internet_access"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_security_group.web_access"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.gw"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_security_group.internal_access"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.cidr_vpc"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "root"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.ansible_user"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "data.aws_instances.web_instances_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.instance"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.az_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "output.name_servers"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_route53_record.A"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_instance.web_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_lb_target_group_attachment.attach_web_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_iam_user.prometheus_iam"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_private_az_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "provisioner.local-exec (close)"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_private_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_lb_target_group_attachment.attach_web_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_route53_record.A_www"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "provisioner.local-exec"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_route53_zone.zone"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_instance.prometheus_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_security_group.prometheus_access"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.az_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_alb.alb"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.public_key"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "output.alb_address"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.hosted_zone"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "output.Prometheus_URL"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_private_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "provisioner.file (close)"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "data.aws_instances.web_instances_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_instance.prometheus_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "provider.aws"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "output.Grafana_URL"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.instance_count"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_public_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_public_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "provisioner.remote-exec"
2021/01/10 22:07:48 [TRACE] dag/walk: added new vertex: "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_route53_zone.zone" waiting on "var.hosted_zone"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_iam_user_policy.prometheus_role" waiting on "aws_iam_user.prometheus_iam"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_b" waiting on "var.az_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_a" waiting on "var.cidr_subnet_private_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route53_record.A"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "provisioner.remote-exec"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "provisioner.local-exec"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_a" waiting on "data.aws_instances.web_instances_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "output.Grafana_URL" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "provisioner.remote-exec"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_vpc.vpc" waiting on "provider.aws"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_iam_access_key.prometheus_access_key" waiting on "aws_iam_user.prometheus_iam"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.instance"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_alb.alb" waiting on "aws_security_group.web_access"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "var.ubuntu_user"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_lb_target_group_attachment.attach_web_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.private_key"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_security_group.prometheus_access" waiting on "aws_vpc.vpc"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_a" waiting on "aws_vpc.vpc"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.private_key"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "var.private_key"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "data.aws_instances.web_instances_a" waiting on "aws_instance.web_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_b" waiting on "var.cidr_subnet_private_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.alb_address"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_lb_target_group_attachment.attach_web_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_route53_record.A_www" waiting on "aws_route53_zone.zone"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "provisioner.file"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_route53_zone.zone" waiting on "provider.aws"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "provisioner.remote-exec"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_https" waiting on "var.cert"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "var.instance"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.ami"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "aws_subnet.subnet_private_az_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "aws_instance.web_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_iam_user.prometheus_iam" waiting on "provider.aws"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route.internet_access"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "aws_security_group.internal_access"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_alb_target_group.alb_target_group_http" waiting on "aws_vpc.vpc"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route53_record.A"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_a" waiting on "aws_vpc.vpc"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_alb.alb" waiting on "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "output.name_servers" waiting on "aws_route53_zone.zone"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_lb_target_group_attachment.attach_web_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_instance.prometheus_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_instance.web_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route53_record.A_www"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_key_pair.ovpDevOpsKey" waiting on "var.public_key"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_a" waiting on "var.cidr_subnet_public_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.instance_count"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_key_pair.ovpDevOpsKey" waiting on "provider.aws"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.ansible_user"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.instance_count"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "output.Prometheus_URL" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_route53_record.A" waiting on "aws_alb.alb"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "provisioner.local-exec"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_route53_record.A_www" waiting on "aws_alb.alb"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "output.alb_address" waiting on "aws_alb.alb"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "var.instance"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_b" waiting on "var.cidr_subnet_public_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "provisioner.local-exec"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_security_group.web_access"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.name_servers"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_b" waiting on "var.az_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.instance"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "var.ubuntu_user"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "var.private_key"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_a" waiting on "var.az_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_b" waiting on "aws_vpc.vpc"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route.internet_access"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_route53_record.A" waiting on "aws_route53_zone.zone"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "var.ami"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "aws_instance.web_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "aws_security_group.prometheus_access"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route53_record.A_www"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_lb_target_group_attachment.attach_web_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_b" waiting on "aws_vpc.vpc"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_a" waiting on "var.az_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "aws_instance.prometheus_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "provisioner.local-exec"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_https" waiting on "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "provisioner.remote-exec"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "aws_security_group.prometheus_access"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_instance.web_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "data.aws_instances.web_instances_b" waiting on "aws_instance.web_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_https" waiting on "aws_alb.alb"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_b" waiting on "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_security_group.prometheus_access"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_internet_gateway.gw" waiting on "aws_vpc.vpc"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_security_group.web_access" waiting on "aws_vpc.vpc"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_route.internet_access" waiting on "aws_internet_gateway.gw"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "provisioner.file"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.region"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_b" waiting on "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.Grafana_URL"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b" waiting on "aws_security_group.prometheus_access"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_alb.alb" waiting on "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_http" waiting on "aws_alb.alb"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "root" waiting on "provisioner.local-exec (close)"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_security_group.internal_access" waiting on "aws_vpc.vpc"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_vpc.vpc" waiting on "var.cidr_vpc"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_instance.prometheus_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_instance.prometheus_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.Prometheus_URL"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_alb_listener_rule.listener_rule_http" waiting on "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_b" waiting on "data.aws_instances.web_instances_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "var.ansible_user"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_http" waiting on "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_instance.prometheus_b"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_a" waiting on "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.web_a" waiting on "aws_security_group.internal_access"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a" waiting on "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:48 [TRACE] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_instance.prometheus_b"
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_route53_record.A_www", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_security_group.web_access", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_route.internet_access", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_lb_target_group_attachment.attach_web_b", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "data.aws_instances.web_instances_a", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_alb_listener.alb_listener_https", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "output.alb_address", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_iam_user_policy.prometheus_role", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_lb_target_group_attachment.attach_web_a", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_vpc.vpc", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "provisioner.local-exec (close)", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_iam_user.prometheus_iam", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_internet_gateway.gw", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_security_group.internal_access", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_private_az_b", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_instance.web_b", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "output.Grafana_URL", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_iam_access_key.prometheus_access_key", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_public_az_a", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_alb_listener_rule.listener_rule_http", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_route53_zone.zone", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_instance.web_a", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_alb.alb", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_route53_record.A", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_public_az_b", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_alb_listener.alb_listener_http", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_instance.prometheus_b", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_security_group.prometheus_access", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_instance.prometheus_a", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_key_pair.ovpDevOpsKey", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "output.Prometheus_URL", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_alb_target_group.alb_target_group_http", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_private_az_a", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "output.name_servers", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: dependencies changed for "data.aws_instances.web_instances_b", sending new deps
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.cidr_subnet_public_b"
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_subnet_public_b": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_subnet_public_b": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.cidr_subnet_public_b
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.cidr_subnet_public_b
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_subnet_public_b": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.cidr_subnet_public_a"
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_subnet_public_a": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_subnet_public_a": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.cidr_subnet_public_a
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.cidr_subnet_public_a
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_subnet_public_a": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "provisioner.remote-exec"
2021/01/10 22:07:48 [TRACE] vertex "provisioner.remote-exec": starting visit (*terraform.NodeProvisioner)
2021/01/10 22:07:48 [TRACE] vertex "provisioner.remote-exec": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: provisioner.remote-exec
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalInitProvisioner
2021-01-10T22:07:48.209Z [DEBUG] plugin: starting plugin: path=/bin/terraform args=[/bin/terraform, internal-plugin, provisioner, remote-exec]
2021-01-10T22:07:48.210Z [DEBUG] plugin: plugin started: path=/bin/terraform pid=38138
2021-01-10T22:07:48.210Z [DEBUG] plugin: waiting for RPC address: path=/bin/terraform
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.private_key"
2021/01/10 22:07:48 [TRACE] vertex "var.private_key": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.private_key": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.private_key
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.private_key
2021/01/10 22:07:48 [TRACE] vertex "var.private_key": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.ubuntu_user"
2021/01/10 22:07:48 [TRACE] vertex "var.ubuntu_user": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.ubuntu_user": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.ubuntu_user
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.ubuntu_user
2021/01/10 22:07:48 [TRACE] vertex "var.ubuntu_user": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.ami"
2021/01/10 22:07:48 [TRACE] vertex "var.ami": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.ami": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.ami
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.ami
2021/01/10 22:07:48 [TRACE] vertex "var.ami": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.region"
2021/01/10 22:07:48 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.region": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.region
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.region
2021/01/10 22:07:48 [TRACE] vertex "var.region": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.cert"
2021/01/10 22:07:48 [TRACE] vertex "var.cert": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.cert": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.cert
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.cert
2021/01/10 22:07:48 [TRACE] vertex "var.cert": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "provisioner.file"
2021/01/10 22:07:48 [TRACE] vertex "provisioner.file": starting visit (*terraform.NodeProvisioner)
2021/01/10 22:07:48 [TRACE] vertex "provisioner.file": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: provisioner.file
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalInitProvisioner
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.cidr_vpc"
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_vpc": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_vpc": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.cidr_vpc
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.cidr_vpc
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_vpc": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.ansible_user"
2021/01/10 22:07:48 [TRACE] vertex "var.ansible_user": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.ansible_user": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.ansible_user
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.ansible_user
2021/01/10 22:07:48 [TRACE] vertex "var.ansible_user": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.instance"
2021/01/10 22:07:48 [TRACE] vertex "var.instance": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.instance": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.instance
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.instance
2021/01/10 22:07:48 [TRACE] vertex "var.instance": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.az_a"
2021/01/10 22:07:48 [TRACE] vertex "var.az_a": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.az_a": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.az_a
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.az_a
2021/01/10 22:07:48 [TRACE] vertex "var.az_a": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.cidr_subnet_private_b"
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_subnet_private_b": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_subnet_private_b": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.cidr_subnet_private_b
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.cidr_subnet_private_b
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_subnet_private_b": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "provisioner.local-exec"
2021/01/10 22:07:48 [TRACE] vertex "provisioner.local-exec": starting visit (*terraform.NodeProvisioner)
2021/01/10 22:07:48 [TRACE] vertex "provisioner.local-exec": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: provisioner.local-exec
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalInitProvisioner
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.az_b"
2021/01/10 22:07:48 [TRACE] vertex "var.az_b": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.az_b": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.az_b
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.az_b
2021/01/10 22:07:48 [TRACE] vertex "var.az_b": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.public_key"
2021/01/10 22:07:48 [TRACE] vertex "var.public_key": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.public_key": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.public_key
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.public_key
2021/01/10 22:07:48 [TRACE] vertex "var.public_key": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.cidr_subnet_private_a"
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_subnet_private_a": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_subnet_private_a": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.cidr_subnet_private_a
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.cidr_subnet_private_a
2021/01/10 22:07:48 [TRACE] vertex "var.cidr_subnet_private_a": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.hosted_zone"
2021/01/10 22:07:48 [TRACE] vertex "var.hosted_zone": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.hosted_zone": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.hosted_zone
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.hosted_zone
2021/01/10 22:07:48 [TRACE] vertex "var.hosted_zone": visit complete
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "provider.aws"
2021/01/10 22:07:48 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2021/01/10 22:07:48 [TRACE] vertex "provider.aws": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: provider.aws
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021-01-10T22:07:48.211Z [INFO]  plugin: configuring client automatic mTLS
2021/01/10 22:07:48 [TRACE] dag/walk: visiting "var.instance_count"
2021/01/10 22:07:48 [TRACE] vertex "var.instance_count": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:48 [TRACE] vertex "var.instance_count": evaluating
2021/01/10 22:07:48 [TRACE] [walkPlan] Entering eval tree: var.instance_count
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: var.instance_count
2021/01/10 22:07:48 [TRACE] vertex "var.instance_count": visit complete
2021-01-10T22:07:48.274Z [DEBUG] plugin: starting plugin: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 args=[/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5]
2021-01-10T22:07:48.276Z [DEBUG] plugin: plugin started: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 pid=38153
2021-01-10T22:07:48.276Z [DEBUG] plugin: waiting for RPC address: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5
2021-01-10T22:07:48.276Z [DEBUG] plugin: using plugin: version=5
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: provisioner.remote-exec
2021/01/10 22:07:48 [TRACE] vertex "provisioner.remote-exec": visit complete
2021-01-10T22:07:48.276Z [DEBUG] plugin: starting plugin: path=/bin/terraform args=[/bin/terraform, internal-plugin, provisioner, file]
2021-01-10T22:07:48.280Z [DEBUG] plugin: plugin started: path=/bin/terraform pid=38154
2021-01-10T22:07:48.280Z [DEBUG] plugin: waiting for RPC address: path=/bin/terraform
2021-01-10T22:07:48.324Z [DEBUG] plugin: using plugin: version=5
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: provisioner.file
2021/01/10 22:07:48 [TRACE] vertex "provisioner.file": visit complete
2021-01-10T22:07:48.324Z [DEBUG] plugin: starting plugin: path=/bin/terraform args=[/bin/terraform, internal-plugin, provisioner, local-exec]
2021-01-10T22:07:48.326Z [DEBUG] plugin: plugin started: path=/bin/terraform pid=38170
2021-01-10T22:07:48.326Z [DEBUG] plugin: waiting for RPC address: path=/bin/terraform
2021-01-10T22:07:48.384Z [DEBUG] plugin: using plugin: version=5
2021/01/10 22:07:48 [TRACE] [walkPlan] Exiting eval tree: provisioner.local-exec
2021/01/10 22:07:48 [TRACE] vertex "provisioner.local-exec": visit complete
2021-01-10T22:07:48.395Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: configuring server automatic mTLS: timestamp=2021-01-10T22:07:48.395Z
2021-01-10T22:07:48.449Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: plugin address: address=/tmp/plugin128334587 network=unix timestamp=2021-01-10T22:07:48.449Z
2021-01-10T22:07:48.449Z [DEBUG] plugin: using plugin: version=5
2021/01/10 22:07:48 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2021/01/10 22:07:48 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:48 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:48 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/01/10 22:07:48 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2021/01/10 22:07:48 [TRACE] GRPCProvider: GetSchema
2021/01/10 22:07:48 [TRACE] GRPCProvider: Configure
2021-01-10T22:07:48.684Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:48 [INFO] AWS Auth provider used: "SharedCredentialsProvider": timestamp=2021-01-10T22:07:48.683Z
2021-01-10T22:07:48.684Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:48 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-01-10T22:07:48.683Z
2021-01-10T22:07:49.268Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:49 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-01-10T22:07:49.268Z
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: provider.aws
2021/01/10 22:07:50 [TRACE] vertex "provider.aws": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_vpc.vpc"
2021/01/10 22:07:50 [TRACE] vertex "aws_vpc.vpc": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_vpc.vpc": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_vpc.vpc
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_vpc.vpc
2021/01/10 22:07:50 [TRACE] vertex "aws_vpc.vpc": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_vpc.vpc - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_vpc.vpc" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_vpc.vpc": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_vpc.vpc"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_vpc.vpc"
2021/01/10 22:07:50 [TRACE] vertex "aws_vpc.vpc": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_vpc.vpc": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_vpc.vpc
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_vpc.vpc
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_vpc.vpc is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:50 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:50 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_key_pair.ovpDevOpsKey - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_key_pair.ovpDevOpsKey" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:50 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_key_pair.ovpDevOpsKey is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_route53_zone.zone"
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_zone.zone": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_zone.zone": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_route53_zone.zone
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_route53_zone.zone
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_zone.zone": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route53_zone.zone - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_route53_zone.zone" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_zone.zone": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_route53_zone.zone"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_route53_zone.zone"
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_zone.zone": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_zone.zone": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_route53_zone.zone
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_route53_zone.zone
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_route53_zone.zone is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_iam_user.prometheus_iam"
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user.prometheus_iam": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user.prometheus_iam": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_iam_user.prometheus_iam
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_iam_user.prometheus_iam
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user.prometheus_iam": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_user.prometheus_iam - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_iam_user.prometheus_iam" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user.prometheus_iam": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_iam_user.prometheus_iam"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_iam_user.prometheus_iam"
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user.prometheus_iam": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user.prometheus_iam": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_iam_user.prometheus_iam
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_iam_user.prometheus_iam
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_iam_user.prometheus_iam is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_route53_zone.zone"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_iam_user.prometheus_iam"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_vpc.vpc"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_key_pair.ovpDevOpsKey"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_vpc.vpc
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_vpc.vpc
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_vpc.vpc
2021/01/10 22:07:50 [TRACE] vertex "aws_vpc.vpc": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_vpc.vpc": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_vpc.vpc": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_security_group.web_access"
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.web_access": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.web_access": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_security_group.web_access
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.web_access
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.web_access": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.web_access - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_security_group.web_access" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.web_access": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_security_group.web_access"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_security_group.web_access"
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.web_access": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.web_access": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_security_group.web_access
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_security_group.web_access
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_security_group.web_access is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_b": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_b": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_subnet.subnet_public_az_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_subnet.subnet_public_az_b
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_b": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.subnet_public_az_b - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_public_az_b" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_b": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_b": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_b": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_subnet.subnet_public_az_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_subnet.subnet_public_az_b
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_subnet.subnet_public_az_b is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_a": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_a": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_subnet.subnet_private_az_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_subnet.subnet_private_az_a
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_a": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.subnet_private_az_a - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_private_az_a" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_a": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_a": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_a": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_subnet.subnet_private_az_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_subnet.subnet_private_az_a
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_subnet.subnet_private_az_a is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_subnet.subnet_private_az_b"
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_b": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_b": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_subnet.subnet_private_az_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_subnet.subnet_private_az_b
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_b": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.subnet_private_az_b - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_private_az_b" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_b": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_private_az_b"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_subnet.subnet_private_az_b"
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_b": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_b": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_subnet.subnet_private_az_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_subnet.subnet_private_az_b
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_subnet.subnet_private_az_b is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_a": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_a": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_subnet.subnet_public_az_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_subnet.subnet_public_az_a
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_a": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.subnet_public_az_a - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_public_az_a" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_a": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_a": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_a": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_subnet.subnet_public_az_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_subnet.subnet_public_az_a
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_subnet.subnet_public_az_a is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_alb_target_group.alb_target_group_http - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_alb_target_group.alb_target_group_http" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_alb_target_group.alb_target_group_http is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_security_group.prometheus_access"
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.prometheus_access": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.prometheus_access": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_security_group.prometheus_access
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.prometheus_access
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.prometheus_access": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.prometheus_access - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_security_group.prometheus_access" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.prometheus_access": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_security_group.prometheus_access"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_security_group.prometheus_access"
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.prometheus_access": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.prometheus_access": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_security_group.prometheus_access
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_security_group.prometheus_access
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_security_group.prometheus_access is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_security_group.internal_access"
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.internal_access": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.internal_access": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_security_group.internal_access
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_internet_gateway.gw"
2021/01/10 22:07:50 [TRACE] vertex "aws_internet_gateway.gw": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_internet_gateway.gw": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_internet_gateway.gw
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_security_group.prometheus_access"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_alb_target_group.alb_target_group_http"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_key_pair.ovpDevOpsKey
2021/01/10 22:07:50 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] vertex "aws_key_pair.ovpDevOpsKey": visit complete
2021-01-10T22:07:50.097Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.096Z
2021-01-10T22:07:50.098Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.097Z
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.internal_access
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_route53_zone.zone
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_iam_user.prometheus_iam
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_security_group.web_access"
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_subnet.subnet_public_az_b"
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_subnet.subnet_private_az_a"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_subnet.subnet_private_az_b"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_subnet.subnet_public_az_a"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.internal_access": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.internal_access - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_security_group.internal_access" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.internal_access": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_security_group.internal_access"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_security_group.internal_access"
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.internal_access": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.internal_access": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_security_group.internal_access
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_internet_gateway.gw
2021/01/10 22:07:50 [TRACE] vertex "aws_internet_gateway.gw": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_internet_gateway.gw - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_internet_gateway.gw" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_internet_gateway.gw": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.gw"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_internet_gateway.gw"
2021/01/10 22:07:50 [TRACE] vertex "aws_internet_gateway.gw": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_internet_gateway.gw": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_internet_gateway.gw
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_route53_zone.zone
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_route53_zone.zone
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_zone.zone": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_zone.zone": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_zone.zone": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "output.name_servers"
2021/01/10 22:07:50 [TRACE] vertex "output.name_servers": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:50 [TRACE] vertex "output.name_servers": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: output.name_servers
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_security_group.internal_access
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_security_group.internal_access is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_iam_user.prometheus_iam
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_iam_user.prometheus_iam
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user.prometheus_iam": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user.prometheus_iam": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user.prometheus_iam": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user_policy.prometheus_role": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user_policy.prometheus_role": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_iam_user_policy.prometheus_role
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_internet_gateway.gw
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_internet_gateway.gw is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021-01-10T22:07:50.110Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.110Z
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:50 [TRACE] EvalWriteOutput: Saving value for output.name_servers in state
2021/01/10 22:07:50 [TRACE] EvalWriteOutput: Saving Create change for output.name_servers in changeset
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: output.name_servers
2021/01/10 22:07:50 [TRACE] vertex "output.name_servers": visit complete
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_iam_user_policy.prometheus_role
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user_policy.prometheus_role": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_user_policy.prometheus_role - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_iam_user_policy.prometheus_role" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user_policy.prometheus_role": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user_policy.prometheus_role": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user_policy.prometheus_role": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_iam_user_policy.prometheus_role
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_iam_user_policy.prometheus_role
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_iam_user_policy.prometheus_role is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.prometheus_access, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(3000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(3000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9090), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9090)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9100), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9100)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(3000), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(3000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9090), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9090)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9100), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9100)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(3000), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(3000)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9090), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9090)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9100), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9100)})})
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_security_group.prometheus_access
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_security_group.prometheus_access
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.prometheus_access
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.prometheus_access": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.prometheus_access": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.prometheus_access": visit complete
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_access_key.prometheus_access_key - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_iam_access_key.prometheus_access_key" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_iam_access_key.prometheus_access_key is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021-01-10T22:07:50.117Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.114Z
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_security_group.internal_access"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_iam_user_policy.prometheus_role"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_iam_access_key.prometheus_access_key"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_internet_gateway.gw"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_alb_target_group.alb_target_group_http
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_target_group.alb_target_group_http": visit complete
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021-01-10T22:07:50.134Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.130Z
2021-01-10T22:07:50.134Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.130Z
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.web_access, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8080), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8080)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8080), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8080)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8080), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8080)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})})
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_security_group.web_access
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_security_group.web_access
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.web_access
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.web_access": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.web_access": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.web_access": visit complete
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnet_public_az_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_subnet.subnet_public_az_b
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_subnet.subnet_public_az_b
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_b": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_b": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_b": visit complete
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnet_private_az_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_subnet.subnet_private_az_a
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_subnet.subnet_private_az_a
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_a": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_a": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_a": visit complete
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnet_private_az_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_subnet.subnet_private_az_b
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_subnet.subnet_private_az_b
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_b": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_b": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_private_az_b": visit complete
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnet_public_az_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_subnet.subnet_public_az_a
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_subnet.subnet_public_az_a
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_a": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_a": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_subnet.subnet_public_az_a": visit complete
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_alb.alb"
2021/01/10 22:07:50 [TRACE] vertex "aws_alb.alb": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb.alb": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_alb.alb
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_alb.alb
2021/01/10 22:07:50 [TRACE] vertex "aws_alb.alb": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_alb.alb - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_alb.alb" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb.alb": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_alb.alb"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_alb.alb"
2021/01/10 22:07:50 [TRACE] vertex "aws_alb.alb": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb.alb": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_alb.alb
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_alb.alb
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_alb.alb is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_iam_user_policy.prometheus_role
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_iam_user_policy.prometheus_role
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_iam_user_policy.prometheus_role
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user_policy.prometheus_role": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user_policy.prometheus_role": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_user_policy.prometheus_role": visit complete
2021/01/10 22:07:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.internal_access, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})})
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_security_group.internal_access
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_security_group.internal_access
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.internal_access
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.internal_access": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.internal_access": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_security_group.internal_access": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_instance.web_b"
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_b": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_b": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_instance.web_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_instance.web_b
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_b": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.web_b[0] - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [DEBUG] Resource instance state not found for node "aws_instance.web_b[0]", instance aws_instance.web_b[0]
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_instance.web_b[0]" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_b": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_instance.web_b[0]"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_instance.web_b[0]"
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_b[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_b[0]": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_instance.web_b[0]
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_instance.web_b[0]
2021/01/10 22:07:50 [TRACE] EvalReadState: no state present for aws_instance.web_b[0]
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_instance.web_b[0]"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_iam_access_key.prometheus_access_key
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_iam_access_key.prometheus_access_key": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_instance.prometheus_a"
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_a": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_a": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_instance.prometheus_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_instance.prometheus_a
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_a": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.prometheus_a - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_instance.prometheus_a" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_a": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_instance.prometheus_a"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_instance.prometheus_a"
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_a": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_a": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_instance.prometheus_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_instance.prometheus_a
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_instance.prometheus_a is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_internet_gateway.gw
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_internet_gateway.gw
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_internet_gateway.gw
2021/01/10 22:07:50 [TRACE] vertex "aws_internet_gateway.gw": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_internet_gateway.gw": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_internet_gateway.gw": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_route.internet_access"
2021/01/10 22:07:50 [TRACE] vertex "aws_route.internet_access": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_route.internet_access": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_route.internet_access
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_route.internet_access
2021/01/10 22:07:50 [TRACE] vertex "aws_route.internet_access": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route.internet_access - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_route.internet_access" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_route.internet_access": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_route.internet_access"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_route.internet_access"
2021/01/10 22:07:50 [TRACE] vertex "aws_route.internet_access": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_route.internet_access": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_route.internet_access
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_route.internet_access
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_route.internet_access is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_alb.alb"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_instance.web_a"
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_a": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_a": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_instance.web_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_instance.web_a
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_a": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.web_a[0] - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_instance.web_a[0]" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_a": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_instance.web_a[0]"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_instance.prometheus_b"
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_b": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_b": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_instance.prometheus_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_instance.prometheus_b
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_b": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.prometheus_b - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_instance.prometheus_b" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_b": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_instance.prometheus_b"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_instance.prometheus_b"
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_b": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_b": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_instance.prometheus_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_instance.prometheus_b
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_instance.prometheus_b is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_instance.web_a[0]"
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_a[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_a[0]": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_instance.web_a[0]
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_instance.web_a[0]
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_instance.web_a[0] is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021-01-10T22:07:50.168Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.166Z
2021-01-10T22:07:50.168Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.168Z
2021-01-10T22:07:50.168Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.168Z
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_instance.web_a[0]"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_instance.prometheus_a"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_route.internet_access"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_instance.prometheus_b"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-01-10T22:07:50.183Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.172Z
2021/01/10 22:07:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.web_a[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_instance.web_a[0]
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_instance.web_a[0]
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_instance.web_a[0]
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_a[0]": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_a": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_a": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "data.aws_instances.web_instances_a"
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_a": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_a": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: data.aws_instances.web_instances_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: data.aws_instances.web_instances_a
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_a": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_instances.web_instances_a - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [DEBUG] Resource instance state not found for node "data.aws_instances.web_instances_a", instance data.aws_instances.web_instances_a
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "data.aws_instances.web_instances_a" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_a": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "data.aws_instances.web_instances_a"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "data.aws_instances.web_instances_a"
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_a": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_a": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: data.aws_instances.web_instances_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for data.aws_instances.web_instances_a
2021/01/10 22:07:50 [TRACE] EvalReadState: no state present for data.aws_instances.web_instances_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:07:50 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadData
2021/01/10 22:07:50 [TRACE] EvalReadData: working on data.aws_instances.web_instances_a
2021/01/10 22:07:50 [TRACE] EvalReadData: data.aws_instances.web_instances_a configuration is fully known, but we're forcing a read plan to be created
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for data.aws_instances.web_instances_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded Read change for data.aws_instances.web_instances_a
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: data.aws_instances.web_instances_a
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_a": visit complete
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_a": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_a": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_lb_target_group_attachment.attach_web_a"
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_lb_target_group_attachment.attach_web_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_lb_target_group_attachment.attach_web_a
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [DEBUG] Resource instance state not found for node "aws_lb_target_group_attachment.attach_web_a[0]", instance aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_lb_target_group_attachment.attach_web_a[0]" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_lb_target_group_attachment.attach_web_a[0]"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_lb_target_group_attachment.attach_web_a[0]"
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a[0]": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:50 [TRACE] EvalReadState: no state present for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_lb_target_group_attachment.attach_web_a[0]"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.web_b[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_instance.web_b[0]
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded Create change for aws_instance.web_b[0]
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_instance.web_b[0]
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_b[0]": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_b": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.web_b": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "data.aws_instances.web_instances_b"
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_b": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_b": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: data.aws_instances.web_instances_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: data.aws_instances.web_instances_b
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_b": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_instances.web_instances_b - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [DEBUG] Resource instance state not found for node "data.aws_instances.web_instances_b", instance data.aws_instances.web_instances_b
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "data.aws_instances.web_instances_b" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_b": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "data.aws_instances.web_instances_b"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "data.aws_instances.web_instances_b"
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_b": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_b": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: data.aws_instances.web_instances_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for data.aws_instances.web_instances_b
2021/01/10 22:07:50 [TRACE] EvalReadState: no state present for data.aws_instances.web_instances_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:07:50 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadData
2021/01/10 22:07:50 [TRACE] EvalReadData: working on data.aws_instances.web_instances_b
2021/01/10 22:07:50 [TRACE] EvalReadData: data.aws_instances.web_instances_b configuration is fully known, but we're forcing a read plan to be created
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for data.aws_instances.web_instances_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded Read change for data.aws_instances.web_instances_b
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: data.aws_instances.web_instances_b
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_b": visit complete
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_b": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "data.aws_instances.web_instances_b": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_lb_target_group_attachment.attach_web_b"
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_lb_target_group_attachment.attach_web_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_lb_target_group_attachment.attach_web_b
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [DEBUG] Resource instance state not found for node "aws_lb_target_group_attachment.attach_web_b[0]", instance aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_lb_target_group_attachment.attach_web_b[0]" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b[0]": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:50 [TRACE] EvalReadState: no state present for aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021-01-10T22:07:50.192Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.185Z
2021-01-10T22:07:50.192Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.188Z
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_alb.alb, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .access_logs: block count in plan (1) disagrees with count in config (0)
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_alb.alb
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_alb.alb
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_alb.alb
2021/01/10 22:07:50 [TRACE] vertex "aws_alb.alb": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_alb.alb": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_alb.alb": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_route53_record.A_www"
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A_www": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A_www": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_route53_record.A_www
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_route53_record.A_www
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A_www": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route53_record.A_www - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_route53_record.A_www" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A_www": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_route53_record.A_www"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_route53_record.A_www"
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A_www": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A_www": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_route53_record.A_www
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_route53_record.A_www
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_route53_record.A_www is still 2; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_https": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_https": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_alb_listener.alb_listener_https
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_alb_listener.alb_listener_https
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_https": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_alb_listener.alb_listener_https - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_alb_listener.alb_listener_https" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_https": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_https": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_https": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_alb_listener.alb_listener_https
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_alb_listener.alb_listener_https
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_alb_listener.alb_listener_https is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_http": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_http": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_alb_listener.alb_listener_http
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_alb_listener.alb_listener_http
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_http": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_alb_listener.alb_listener_http - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_alb_listener.alb_listener_http" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_http": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_http": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_http": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_alb_listener.alb_listener_http
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_alb_listener.alb_listener_http
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_alb_listener.alb_listener_http is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_route53_record.A"
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_route53_record.A
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_route53_record.A
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route53_record.A - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_route53_record.A" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_route53_record.A"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_route53_record.A"
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_route53_record.A
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_route53_record.A
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_route53_record.A is still 2; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "output.alb_address"
2021/01/10 22:07:50 [TRACE] vertex "output.alb_address": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:50 [TRACE] vertex "output.alb_address": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: output.alb_address
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:50 [TRACE] EvalWriteOutput: Saving value for output.alb_address in state
2021/01/10 22:07:50 [TRACE] EvalWriteOutput: Saving Create change for output.alb_address in changeset
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: output.alb_address
2021/01/10 22:07:50 [TRACE] vertex "output.alb_address": visit complete
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.prometheus_b, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_instance.prometheus_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_instance.prometheus_b
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_instance.prometheus_b
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_b": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_b": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_b": visit complete
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_alb_listener.alb_listener_http"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded Create change for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a[0]": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a": visit complete
2021/01/10 22:07:50 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.prometheus_a, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_instance.prometheus_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_instance.prometheus_a
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_instance.prometheus_a
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_a": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_a": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_instance.prometheus_a": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "provisioner.remote-exec (close)"
2021/01/10 22:07:50 [TRACE] vertex "provisioner.remote-exec (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2021/01/10 22:07:50 [TRACE] vertex "provisioner.remote-exec (close)": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: provisioner.remote-exec (close)
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCloseProvisioner
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_route.internet_access
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_route.internet_access
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_route.internet_access
2021/01/10 22:07:50 [TRACE] vertex "aws_route.internet_access": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_route.internet_access": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_route.internet_access": visit complete
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "provisioner.local-exec (close)"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "output.Prometheus_URL"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "output.Grafana_URL"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "provisioner.file (close)"
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_alb_listener.alb_listener_https"
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_route53_record.A_www"
2021/01/10 22:07:50 [TRACE] vertex "provisioner.local-exec (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2021/01/10 22:07:50 [TRACE] vertex "output.Prometheus_URL": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:50 [TRACE] vertex "output.Grafana_URL": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:50 [TRACE] vertex "provisioner.file (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2021/01/10 22:07:50 [TRACE] vertex "provisioner.file (close)": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: provisioner.file (close)
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCloseProvisioner
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-01-10T22:07:50.220Z [DEBUG] plugin: plugin process exited: path=/bin/terraform pid=38138
2021-01-10T22:07:50.229Z [DEBUG] plugin: plugin exited
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: provisioner.remote-exec (close)
2021/01/10 22:07:50 [TRACE] vertex "provisioner.remote-exec (close)": visit complete
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:50 [TRACE] vertex "provisioner.local-exec (close)": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: provisioner.local-exec (close)
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCloseProvisioner
2021/01/10 22:07:50 [TRACE] vertex "output.Prometheus_URL": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: output.Prometheus_URL
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:50 [TRACE] EvalWriteOutput: Saving value for output.Prometheus_URL in state
2021/01/10 22:07:50 [TRACE] EvalWriteOutput: Saving Create change for output.Prometheus_URL in changeset
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: output.Prometheus_URL
2021/01/10 22:07:50 [TRACE] vertex "output.Prometheus_URL": visit complete
2021/01/10 22:07:50 [TRACE] vertex "output.Grafana_URL": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: output.Grafana_URL
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:50 [TRACE] EvalWriteOutput: Saving value for output.Grafana_URL in state
2021/01/10 22:07:50 [TRACE] EvalWriteOutput: Saving Create change for output.Grafana_URL in changeset
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: output.Grafana_URL
2021/01/10 22:07:50 [TRACE] vertex "output.Grafana_URL": visit complete
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded Create change for aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b[0]": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b": visit complete
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_route53_record.A"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-01-10T22:07:50.250Z [DEBUG] plugin: plugin process exited: path=/bin/terraform pid=38154
2021-01-10T22:07:50.250Z [DEBUG] plugin: plugin exited
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: provisioner.file (close)
2021/01/10 22:07:50 [TRACE] vertex "provisioner.file (close)": visit complete
2021-01-10T22:07:50.253Z [DEBUG] plugin: plugin process exited: path=/bin/terraform pid=38170
2021-01-10T22:07:50.253Z [DEBUG] plugin: plugin exited
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: provisioner.local-exec (close)
2021/01/10 22:07:50 [TRACE] vertex "provisioner.local-exec (close)": visit complete
2021-01-10T22:07:50.254Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.246Z
2021-01-10T22:07:50.254Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.250Z
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_alb_listener.alb_listener_http
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_alb_listener.alb_listener_http
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_alb_listener.alb_listener_http
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_http": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_http": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_http": visit complete
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_route53_record.A_www
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_route53_record.A_www
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_route53_record.A_www
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A_www": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A_www": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A_www": visit complete
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_route53_record.A
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_route53_record.A
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_route53_record.A
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_route53_record.A": visit complete
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_alb_listener.alb_listener_https
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_alb_listener.alb_listener_https
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_alb_listener.alb_listener_https
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_https": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_https": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener.alb_listener_https": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": starting visit (*terraform.NodePlannableResource)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": expanding dynamic subgraph
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_alb_listener_rule.listener_rule_http - *terraform.NodePlannableResourceInstance
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_alb_listener_rule.listener_rule_http" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": entering dynamic subgraph
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": starting visit (*terraform.NodePlannableResourceInstance)
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:50 [TRACE] EvalReadState: reading state for aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:50 [TRACE] UpgradeResourceState: schema version of aws_alb_listener_rule.listener_rule_http is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/01/10 22:07:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:50 [TRACE] Re-validating config for "aws_alb_listener_rule.listener_rule_http"
2021/01/10 22:07:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-01-10T22:07:50.280Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.279Z
2021-01-10T22:07:50.280Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:50.279Z
2021/01/10 22:07:50 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:50 [TRACE] EvalWriteState: writing current state object for aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:50 [TRACE] EvalWriteDiff: recorded NoOp change for aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: aws_alb_listener_rule.listener_rule_http
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": visit complete
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": dynamic subgraph completed successfully
2021/01/10 22:07:50 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "provider.aws (close)"
2021/01/10 22:07:50 [TRACE] vertex "provider.aws (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/01/10 22:07:50 [TRACE] vertex "provider.aws (close)": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: provider.aws (close)
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/01/10 22:07:50 [TRACE] GRPCProvider: Close
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/01/10 22:07:50 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/01/10 22:07:50 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2021/01/10 22:07:50 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2021/01/10 22:07:50 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-01-10T22:07:50.288Z [DEBUG] plugin: plugin process exited: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 pid=38153
2021-01-10T22:07:50.288Z [DEBUG] plugin: plugin exited
2021/01/10 22:07:50 [TRACE] [walkPlan] Exiting eval tree: provider.aws (close)
2021/01/10 22:07:50 [TRACE] vertex "provider.aws (close)": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "root"
2021/01/10 22:07:50 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/01/10 22:07:50 [TRACE] vertex "root": visit complete
2021/01/10 22:07:50 [INFO] backend/local: apply calling Apply
2021/01/10 22:07:50 [INFO] terraform: building graph: GraphTypeApply
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/01/10 22:07:50 [TRACE] ConfigTransformer: Starting for path: 
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/01/10 22:07:50 [TRACE] DiffTransformer starting
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_vpc.vpc 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_key_pair.ovpDevOpsKey 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_route53_zone.zone 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_iam_user.prometheus_iam 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_security_group.prometheus_access 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_alb_target_group.alb_target_group_http 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_security_group.web_access 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_subnet.subnet_public_az_b 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_subnet.subnet_private_az_a 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_subnet.subnet_private_az_b 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_subnet.subnet_public_az_a 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_iam_user_policy.prometheus_role 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_security_group.internal_access 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_iam_access_key.prometheus_access_key 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_internet_gateway.gw 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_instance.web_a[0] 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found Read change for data.aws_instances.web_instances_a 
2021/01/10 22:07:50 [TRACE] DiffTransformer: data.aws_instances.web_instances_a will be represented by data.aws_instances.web_instances_a
2021/01/10 22:07:50 [TRACE] DiffTransformer: found Create change for aws_instance.web_b[0] 
2021/01/10 22:07:50 [TRACE] DiffTransformer: aws_instance.web_b[0] will be represented by aws_instance.web_b[0]
2021/01/10 22:07:50 [TRACE] DiffTransformer: found Read change for data.aws_instances.web_instances_b 
2021/01/10 22:07:50 [TRACE] DiffTransformer: data.aws_instances.web_instances_b will be represented by data.aws_instances.web_instances_b
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_alb.alb 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_instance.prometheus_b 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found Create change for aws_lb_target_group_attachment.attach_web_a[0] 
2021/01/10 22:07:50 [TRACE] DiffTransformer: aws_lb_target_group_attachment.attach_web_a[0] will be represented by aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_instance.prometheus_a 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_route.internet_access 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found Create change for aws_lb_target_group_attachment.attach_web_b[0] 
2021/01/10 22:07:50 [TRACE] DiffTransformer: aws_lb_target_group_attachment.attach_web_b[0] will be represented by aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_alb_listener.alb_listener_http 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_route53_record.A_www 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_route53_record.A 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_alb_listener.alb_listener_https 
2021/01/10 22:07:50 [TRACE] DiffTransformer: found NoOp change for aws_alb_listener_rule.listener_rule_http 
2021/01/10 22:07:50 [TRACE] DiffTransformer complete
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
  aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb.alb (prepare state)" (*terraform.NodeApplyableResource) config from load_balancer.tf:2,1-25
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.prometheus_access (prepare state)" (*terraform.NodeApplyableResource) config from security_groups.tf:60,1-50
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_instances.web_instances_a" (*terraform.NodeApplyableResourceInstance) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:80, Column:1, Byte:2458}, End:hcl.Pos{Line:80, Column:39, Byte:2496}}
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lb_target_group_attachment.attach_web_a[0]" (*terraform.NodeApplyableResourceInstance) config from load_balancer.tf:67,1-57
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_access_key.prometheus_access_key (prepare state)" (*terraform.NodeApplyableResource) config from prometheus_iam.tf:6,1-54
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_listener.alb_listener_http (prepare state)" (*terraform.NodeApplyableResource) config from load_balancer.tf:9,1-48
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_target_group.alb_target_group_http (prepare state)" (*terraform.NodeApplyableResource) config from load_balancer.tf:50,1-56
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.prometheus_a (prepare state)" (*terraform.NodeApplyableResource) config from prometheus.tf:3,1-39
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user.prometheus_iam (prepare state)" (*terraform.NodeApplyableResource) config from prometheus_iam.tf:1,1-41
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_public_az_b (prepare state)" (*terraform.NodeApplyableResource) config from networking.tf:47,1-43
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.prometheus_b (prepare state)" (*terraform.NodeApplyableResource) config from prometheus.tf:48,1-39
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route.internet_access (prepare state)" (*terraform.NodeApplyableResource) config from networking.tf:34,1-39
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_listener.alb_listener_https (prepare state)" (*terraform.NodeApplyableResource) config from load_balancer.tf:20,1-49
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.web_b (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:41,1-32
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc.vpc (prepare state)" (*terraform.NodeApplyableResource) config from networking.tf:2,1-25
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.web_b[0]" (*terraform.NodeApplyableResourceInstance) config from main.tf:41,1-32
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_instances.web_instances_a (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:80, Column:1, Byte:2458}, End:hcl.Pos{Line:80, Column:39, Byte:2496}}
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lb_target_group_attachment.attach_web_b[0]" (*terraform.NodeApplyableResourceInstance) config from load_balancer.tf:75,1-57
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_zone.zone (prepare state)" (*terraform.NodeApplyableResource) config from route_53.tf:2,1-35
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user_policy.prometheus_role (prepare state)" (*terraform.NodeApplyableResource) config from prometheus_iam.tf:10,1-49
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_private_az_a (prepare state)" (*terraform.NodeApplyableResource) config from networking.tf:55,1-44
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.ovpDevOpsKey (prepare state)" (*terraform.NodeApplyableResource) config from key_pair.tf:2,1-39
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.web_a (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:2,1-32
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.A (prepare state)" (*terraform.NodeApplyableResource) config from route_53.tf:8,1-34
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.web_access (prepare state)" (*terraform.NodeApplyableResource) config from security_groups.tf:2,1-43
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_internet_gateway.gw (prepare state)" (*terraform.NodeApplyableResource) config from networking.tf:7,1-37
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_public_az_a (prepare state)" (*terraform.NodeApplyableResource) config from networking.tf:41,1-43
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lb_target_group_attachment.attach_web_a (prepare state)" (*terraform.NodeApplyableResource) config from load_balancer.tf:67,1-57
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnet_private_az_b (prepare state)" (*terraform.NodeApplyableResource) config from networking.tf:60,1-44
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_alb_listener_rule.listener_rule_http (prepare state)" (*terraform.NodeApplyableResource) config from load_balancer.tf:34,1-54
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.A_www (prepare state)" (*terraform.NodeApplyableResource) config from route_53.tf:20,1-38
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.internal_access (prepare state)" (*terraform.NodeApplyableResource) config from security_groups.tf:37,1-48
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lb_target_group_attachment.attach_web_b (prepare state)" (*terraform.NodeApplyableResource) config from load_balancer.tf:75,1-57
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_instances.web_instances_b (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:92, Column:1, Byte:2675}, End:hcl.Pos{Line:92, Column:39, Byte:2713}}
2021/01/10 22:07:50 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_instances.web_instances_b" (*terraform.NodeApplyableResourceInstance) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:92, Column:1, Byte:2675}, End:hcl.Pos{Line:92, Column:39, Byte:2713}}
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/01/10 22:07:50 [DEBUG] Resource instance state not found for node "aws_instance.web_b[0]", instance aws_instance.web_b[0]
2021/01/10 22:07:50 [DEBUG] Resource instance state not found for node "aws_lb_target_group_attachment.attach_web_b[0]", instance aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:50 [DEBUG] Resource state not found for node "data.aws_instances.web_instances_b", instance data.aws_instances.web_instances_b
2021/01/10 22:07:50 [DEBUG] Resource state not found for node "data.aws_instances.web_instances_a", instance data.aws_instances.web_instances_a
2021/01/10 22:07:50 [DEBUG] Resource instance state not found for node "aws_lb_target_group_attachment.attach_web_a[0]", instance aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/01/10 22:07:50 [TRACE] MissingProviderTransformer: added implicit provisioner file, first implied by aws_instance.prometheus_a (prepare state)
2021/01/10 22:07:50 [TRACE] MissingProviderTransformer: added implicit provisioner remote-exec, first implied by aws_instance.prometheus_a (prepare state)
2021/01/10 22:07:50 [TRACE] MissingProviderTransformer: added implicit provisioner local-exec, first implied by aws_instance.prometheus_a (prepare state)
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
  aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/01/10 22:07:50 [TRACE] ProvisionerTransformer: aws_instance.web_b[0] is provisioned by remote-exec ("provisioner.remote-exec")
2021/01/10 22:07:50 [TRACE] ProvisionerTransformer: aws_instance.web_b[0] is provisioned by local-exec ("provisioner.local-exec")
2021/01/10 22:07:50 [TRACE] ProvisionerTransformer: aws_instance.web_b (prepare state) is provisioned by remote-exec ("provisioner.remote-exec")
2021/01/10 22:07:50 [TRACE] ProvisionerTransformer: aws_instance.web_b (prepare state) is provisioned by local-exec ("provisioner.local-exec")
2021/01/10 22:07:50 [TRACE] ProvisionerTransformer: aws_instance.web_a (prepare state) is provisioned by remote-exec ("provisioner.remote-exec")
2021/01/10 22:07:50 [TRACE] ProvisionerTransformer: aws_instance.web_a (prepare state) is provisioned by local-exec ("provisioner.local-exec")
2021/01/10 22:07:50 [TRACE] ProvisionerTransformer: aws_instance.prometheus_a (prepare state) is provisioned by file ("provisioner.file")
2021/01/10 22:07:50 [TRACE] ProvisionerTransformer: aws_instance.prometheus_a (prepare state) is provisioned by remote-exec ("provisioner.remote-exec")
2021/01/10 22:07:50 [TRACE] ProvisionerTransformer: aws_instance.prometheus_a (prepare state) is provisioned by local-exec ("provisioner.local-exec")
2021/01/10 22:07:50 [TRACE] ProvisionerTransformer: aws_instance.prometheus_b (prepare state) is provisioned by file ("provisioner.file")
2021/01/10 22:07:50 [TRACE] ProvisionerTransformer: aws_instance.prometheus_b (prepare state) is provisioned by remote-exec ("provisioner.remote-exec")
2021/01/10 22:07:50 [TRACE] ProvisionerTransformer: aws_instance.prometheus_b (prepare state) is provisioned by local-exec ("provisioner.local-exec")
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ProvisionerTransformer with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/01/10 22:07:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/01/10 22:07:50 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from provider.tf:2,1-15
2021/01/10 22:07:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/01/10 22:07:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/01/10 22:07:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_internet_gateway.gw (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_subnet.subnet_public_az_a (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_lb_target_group_attachment.attach_web_a (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_subnet.subnet_private_az_b (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_security_group.internal_access (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: data.aws_instances.web_instances_b (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: data.aws_instances.web_instances_b is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_alb.alb (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_security_group.prometheus_access (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_iam_access_key.prometheus_access_key (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_alb_listener.alb_listener_http (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_instance.prometheus_a (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_iam_user.prometheus_iam (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_subnet.subnet_public_az_b (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_instance.prometheus_b (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_alb_listener.alb_listener_https (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_instance.web_b (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_subnet.subnet_private_az_a (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_route53_record.A (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: data.aws_instances.web_instances_a (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_security_group.web_access (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_alb_listener_rule.listener_rule_http (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_route53_record.A_www (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_lb_target_group_attachment.attach_web_b (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: data.aws_instances.web_instances_a is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_alb_target_group.alb_target_group_http (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_lb_target_group_attachment.attach_web_a[0] is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_route.internet_access (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_vpc.vpc (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_instance.web_b[0] is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_route53_zone.zone (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_iam_user_policy.prometheus_role (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_key_pair.ovpDevOpsKey (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_instance.web_a (prepare state) is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: aws_lb_target_group_attachment.attach_web_b[0] is provided by provider.aws or inherited equivalent
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_lb_target_group_attachment.attach_web_a[0]" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_vpc.vpc (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_vpc.vpc (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.web_a (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_instance.web_a (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.internal_access (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_security_group.internal_access (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lb_target_group_attachment.attach_web_b (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_lb_target_group_attachment.attach_web_b (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_instances.web_instances_b (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "data.aws_instances.web_instances_b (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_access_key.prometheus_access_key (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_iam_access_key.prometheus_access_key (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_user.prometheus_iam (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_iam_user.prometheus_iam (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lb_target_group_attachment.attach_web_a (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_lb_target_group_attachment.attach_web_a (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_private_az_b (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_subnet.subnet_private_az_b (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_zone.zone (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_route53_zone.zone (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_instances.web_instances_b
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "data.aws_instances.web_instances_b" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_record.A (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_route53_record.A (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.prometheus_access (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_security_group.prometheus_access (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.web_access (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_security_group.web_access (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.web_b[0]
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_instance.web_b[0]" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_internet_gateway.gw (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_internet_gateway.gw (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_public_az_a (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_subnet.subnet_public_az_a (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.web_b (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_instance.web_b (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_instances.web_instances_a
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "data.aws_instances.web_instances_a" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_target_group.alb_target_group_http (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_alb_target_group.alb_target_group_http (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route.internet_access (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_route.internet_access (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_listener.alb_listener_http (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_alb_listener.alb_listener_http (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.prometheus_a (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_instance.prometheus_a (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_record.A_www (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_route53_record.A_www (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_key_pair.ovpDevOpsKey (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_key_pair.ovpDevOpsKey (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_listener.alb_listener_https (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_alb_listener.alb_listener_https (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb_listener_rule.listener_rule_http (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_alb_listener_rule.listener_rule_http (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_private_az_a (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_subnet.subnet_private_az_a (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_instances.web_instances_a (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "data.aws_instances.web_instances_a (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_alb.alb (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_alb.alb (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.subnet_public_az_b (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_subnet.subnet_public_az_b (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_lb_target_group_attachment.attach_web_b[0]" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_instance.prometheus_b (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_instance.prometheus_b (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_user_policy.prometheus_role (prepare state)
2021/01/10 22:07:50 [DEBUG] ProviderTransformer: "aws_iam_user_policy.prometheus_role (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/01/10 22:07:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/01/10 22:07:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/01/10 22:07:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/01/10 22:07:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  output.Grafana_URL - *terraform.NodeApplyableOutput
  output.Prometheus_URL - *terraform.NodeApplyableOutput
  output.alb_address - *terraform.NodeApplyableOutput
  output.name_servers - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_private_az_a (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.A (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_instances.web_instances_a (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.web_access (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_listener_rule.listener_rule_http (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.A_www (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lb_target_group_attachment.attach_web_b (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_instances.web_instances_a
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_target_group.alb_target_group_http (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route.internet_access (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc.vpc (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.web_b[0]
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.web_b[0]
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.web_b[0]
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_zone.zone (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user_policy.prometheus_role (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.ovpDevOpsKey (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.web_a (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.web_a (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.web_a (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lb_target_group_attachment.attach_web_b[0]
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_internet_gateway.gw (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_public_az_a (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lb_target_group_attachment.attach_web_a (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_private_az_b (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.internal_access (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_instances.web_instances_b (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_instances.web_instances_b
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb.alb (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.prometheus_access (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_access_key.prometheus_access_key (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_listener.alb_listener_http (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.prometheus_a (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to aws_instance.prometheus_a (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.prometheus_a (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.prometheus_a (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user.prometheus_iam (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnet_public_az_b (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.prometheus_b (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to aws_instance.prometheus_b (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.prometheus_b (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.prometheus_b (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_alb_listener.alb_listener_https (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.web_b (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.web_b (prepare state)
2021/01/10 22:07:50 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.web_b (prepare state)
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.ubuntu_user" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_alb_listener_rule.listener_rule_http (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_route53_record.A_www (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_lb_target_group_attachment.attach_web_b (prepare state)" references: [var.instance_count]
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.region" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "data.aws_instances.web_instances_a" references: [aws_instance.web_a (prepare state)]
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.cidr_subnet_private_a" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "output.alb_address" references: [aws_alb.alb (prepare state)]
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "output.name_servers" references: [aws_route53_zone.zone (prepare state)]
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_alb_target_group.alb_target_group_http (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_lb_target_group_attachment.attach_web_a[0]" references: [var.instance_count aws_alb_target_group.alb_target_group_http (prepare state) data.aws_instances.web_instances_a data.aws_instances.web_instances_a data.aws_instances.web_instances_a (prepare state)]
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.cidr_subnet_public_b" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.ansible_user" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_route.internet_access (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.cert" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.public_key" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.cidr_subnet_public_a" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.instance" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_vpc.vpc (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_instance.web_b[0]" references: [var.instance_count aws_subnet.subnet_private_az_b (prepare state) var.ami aws_security_group.internal_access (prepare state) aws_security_group.prometheus_access (prepare state) var.az_b var.instance aws_key_pair.ovpDevOpsKey (prepare state) var.ansible_user var.private_key var.private_key]
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.ami" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_lb_target_group_attachment.attach_web_b[0]" references: [var.instance_count data.aws_instances.web_instances_b (prepare state) data.aws_instances.web_instances_b data.aws_instances.web_instances_b aws_alb_target_group.alb_target_group_http (prepare state)]
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_route53_zone.zone (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_iam_user_policy.prometheus_role (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_key_pair.ovpDevOpsKey (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_instance.web_a (prepare state)" references: [var.instance_count]
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_internet_gateway.gw (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_public_az_a (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_lb_target_group_attachment.attach_web_a (prepare state)" references: [var.instance_count]
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "provisioner.local-exec" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_private_az_b (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.az_b" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.hosted_zone" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "output.Prometheus_URL" references: [aws_instance.prometheus_a (prepare state)]
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.cidr_vpc" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_security_group.internal_access (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "data.aws_instances.web_instances_b (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "data.aws_instances.web_instances_b" references: [aws_instance.web_b[0] aws_instance.web_b (prepare state)]
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.az_a" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_alb.alb (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_security_group.prometheus_access (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.instance_count" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.cidr_subnet_private_b" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_public_az_b (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_iam_access_key.prometheus_access_key (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_alb_listener.alb_listener_http (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_instance.prometheus_a (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_iam_user.prometheus_iam (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_instance.prometheus_b (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_alb_listener.alb_listener_https (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "var.private_key" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_instance.web_b (prepare state)" references: [var.instance_count]
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "output.Grafana_URL" references: [aws_instance.prometheus_a (prepare state)]
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_subnet.subnet_private_az_a (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_route53_record.A (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "data.aws_instances.web_instances_a (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region]
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "aws_security_group.web_access (prepare state)" references: []
2021/01/10 22:07:50 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance_count - *terraform.NodeRootVariable
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance_count - *terraform.NodeRootVariable
  aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/01/10 22:07:50 [TRACE] AttachDependenciesTransformer: aws_lb_target_group_attachment.attach_web_b depends on [aws_alb_target_group.alb_target_group_http aws_instance.web_b aws_key_pair.ovpDevOpsKey aws_security_group.internal_access aws_security_group.prometheus_access aws_subnet.subnet_private_az_b]
2021/01/10 22:07:50 [TRACE] AttachDependenciesTransformer: aws_lb_target_group_attachment.attach_web_a depends on [aws_alb_target_group.alb_target_group_http aws_instance.web_a]
2021/01/10 22:07:50 [TRACE] AttachDependenciesTransformer: aws_instance.web_b depends on [aws_key_pair.ovpDevOpsKey aws_security_group.internal_access aws_security_group.prometheus_access aws_subnet.subnet_private_az_b]
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.PruneUnusedValuesTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.PruneUnusedValuesTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance_count - *terraform.NodeRootVariable
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance_count - *terraform.NodeRootVariable
  aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.cert - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
    var.cidr_vpc - *terraform.NodeRootVariable
    var.hosted_zone - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.public_key - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance_count - *terraform.NodeRootVariable
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance_count - *terraform.NodeRootVariable
  aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.cert - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
    var.cidr_vpc - *terraform.NodeRootVariable
    var.hosted_zone - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.public_key - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance_count - *terraform.NodeRootVariable
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance_count - *terraform.NodeRootVariable
  aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.cert - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
    var.cidr_vpc - *terraform.NodeRootVariable
    var.hosted_zone - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.public_key - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
  provisioner.remote-exec - *terraform.NodeProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.RootTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance_count - *terraform.NodeRootVariable
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance_count - *terraform.NodeRootVariable
  aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_a - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.cert - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
    var.cidr_vpc - *terraform.NodeRootVariable
    var.hosted_zone - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.instance_count - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
    var.public_key - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
  provisioner.remote-exec - *terraform.NodeProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:50 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/01/10 22:07:50 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance_count - *terraform.NodeRootVariable
  aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.instance_count - *terraform.NodeRootVariable
  aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b (prepare state) - *terraform.NodeApplyableResource
    aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    var.ami - *terraform.NodeRootVariable
    var.ansible_user - *terraform.NodeRootVariable
    var.az_b - *terraform.NodeRootVariable
    var.instance - *terraform.NodeRootVariable
    var.private_key - *terraform.NodeRootVariable
  aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_key_pair.ovpDevOpsKey (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
  aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.instance_count - *terraform.NodeRootVariable
  aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_alb_target_group.alb_target_group_http (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_b (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
  aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.internal_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.prometheus_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_private_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_a - *terraform.NodeApplyableResourceInstance
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_a (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_instances.web_instances_b - *terraform.NodeApplyableResourceInstance
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
    data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
  data.aws_instances.web_instances_b (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
    output.Grafana_URL - *terraform.NodeApplyableOutput
    output.Prometheus_URL - *terraform.NodeApplyableOutput
    output.alb_address - *terraform.NodeApplyableOutput
    output.name_servers - *terraform.NodeApplyableOutput
    var.az_a - *terraform.NodeRootVariable
    var.cert - *terraform.NodeRootVariable
    var.cidr_subnet_private_a - *terraform.NodeRootVariable
    var.cidr_subnet_private_b - *terraform.NodeRootVariable
    var.cidr_subnet_public_a - *terraform.NodeRootVariable
    var.cidr_subnet_public_b - *terraform.NodeRootVariable
    var.cidr_vpc - *terraform.NodeRootVariable
    var.hosted_zone - *terraform.NodeRootVariable
    var.public_key - *terraform.NodeRootVariable
    var.ubuntu_user - *terraform.NodeRootVariable
  output.Grafana_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  output.Prometheus_URL - *terraform.NodeApplyableOutput
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
  output.alb_address - *terraform.NodeApplyableOutput
    aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
  output.name_servers - *terraform.NodeApplyableOutput
    aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_alb.alb (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_http (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener.alb_listener_https (prepare state) - *terraform.NodeApplyableResource
    aws_alb_listener_rule.listener_rule_http (prepare state) - *terraform.NodeApplyableResource
    aws_iam_access_key.prometheus_access_key (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user.prometheus_iam (prepare state) - *terraform.NodeApplyableResource
    aws_iam_user_policy.prometheus_role (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_internet_gateway.gw (prepare state) - *terraform.NodeApplyableResource
    aws_lb_target_group_attachment.attach_web_a[0] - *terraform.NodeApplyableResourceInstance
    aws_lb_target_group_attachment.attach_web_b[0] - *terraform.NodeApplyableResourceInstance
    aws_route.internet_access (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.A_www (prepare state) - *terraform.NodeApplyableResource
    aws_route53_zone.zone (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.web_access (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_private_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_a (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.subnet_public_az_b (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.vpc (prepare state) - *terraform.NodeApplyableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
  provisioner.remote-exec - *terraform.NodeProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.prometheus_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.prometheus_b (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_a (prepare state) - *terraform.NodeApplyableResource
    aws_instance.web_b[0] - *terraform.NodeApplyableResourceInstance
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  var.ami - *terraform.NodeRootVariable
  var.ansible_user - *terraform.NodeRootVariable
  var.az_a - *terraform.NodeRootVariable
  var.az_b - *terraform.NodeRootVariable
  var.cert - *terraform.NodeRootVariable
  var.cidr_subnet_private_a - *terraform.NodeRootVariable
  var.cidr_subnet_private_b - *terraform.NodeRootVariable
  var.cidr_subnet_public_a - *terraform.NodeRootVariable
  var.cidr_subnet_public_b - *terraform.NodeRootVariable
  var.cidr_vpc - *terraform.NodeRootVariable
  var.hosted_zone - *terraform.NodeRootVariable
  var.instance - *terraform.NodeRootVariable
  var.instance_count - *terraform.NodeRootVariable
  var.private_key - *terraform.NodeRootVariable
  var.public_key - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.ubuntu_user - *terraform.NodeRootVariable
  ------
2021/01/10 22:07:50 [DEBUG] Starting graph walk: walkApply
2021/01/10 22:07:50 [TRACE] dag/walk: updating graph
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "data.aws_instances.web_instances_b"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.cert"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_instance.web_b[0]"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_alb.alb (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_alb_listener.alb_listener_http (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "provisioner.local-exec (close)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_private_az_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_lb_target_group_attachment.attach_web_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "provisioner.file (close)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "data.aws_instances.web_instances_a"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_private_a"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.ami"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_instance.prometheus_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.ubuntu_user"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_private_b"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_iam_user_policy.prometheus_role (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_alb_listener.alb_listener_https (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "output.name_servers"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_alb_target_group.alb_target_group_http (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_lb_target_group_attachment.attach_web_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.az_a"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_instance.prometheus_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.region"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "output.alb_address"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_route53_zone.zone (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.cidr_vpc"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "provisioner.local-exec"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_public_az_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "root"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_security_group.internal_access (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_security_group.prometheus_access (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_iam_access_key.prometheus_access_key (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_route53_record.A (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_public_b"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_route.internet_access (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.instance"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.gw (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_iam_user.prometheus_iam (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_security_group.web_access (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_alb_listener_rule.listener_rule_http (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.ansible_user"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_instance.web_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "output.Prometheus_URL"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.instance_count"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_lb_target_group_attachment.attach_web_a[0]"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "data.aws_instances.web_instances_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_route53_record.A_www (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "output.Grafana_URL"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "provisioner.file"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.private_key"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_instance.web_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_private_az_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.az_b"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_vpc.vpc (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.hosted_zone"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "data.aws_instances.web_instances_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.cidr_subnet_public_a"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_key_pair.ovpDevOpsKey (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "aws_subnet.subnet_public_az_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "provisioner.remote-exec"
2021/01/10 22:07:50 [TRACE] dag/walk: added new vertex: "var.public_key"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_key_pair.ovpDevOpsKey (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_internet_gateway.gw (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a (prepare state)" waiting on "provisioner.remote-exec"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_subnet.subnet_private_az_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_b[0]" waiting on "aws_subnet.subnet_private_az_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "data.aws_instances.web_instances_b (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.az_a"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_b[0]" waiting on "aws_security_group.prometheus_access (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_security_group.web_access (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_a[0]" waiting on "data.aws_instances.web_instances_a"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.cidr_vpc"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_access_key.prometheus_access_key (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_security_group.web_access (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_lb_target_group_attachment.attach_web_a[0]"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_instance.web_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_b (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_internet_gateway.gw (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_access_key.prometheus_access_key (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_instance.prometheus_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_b (prepare state)" waiting on "var.instance_count"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "output.Grafana_URL" waiting on "aws_instance.prometheus_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_route53_record.A (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_alb_listener_rule.listener_rule_http (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_vpc.vpc (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_route53_zone.zone (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_a (prepare state)" waiting on "var.instance_count"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.Prometheus_URL"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_b[0]" waiting on "aws_instance.web_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_https (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_instance.prometheus_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_alb.alb (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "output.Prometheus_URL" waiting on "aws_instance.prometheus_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_b (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.alb_address"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_b[0]" waiting on "var.ansible_user"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_b[0]" waiting on "var.ami"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_a[0]" waiting on "aws_alb_target_group.alb_target_group_http (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_alb_listener.alb_listener_https (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_b[0]" waiting on "aws_key_pair.ovpDevOpsKey (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_instance.prometheus_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_instance.prometheus_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route53_record.A_www (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_iam_user_policy.prometheus_role (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_iam_user.prometheus_iam (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "data.aws_instances.web_instances_a" waiting on "aws_instance.web_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_user.prometheus_iam (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_user_policy.prometheus_role (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.ubuntu_user"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route53_zone.zone (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "root" waiting on "provisioner.local-exec (close)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.cidr_subnet_private_b"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.Grafana_URL"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route53_record.A_www (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_b (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.hosted_zone"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a (prepare state)" waiting on "provisioner.local-exec"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_security_group.internal_access (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_a (prepare state)" waiting on "provisioner.local-exec"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_route53_record.A_www (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_iam_access_key.prometheus_access_key (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_security_group.web_access (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_b[0]" waiting on "var.instance"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_security_group.prometheus_access (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route53_record.A (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.cidr_subnet_public_b"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_route.internet_access (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_vpc.vpc (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.public_key"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_subnet.subnet_public_az_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_user.prometheus_iam (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_b[0]" waiting on "aws_security_group.internal_access (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_a (prepare state)" waiting on "var.instance_count"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "aws_instance.prometheus_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.name_servers"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_subnet.subnet_public_az_a (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_b[0]" waiting on "var.az_b"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_b (prepare state)" waiting on "provisioner.local-exec"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_subnet.subnet_public_az_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "output.name_servers" waiting on "aws_route53_zone.zone (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_subnet.subnet_private_az_a (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route.internet_access (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.cidr_subnet_public_a"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_instance.prometheus_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "data.aws_instances.web_instances_b" waiting on "aws_instance.web_b[0]"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_lb_target_group_attachment.attach_web_a[0]"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_alb.alb (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route53_record.A (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_subnet.subnet_private_az_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_alb_listener.alb_listener_https (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_b (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.cidr_subnet_private_a"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_alb_target_group.alb_target_group_http (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_a (prepare state)" waiting on "provisioner.remote-exec"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_alb_listener_rule.listener_rule_http (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_instance.prometheus_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_a[0]" waiting on "aws_lb_target_group_attachment.attach_web_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_alb_listener_rule.listener_rule_http (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b (prepare state)" waiting on "provisioner.file"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "data.aws_instances.web_instances_b" waiting on "data.aws_instances.web_instances_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_alb_listener.alb_listener_http (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "data.aws_instances.web_instances_a" waiting on "data.aws_instances.web_instances_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_instance.prometheus_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b (prepare state)" waiting on "provisioner.local-exec"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.prometheus_a (prepare state)" waiting on "provisioner.file"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "output.alb_address" waiting on "aws_alb.alb (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_alb_listener.alb_listener_http (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route.internet_access (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.region"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_instance.web_b[0]"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "data.aws_instances.web_instances_a (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_vpc.vpc (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_b (prepare state)" waiting on "var.instance_count"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_b (prepare state)" waiting on "provisioner.remote-exec"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_a (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_a (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_alb_listener.alb_listener_http (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_internet_gateway.gw (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_b[0]" waiting on "data.aws_instances.web_instances_b"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_subnet.subnet_public_az_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_subnet.subnet_public_az_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_b[0]" waiting on "aws_lb_target_group_attachment.attach_web_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_lb_target_group_attachment.attach_web_b[0]" waiting on "aws_alb_target_group.alb_target_group_http (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "aws_instance.web_b[0]"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b (prepare state)" waiting on "provisioner.remote-exec"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_user_policy.prometheus_role (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.web_b[0]" waiting on "var.private_key"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "aws_instance.web_a (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.cert"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "aws_instance.prometheus_b (prepare state)" waiting on "provider.aws"
2021/01/10 22:07:50 [TRACE] dag/walk: added edge: "provisioner.local-exec (close)" waiting on "aws_instance.prometheus_b (prepare state)"
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "data.aws_instances.web_instances_b (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "output.Grafana_URL", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_alb_listener_rule.listener_rule_http (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_security_group.internal_access (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_instance.prometheus_b (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_key_pair.ovpDevOpsKey (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_instance.prometheus_a (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_iam_user_policy.prometheus_role (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "data.aws_instances.web_instances_a", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_public_az_b (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_instance.web_b (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_route53_zone.zone (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_lb_target_group_attachment.attach_web_b (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_iam_access_key.prometheus_access_key (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "output.alb_address", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "data.aws_instances.web_instances_a (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_security_group.web_access (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_route.internet_access (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_public_az_a (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_alb.alb (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_instance.web_b[0]", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_lb_target_group_attachment.attach_web_a (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_alb_listener.alb_listener_https (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "output.Prometheus_URL", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "data.aws_instances.web_instances_b", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_alb_target_group.alb_target_group_http (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_iam_user.prometheus_iam (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_instance.web_a (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_route53_record.A_www (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_private_az_a (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_vpc.vpc (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_alb_listener.alb_listener_http (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_internet_gateway.gw (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_lb_target_group_attachment.attach_web_a[0]", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_route53_record.A (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_subnet.subnet_private_az_b (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_security_group.prometheus_access (prepare state)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "provisioner.local-exec (close)", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "output.name_servers", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: dependencies changed for "aws_lb_target_group_attachment.attach_web_b[0]", sending new deps
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.cidr_subnet_public_b"
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_subnet_public_b": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_subnet_public_b": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.cidr_subnet_public_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.cidr_subnet_public_b
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_subnet_public_b": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.instance"
2021/01/10 22:07:50 [TRACE] vertex "var.instance": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.instance": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.instance
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.instance
2021/01/10 22:07:50 [TRACE] vertex "var.instance": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.ansible_user"
2021/01/10 22:07:50 [TRACE] vertex "var.ansible_user": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.ansible_user": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.ansible_user
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.ansible_user
2021/01/10 22:07:50 [TRACE] vertex "var.ansible_user": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.instance_count"
2021/01/10 22:07:50 [TRACE] vertex "var.instance_count": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.instance_count": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.instance_count
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.instance_count
2021/01/10 22:07:50 [TRACE] vertex "var.instance_count": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "provisioner.file"
2021/01/10 22:07:50 [TRACE] vertex "provisioner.file": starting visit (*terraform.NodeProvisioner)
2021/01/10 22:07:50 [TRACE] vertex "provisioner.file": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: provisioner.file
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalInitProvisioner
2021-01-10T22:07:50.308Z [DEBUG] plugin: starting plugin: path=/bin/terraform args=[/bin/terraform, internal-plugin, provisioner, file]
2021-01-10T22:07:50.309Z [DEBUG] plugin: plugin started: path=/bin/terraform pid=38191
2021-01-10T22:07:50.309Z [DEBUG] plugin: waiting for RPC address: path=/bin/terraform
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.private_key"
2021/01/10 22:07:50 [TRACE] vertex "var.private_key": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.private_key": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.private_key
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.private_key
2021/01/10 22:07:50 [TRACE] vertex "var.private_key": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.az_b"
2021/01/10 22:07:50 [TRACE] vertex "var.az_b": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.az_b": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.az_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.az_b
2021/01/10 22:07:50 [TRACE] vertex "var.az_b": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.hosted_zone"
2021/01/10 22:07:50 [TRACE] vertex "var.hosted_zone": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.hosted_zone": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.hosted_zone
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.hosted_zone
2021/01/10 22:07:50 [TRACE] vertex "var.hosted_zone": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.cidr_subnet_public_a"
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_subnet_public_a": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_subnet_public_a": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.cidr_subnet_public_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.cidr_subnet_public_a
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_subnet_public_a": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "provisioner.remote-exec"
2021/01/10 22:07:50 [TRACE] vertex "provisioner.remote-exec": starting visit (*terraform.NodeProvisioner)
2021/01/10 22:07:50 [TRACE] vertex "provisioner.remote-exec": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: provisioner.remote-exec
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalInitProvisioner
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.public_key"
2021/01/10 22:07:50 [TRACE] vertex "var.public_key": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.public_key": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.public_key
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.public_key
2021/01/10 22:07:50 [TRACE] vertex "var.public_key": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.cert"
2021/01/10 22:07:50 [TRACE] vertex "var.cert": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.cert": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.cert
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.cert
2021/01/10 22:07:50 [TRACE] vertex "var.cert": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.cidr_subnet_private_a"
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_subnet_private_a": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_subnet_private_a": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.cidr_subnet_private_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.cidr_subnet_private_a
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_subnet_private_a": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.ami"
2021/01/10 22:07:50 [TRACE] vertex "var.ami": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.ami": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.ami
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.ami
2021/01/10 22:07:50 [TRACE] vertex "var.ami": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.ubuntu_user"
2021/01/10 22:07:50 [TRACE] vertex "var.ubuntu_user": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.ubuntu_user": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.ubuntu_user
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.ubuntu_user
2021/01/10 22:07:50 [TRACE] vertex "var.ubuntu_user": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.cidr_subnet_private_b"
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_subnet_private_b": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_subnet_private_b": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.cidr_subnet_private_b
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.cidr_subnet_private_b
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_subnet_private_b": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.az_a"
2021/01/10 22:07:50 [TRACE] vertex "var.az_a": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.az_a": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.az_a
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.az_a
2021/01/10 22:07:50 [TRACE] vertex "var.az_a": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.region"
2021/01/10 22:07:50 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.region": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.region
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.region
2021/01/10 22:07:50 [TRACE] vertex "var.region": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "provider.aws"
2021/01/10 22:07:50 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2021/01/10 22:07:50 [TRACE] vertex "provider.aws": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: provider.aws
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021-01-10T22:07:50.310Z [INFO]  plugin: configuring client automatic mTLS
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "var.cidr_vpc"
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_vpc": starting visit (*terraform.NodeRootVariable)
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_vpc": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: var.cidr_vpc
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: var.cidr_vpc
2021/01/10 22:07:50 [TRACE] vertex "var.cidr_vpc": visit complete
2021/01/10 22:07:50 [TRACE] dag/walk: visiting "provisioner.local-exec"
2021/01/10 22:07:50 [TRACE] vertex "provisioner.local-exec": starting visit (*terraform.NodeProvisioner)
2021/01/10 22:07:50 [TRACE] vertex "provisioner.local-exec": evaluating
2021/01/10 22:07:50 [TRACE] [walkApply] Entering eval tree: provisioner.local-exec
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalInitProvisioner
2021-01-10T22:07:50.369Z [DEBUG] plugin: using plugin: version=5
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: provisioner.file
2021/01/10 22:07:50 [TRACE] vertex "provisioner.file": visit complete
2021-01-10T22:07:50.375Z [DEBUG] plugin: starting plugin: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 args=[/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5]
2021-01-10T22:07:50.376Z [DEBUG] plugin: plugin started: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 pid=38206
2021-01-10T22:07:50.376Z [DEBUG] plugin: waiting for RPC address: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5
2021-01-10T22:07:50.377Z [DEBUG] plugin: starting plugin: path=/bin/terraform args=[/bin/terraform, internal-plugin, provisioner, remote-exec]
2021-01-10T22:07:50.381Z [DEBUG] plugin: plugin started: path=/bin/terraform pid=38207
2021-01-10T22:07:50.381Z [DEBUG] plugin: waiting for RPC address: path=/bin/terraform
2021-01-10T22:07:50.428Z [DEBUG] plugin: using plugin: version=5
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: provisioner.remote-exec
2021/01/10 22:07:50 [TRACE] vertex "provisioner.remote-exec": visit complete
2021-01-10T22:07:50.429Z [DEBUG] plugin: starting plugin: path=/bin/terraform args=[/bin/terraform, internal-plugin, provisioner, local-exec]
2021-01-10T22:07:50.433Z [DEBUG] plugin: plugin started: path=/bin/terraform pid=38223
2021-01-10T22:07:50.433Z [DEBUG] plugin: waiting for RPC address: path=/bin/terraform
2021-01-10T22:07:50.479Z [DEBUG] plugin: using plugin: version=5
2021/01/10 22:07:50 [TRACE] [walkApply] Exiting eval tree: provisioner.local-exec
2021/01/10 22:07:50 [TRACE] vertex "provisioner.local-exec": visit complete
2021-01-10T22:07:50.483Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: configuring server automatic mTLS: timestamp=2021-01-10T22:07:50.483Z
2021-01-10T22:07:50.530Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: plugin address: address=/tmp/plugin007757412 network=unix timestamp=2021-01-10T22:07:50.530Z
2021-01-10T22:07:50.530Z [DEBUG] plugin: using plugin: version=5
2021/01/10 22:07:50 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2021/01/10 22:07:50 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:50 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:50 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/01/10 22:07:50 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2021/01/10 22:07:50 [TRACE] GRPCProvider: GetSchema
2021/01/10 22:07:50 [TRACE] GRPCProvider: Configure
2021-01-10T22:07:50.760Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [INFO] AWS Auth provider used: "SharedCredentialsProvider": timestamp=2021-01-10T22:07:50.758Z
2021-01-10T22:07:50.760Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:50 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-01-10T22:07:50.758Z
2021-01-10T22:07:51.216Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:51 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-01-10T22:07:51.216Z
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: provider.aws
2021/01/10 22:07:52 [TRACE] vertex "provider.aws": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "data.aws_instances.web_instances_b (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "data.aws_instances.web_instances_b (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "data.aws_instances.web_instances_b (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: data.aws_instances.web_instances_b (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: data.aws_instances.web_instances_b (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "data.aws_instances.web_instances_b (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_instance.prometheus_b (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_instance.prometheus_b (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_instance.prometheus_b (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_instance.prometheus_b (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_instance.prometheus_b (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_instance.prometheus_b (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_instance.prometheus_a (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_instance.prometheus_a (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_instance.prometheus_a (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_instance.prometheus_a (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_instance.prometheus_a (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_instance.prometheus_a (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_instance.web_b (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_instance.web_b (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_instance.web_b (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_instance.web_b (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_instance.web_b (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_instance.web_b (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_instance.web_a (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_instance.web_a (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_instance.web_a (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_instance.web_a (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_instance.web_a (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_instance.web_a (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_lb_target_group_attachment.attach_web_a (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_lb_target_group_attachment.attach_web_a (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_lb_target_group_attachment.attach_web_a (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_security_group.prometheus_access (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_security_group.prometheus_access (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_security_group.prometheus_access (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_security_group.prometheus_access (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_security_group.prometheus_access (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_security_group.prometheus_access (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_subnet.subnet_private_az_b (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_subnet.subnet_private_az_b (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_subnet.subnet_private_az_b (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_subnet.subnet_private_az_b (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_subnet.subnet_private_az_b (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_subnet.subnet_private_az_b (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_route53_record.A (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_route53_record.A (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_route53_record.A (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_route53_record.A (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_route53_record.A (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_route53_record.A (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_internet_gateway.gw (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_internet_gateway.gw (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_internet_gateway.gw (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_internet_gateway.gw (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_internet_gateway.gw (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_internet_gateway.gw (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_alb_listener.alb_listener_http (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_alb_listener.alb_listener_http (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_alb_listener.alb_listener_http (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_alb_listener.alb_listener_http (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_alb_listener.alb_listener_http (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_alb_listener.alb_listener_http (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_vpc.vpc (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_vpc.vpc (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_vpc.vpc (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_vpc.vpc (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_vpc.vpc (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_vpc.vpc (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_subnet.subnet_private_az_a (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_subnet.subnet_private_az_a (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_subnet.subnet_private_az_a (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_subnet.subnet_private_az_a (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_subnet.subnet_private_az_a (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_subnet.subnet_private_az_a (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_route53_record.A_www (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_route53_record.A_www (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_route53_record.A_www (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_route53_record.A_www (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_route53_record.A_www (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_route53_record.A_www (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_iam_user.prometheus_iam (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_iam_user.prometheus_iam (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_iam_user.prometheus_iam (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_iam_user.prometheus_iam (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_iam_user.prometheus_iam (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_iam_user.prometheus_iam (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_alb_target_group.alb_target_group_http (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_alb_target_group.alb_target_group_http (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_alb_target_group.alb_target_group_http (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_alb_target_group.alb_target_group_http (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_alb_target_group.alb_target_group_http (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_alb_target_group.alb_target_group_http (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_alb_listener.alb_listener_https (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_alb_listener.alb_listener_https (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_alb_listener.alb_listener_https (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_alb_listener.alb_listener_https (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_alb_listener.alb_listener_https (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_alb_listener.alb_listener_https (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_alb.alb (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_alb.alb (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_alb.alb (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_alb.alb (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_alb.alb (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_alb.alb (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "output.alb_address"
2021/01/10 22:07:52 [TRACE] vertex "output.alb_address": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:52 [TRACE] vertex "output.alb_address": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: output.alb_address
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:52 [TRACE] EvalWriteOutput: Saving value for output.alb_address in state
2021/01/10 22:07:52 [TRACE] EvalWriteOutput: Saving Create change for output.alb_address in changeset
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: output.alb_address
2021/01/10 22:07:52 [TRACE] vertex "output.alb_address": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_subnet.subnet_public_az_a (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_subnet.subnet_public_az_a (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_subnet.subnet_public_az_a (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_subnet.subnet_public_az_a (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_subnet.subnet_public_az_a (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_subnet.subnet_public_az_a (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_route.internet_access (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_route.internet_access (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_route.internet_access (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_route.internet_access (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_route.internet_access (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_route.internet_access (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_security_group.web_access (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_security_group.web_access (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_security_group.web_access (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_security_group.web_access (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_security_group.web_access (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_security_group.web_access (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "data.aws_instances.web_instances_a (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "data.aws_instances.web_instances_a (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "data.aws_instances.web_instances_a (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: data.aws_instances.web_instances_a (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: data.aws_instances.web_instances_a (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "data.aws_instances.web_instances_a (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "data.aws_instances.web_instances_a"
2021/01/10 22:07:52 [TRACE] vertex "data.aws_instances.web_instances_a": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/10 22:07:52 [TRACE] vertex "data.aws_instances.web_instances_a": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: data.aws_instances.web_instances_a
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/01/10 22:07:52 [TRACE] EvalReadDiff: Read Read change from plan for data.aws_instances.web_instances_a
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:07:52 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalReadData
2021/01/10 22:07:52 [TRACE] EvalReadData: working on data.aws_instances.web_instances_a
2021/01/10 22:07:52 [TRACE] Re-validating config for data.aws_instances.web_instances_a
2021/01/10 22:07:52 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_iam_access_key.prometheus_access_key (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_iam_access_key.prometheus_access_key (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_iam_access_key.prometheus_access_key (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_iam_access_key.prometheus_access_key (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_iam_access_key.prometheus_access_key (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_iam_access_key.prometheus_access_key (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_lb_target_group_attachment.attach_web_b (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_lb_target_group_attachment.attach_web_b (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_lb_target_group_attachment.attach_web_b (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_b (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_route53_zone.zone (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_route53_zone.zone (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_route53_zone.zone (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_route53_zone.zone (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_route53_zone.zone (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_route53_zone.zone (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "output.name_servers"
2021/01/10 22:07:52 [TRACE] vertex "output.name_servers": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:52 [TRACE] vertex "output.name_servers": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: output.name_servers
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:52 [TRACE] EvalWriteOutput: Saving value for output.name_servers in state
2021/01/10 22:07:52 [TRACE] EvalWriteOutput: Saving Create change for output.name_servers in changeset
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: output.name_servers
2021/01/10 22:07:52 [TRACE] vertex "output.name_servers": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_subnet.subnet_public_az_b (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_subnet.subnet_public_az_b (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_subnet.subnet_public_az_b (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_subnet.subnet_public_az_b (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_subnet.subnet_public_az_b (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_subnet.subnet_public_az_b (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_iam_user_policy.prometheus_role (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_iam_user_policy.prometheus_role (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_iam_user_policy.prometheus_role (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_iam_user_policy.prometheus_role (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_iam_user_policy.prometheus_role (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_iam_user_policy.prometheus_role (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_key_pair.ovpDevOpsKey (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_key_pair.ovpDevOpsKey (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_key_pair.ovpDevOpsKey (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_key_pair.ovpDevOpsKey (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_key_pair.ovpDevOpsKey (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_key_pair.ovpDevOpsKey (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_security_group.internal_access (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_security_group.internal_access (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_security_group.internal_access (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_security_group.internal_access (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_security_group.internal_access (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_security_group.internal_access (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_instance.web_b[0]"
2021/01/10 22:07:52 [TRACE] vertex "aws_instance.web_b[0]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/10 22:07:52 [TRACE] vertex "aws_instance.web_b[0]": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_instance.web_b[0]
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/01/10 22:07:52 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.web_b[0]
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:07:52 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:52 [TRACE] EvalReadState: reading state for aws_instance.web_b[0]
2021/01/10 22:07:52 [TRACE] EvalReadState: no state present for aws_instance.web_b[0]
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/01/10 22:07:52 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.web_b[0]
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:52 [TRACE] Re-validating config for "aws_instance.web_b[0]"
2021/01/10 22:07:52 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_alb_listener_rule.listener_rule_http (prepare state)"
2021/01/10 22:07:52 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/01/10 22:07:52 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http (prepare state)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_alb_listener_rule.listener_rule_http (prepare state)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: aws_alb_listener_rule.listener_rule_http (prepare state)
2021/01/10 22:07:52 [TRACE] vertex "aws_alb_listener_rule.listener_rule_http (prepare state)": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "output.Prometheus_URL"
2021/01/10 22:07:52 [TRACE] vertex "output.Prometheus_URL": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:52 [TRACE] vertex "output.Prometheus_URL": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: output.Prometheus_URL
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:52 [TRACE] EvalWriteOutput: Saving value for output.Prometheus_URL in state
2021/01/10 22:07:52 [TRACE] EvalWriteOutput: Saving Create change for output.Prometheus_URL in changeset
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: output.Prometheus_URL
2021/01/10 22:07:52 [TRACE] vertex "output.Prometheus_URL": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "provisioner.file (close)"
2021/01/10 22:07:52 [TRACE] vertex "provisioner.file (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2021/01/10 22:07:52 [TRACE] vertex "provisioner.file (close)": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: provisioner.file (close)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalCloseProvisioner
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "output.Grafana_URL"
2021/01/10 22:07:52 [TRACE] vertex "output.Grafana_URL": starting visit (*terraform.NodeApplyableOutput)
2021/01/10 22:07:52 [TRACE] vertex "output.Grafana_URL": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: output.Grafana_URL
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/01/10 22:07:52 [TRACE] EvalWriteOutput: Saving value for output.Grafana_URL in state
2021/01/10 22:07:52 [TRACE] EvalWriteOutput: Saving Create change for output.Grafana_URL in changeset
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: output.Grafana_URL
2021/01/10 22:07:52 [TRACE] vertex "output.Grafana_URL": visit complete
2021-01-10T22:07:52.025Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:52.023Z
2021-01-10T22:07:52.025Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-01-10T22:07:52.023Z
2021/01/10 22:07:52 [TRACE] EvalReadData: data.aws_instances.web_instances_a configuration is complete, so reading from provider
2021/01/10 22:07:52 [TRACE] GRPCProvider: ReadDataSource
2021/01/10 22:07:52 [TRACE] GRPCProvider: PlanResourceChange
2021-01-10T22:07:52.028Z [DEBUG] plugin: plugin process exited: path=/bin/terraform pid=38191
2021-01-10T22:07:52.028Z [DEBUG] plugin: plugin exited
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: provisioner.file (close)
2021/01/10 22:07:52 [TRACE] vertex "provisioner.file (close)": visit complete
2021-01-10T22:07:52.030Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] Reading EC2 instances: {
  Filters: [{
      Name: "instance-state-name",
      Values: ["running"]
    },{
      Name: "tag:Role",
      Values: ["WebServer"]
    }]
}: timestamp=2021-01-10T22:07:52.030Z
2021/01/10 22:07:52 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_instance.web_b[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2021/01/10 22:07:52 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:52 [TRACE] EvalReadState: reading state for aws_instance.web_b[0]
2021/01/10 22:07:52 [TRACE] EvalReadState: no state present for aws_instance.web_b[0]
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:07:52 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalApplyPre
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalApply
2021/01/10 22:07:52 [DEBUG] aws_instance.web_b[0]: applying the planned Create change
2021/01/10 22:07:52 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-10T22:07:52.034Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] setting computed for "enclave_options" from ComputedKeys: timestamp=2021-01-10T22:07:52.034Z
2021-01-10T22:07:52.034Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] setting computed for "network_interface" from ComputedKeys: timestamp=2021-01-10T22:07:52.034Z
2021-01-10T22:07:52.035Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] setting computed for "root_block_device" from ComputedKeys: timestamp=2021-01-10T22:07:52.035Z
2021-01-10T22:07:52.035Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] setting computed for "secondary_private_ips" from ComputedKeys: timestamp=2021-01-10T22:07:52.035Z
2021-01-10T22:07:52.035Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] setting computed for "network_interface" from ComputedKeys: timestamp=2021-01-10T22:07:52.035Z
2021-01-10T22:07:52.035Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] setting computed for "volume_tags" from ComputedKeys: timestamp=2021-01-10T22:07:52.035Z
2021-01-10T22:07:52.035Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] setting computed for "ebs_block_device" from ComputedKeys: timestamp=2021-01-10T22:07:52.035Z
2021-01-10T22:07:52.036Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] setting computed for "security_groups" from ComputedKeys: timestamp=2021-01-10T22:07:52.035Z
2021-01-10T22:07:52.036Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] setting computed for "ipv6_addresses" from ComputedKeys: timestamp=2021-01-10T22:07:52.036Z
2021-01-10T22:07:52.036Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] setting computed for "metadata_options" from ComputedKeys: timestamp=2021-01-10T22:07:52.036Z
2021-01-10T22:07:52.036Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] setting computed for "ephemeral_block_device" from ComputedKeys: timestamp=2021-01-10T22:07:52.036Z
2021-01-10T22:07:52.036Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] Run configuration: {
  DisableApiTermination: false,
  EbsOptimized: false,
  HibernationOptions: {
    Configured: false
  },
  IamInstanceProfile: {
    Name: ""
  },
  ImageId: "ami-0a0ad6b70e61be944",
  InstanceType: "t2.micro",
  KeyName: "ovpDevOpsKey",
  MaxCount: 1,
  MinCount: 1,
  Monitoring: {
    Enabled: false
  },
  NetworkInterfaces: [{
      DeviceIndex: 0,
      Groups: ["sg-048f3f26d6a3faa4a","sg-06fdb1c2ca9a8f6d6"],
      SubnetId: "subnet-0198d64996969664b"
    }],
  Placement: {
    AvailabilityZone: "us-east-2b",
    GroupName: ""
  },
  TagSpecifications: [{
      ResourceType: "instance",
      Tags: [{
          Key: "Role",
          Value: "WebServer"
        }]
    }]
}: timestamp=2021-01-10T22:07:52.036Z
2021-01-10T22:07:52.037Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] Waiting for state to become: [success]: timestamp=2021-01-10T22:07:52.036Z
2021-01-10T22:07:52.551Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [DEBUG] Found 1 instances via given filter: timestamp=2021-01-10T22:07:52.551Z
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:52 [TRACE] EvalWriteState: writing current state object for data.aws_instances.web_instances_a
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2021/01/10 22:07:52 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/01/10 22:07:52 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 923
2021/01/10 22:07:52 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/01/10 22:07:52 [TRACE] [walkApply] Exiting eval tree: data.aws_instances.web_instances_a
2021/01/10 22:07:52 [TRACE] vertex "data.aws_instances.web_instances_a": visit complete
2021/01/10 22:07:52 [TRACE] dag/walk: visiting "aws_lb_target_group_attachment.attach_web_a[0]"
2021/01/10 22:07:52 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a[0]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/10 22:07:52 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a[0]": evaluating
2021/01/10 22:07:52 [TRACE] [walkApply] Entering eval tree: aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/01/10 22:07:52 [TRACE] EvalReadDiff: Read Create change from plan for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:07:52 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:52 [TRACE] EvalReadState: reading state for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:52 [TRACE] EvalReadState: no state present for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/01/10 22:07:52 [TRACE] EvalReadDiff: Read Create change from plan for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalDiff
2021/01/10 22:07:52 [TRACE] Re-validating config for "aws_lb_target_group_attachment.attach_web_a[0]"
2021/01/10 22:07:52 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/01/10 22:07:52 [TRACE] GRPCProvider: PlanResourceChange
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2021/01/10 22:07:52 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalReadState
2021/01/10 22:07:52 [TRACE] EvalReadState: reading state for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:52 [TRACE] EvalReadState: no state present for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:07:52 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalApplyPre
2021/01/10 22:07:52 [TRACE] <root>: eval: *terraform.EvalApply
2021/01/10 22:07:52 [DEBUG] aws_lb_target_group_attachment.attach_web_a[0]: applying the planned Create change
2021/01/10 22:07:52 [TRACE] GRPCProvider: ApplyResourceChange
2021-01-10T22:07:52.569Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:52 [INFO] Registering Target i-03d59fa42ed996747 with Target Group arn:aws:elasticloadbalancing:us-east-2:999329133891:targetgroup/target-group-http/49209653692b64e1: timestamp=2021-01-10T22:07:52.568Z
2021/01/10 22:07:53 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/01/10 22:07:53 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:53 [TRACE] EvalWriteState: recording 2 dependencies for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:53 [TRACE] EvalWriteState: writing current state object for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:53 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2021/01/10 22:07:53 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/01/10 22:07:53 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:07:53 [TRACE] EvalWriteState: recording 2 dependencies for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:53 [TRACE] EvalWriteState: writing current state object for aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:53 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:07:53 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:07:53 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:07:53 [TRACE] <root>: eval: *terraform.EvalApplyPost
2021/01/10 22:07:53 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2021/01/10 22:07:53 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/01/10 22:07:53 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 924
2021/01/10 22:07:53 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/01/10 22:07:53 [TRACE] [walkApply] Exiting eval tree: aws_lb_target_group_attachment.attach_web_a[0]
2021/01/10 22:07:53 [TRACE] vertex "aws_lb_target_group_attachment.attach_web_a[0]": visit complete
2021-01-10T22:07:53.432Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:53 [INFO] Instance ID: i-0b1925daf0138c3d6: timestamp=2021-01-10T22:07:53.432Z
2021-01-10T22:07:53.432Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:53 [DEBUG] Waiting for instance (i-0b1925daf0138c3d6) to become running: timestamp=2021-01-10T22:07:53.432Z
2021-01-10T22:07:53.432Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:07:53 [DEBUG] Waiting for state to become: [running]: timestamp=2021-01-10T22:07:53.432Z
2021/01/10 22:07:55 [TRACE] dag/walk: vertex "aws_lb_target_group_attachment.attach_web_b[0]" is waiting for "data.aws_instances.web_instances_b"
2021/01/10 22:07:55 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/01/10 22:07:55 [TRACE] dag/walk: vertex "provisioner.local-exec (close)" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:07:57 [TRACE] dag/walk: vertex "data.aws_instances.web_instances_b" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:07:57 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:07:57 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:07:58 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:08:00 [TRACE] dag/walk: vertex "provisioner.local-exec (close)" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:00 [TRACE] dag/walk: vertex "aws_lb_target_group_attachment.attach_web_b[0]" is waiting for "data.aws_instances.web_instances_b"
2021/01/10 22:08:00 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/01/10 22:08:02 [TRACE] dag/walk: vertex "data.aws_instances.web_instances_b" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:02 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:02 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:08:03 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_lb_target_group_attachment.attach_web_b[0]"
2021-01-10T22:08:03.948Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:08:03 [TRACE] Waiting 3s before next try: timestamp=2021-01-10T22:08:03.947Z
2021/01/10 22:08:05 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/01/10 22:08:05 [TRACE] dag/walk: vertex "provisioner.local-exec (close)" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:05 [TRACE] dag/walk: vertex "aws_lb_target_group_attachment.attach_web_b[0]" is waiting for "data.aws_instances.web_instances_b"
2021/01/10 22:08:07 [TRACE] dag/walk: vertex "data.aws_instances.web_instances_b" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:07 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:07 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aws_lb_target_group_attachment.attach_web_b[0]"
2021-01-10T22:08:07.418Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:08:07 [TRACE] Waiting 6s before next try: timestamp=2021-01-10T22:08:07.418Z
2021/01/10 22:08:08 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:08:10 [TRACE] dag/walk: vertex "aws_lb_target_group_attachment.attach_web_b[0]" is waiting for "data.aws_instances.web_instances_b"
2021/01/10 22:08:10 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/01/10 22:08:10 [TRACE] dag/walk: vertex "provisioner.local-exec (close)" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:12 [TRACE] dag/walk: vertex "data.aws_instances.web_instances_b" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:12 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:12 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:08:13 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:08:15 [TRACE] dag/walk: vertex "provisioner.local-exec (close)" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:15 [TRACE] dag/walk: vertex "aws_lb_target_group_attachment.attach_web_b[0]" is waiting for "data.aws_instances.web_instances_b"
2021/01/10 22:08:15 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021-01-10T22:08:15.948Z [INFO]  plugin.terraform-provider-aws_v3.23.0_x5: 2021/01/10 22:08:15 [DEBUG] Setting Security Group IDs: []string{"sg-06fdb1c2ca9a8f6d6", "sg-048f3f26d6a3faa4a"}: timestamp=2021-01-10T22:08:15.948Z
2021/01/10 22:08:17 [TRACE] dag/walk: vertex "data.aws_instances.web_instances_b" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:17 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:17 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:08:17 [WARN] Provider "registry.terraform.io/-/aws" produced an unexpected new value for aws_instance.web_b[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .hibernation: was null, but now cty.False
      - .iam_instance_profile: was null, but now cty.StringVal("")
      - .ebs_optimized: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2021/01/10 22:08:17 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/01/10 22:08:17 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:08:17 [TRACE] EvalWriteState: recording 4 dependencies for aws_instance.web_b[0]
2021/01/10 22:08:17 [TRACE] EvalWriteState: writing current state object for aws_instance.web_b[0]
2021/01/10 22:08:17 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2021/01/10 22:08:17 [TRACE] EvalApplyProvisioners: provisioning aws_instance.web_b[0] with "remote-exec"
2021/01/10 22:08:18 [TRACE] dag/walk: vertex "provider.aws (close)" is waiting for "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:08:20 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/01/10 22:08:20 [TRACE] dag/walk: vertex "provisioner.local-exec (close)" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:20 [TRACE] dag/walk: vertex "aws_lb_target_group_attachment.attach_web_b[0]" is waiting for "data.aws_instances.web_instances_b"
2021/01/10 22:08:22 [TRACE] dag/walk: vertex "data.aws_instances.web_instances_b" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:22 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "aws_instance.web_b[0]"
2021/01/10 22:08:22 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aws_lb_target_group_attachment.attach_web_b[0]"
2021/01/10 22:08:22 [TRACE] backend/local: waiting for the running operation to stop
2021/01/10 22:08:22 [WARN] terraform: Stop called, initiating interrupt sequence
2021/01/10 22:08:22 [WARN] terraform: run context exists, stopping
2021/01/10 22:08:22 [INFO] terraform: waiting for graceful stop to complete
2021/01/10 22:08:22 [TRACE] Context: requesting providers and provisioners to gracefully stop
2021/01/10 22:08:22 [TRACE] GRPCProvider: Stop
2021-01-10T22:08:22.029Z [TRACE] plugin.terraform-provider-aws_v3.23.0_x5: plugin received interrupt signal, ignoring: count=1 timestamp=2021-01-10T22:08:22.028Z
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: panic: close of nil channel
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: 
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: goroutine 200 [running]:
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: github.com/hashicorp/terraform-plugin-go/tfprotov5/server.(*server).stop(0xc001170b40)
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-go@v0.1.0/tfprotov5/server/server.go:201 +0x71
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: github.com/hashicorp/terraform-plugin-go/tfprotov5/server.(*server).Stop(0xc001170b40, 0x716bf00, 0xc0012b20c0, 0xc0012b20f0, 0xc001170b40, 0xc0012b20c0, 0xc000b8bba0)
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-go@v0.1.0/tfprotov5/server/server.go:215 +0xa5
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: github.com/hashicorp/terraform-plugin-go/tfprotov5/internal/tfplugin5._Provider_Stop_Handler(0x652cda0, 0xc001170b40, 0x716bf00, 0xc0012b20c0, 0xc001245860, 0x0, 0x716bf00, 0xc0012b20c0, 0x0, 0x0)
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-go@v0.1.0/tfprotov5/internal/tfplugin5/tfplugin5_grpc.pb.go:434 +0x214
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: google.golang.org/grpc.(*Server).processUnaryRPC(0xc000520e00, 0x718eae0, 0xc000b70d80, 0xc001085e00, 0xc001472600, 0xa5270a8, 0x0, 0x0, 0x0)
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:1194 +0x522
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: google.golang.org/grpc.(*Server).handleStream(0xc000520e00, 0x718eae0, 0xc000b70d80, 0xc001085e00, 0x0)
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:1517 +0xd05
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: google.golang.org/grpc.(*Server).serveStreams.func1.2(0xc00146cba0, 0xc000520e00, 0x718eae0, 0xc000b70d80, 0xc001085e00)
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:859 +0xa5
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: created by google.golang.org/grpc.(*Server).serveStreams.func1
2021-01-10T22:08:22.034Z [DEBUG] plugin.terraform-provider-aws_v3.23.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:857 +0x1fd
2021/01/10 22:08:22 [WARN] Early exit triggered by hook: *terraform.stopHook
2021/01/10 22:08:22 [WARN] Errors while provisioning aws_instance.web_b[0] with "remote-exec", so aborting
2021/01/10 22:08:22 [TRACE] EvalApplyProvisioners: aws_instance.web_b[0] provisioning failed, but we will continue anyway at the caller's request
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/01/10 22:08:22 [TRACE] EvalMaybeTainted: aws_instance.web_b[0] encountered an error during creation, so it is now marked as tainted
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/01/10 22:08:22 [TRACE] EvalWriteState: recording 4 dependencies for aws_instance.web_b[0]
2021/01/10 22:08:22 [TRACE] EvalWriteState: writing current state object for aws_instance.web_b[0]
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalApplyPost
2021/01/10 22:08:22 [WARN] Early exit triggered by hook: *terraform.stopHook
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalApplyPost, early exit err: early exit
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2021/01/10 22:08:22 [TRACE] [walkApply] Exiting eval tree: aws_instance.web_b[0]
2021/01/10 22:08:22 [TRACE] vertex "aws_instance.web_b[0]": visit complete
2021/01/10 22:08:22 [TRACE] dag/walk: visiting "provisioner.local-exec (close)"
2021/01/10 22:08:22 [TRACE] vertex "provisioner.local-exec (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2021/01/10 22:08:22 [TRACE] vertex "provisioner.local-exec (close)": evaluating
2021/01/10 22:08:22 [TRACE] [walkApply] Entering eval tree: provisioner.local-exec (close)
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalCloseProvisioner
2021/01/10 22:08:22 [TRACE] dag/walk: visiting "provisioner.remote-exec (close)"
2021/01/10 22:08:22 [TRACE] vertex "provisioner.remote-exec (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2021/01/10 22:08:22 [TRACE] vertex "provisioner.remote-exec (close)": evaluating
2021/01/10 22:08:22 [TRACE] [walkApply] Entering eval tree: provisioner.remote-exec (close)
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalCloseProvisioner
2021/01/10 22:08:22 [TRACE] dag/walk: visiting "data.aws_instances.web_instances_b"
2021/01/10 22:08:22 [TRACE] vertex "data.aws_instances.web_instances_b": starting visit (*terraform.NodeApplyableResourceInstance)
2021/01/10 22:08:22 [TRACE] vertex "data.aws_instances.web_instances_b": evaluating
2021/01/10 22:08:22 [TRACE] [walkApply] Entering eval tree: data.aws_instances.web_instances_b
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalSequence
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/01/10 22:08:22 [TRACE] EvalReadDiff: Read Read change from plan for data.aws_instances.web_instances_b
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalIf
2021/01/10 22:08:22 [TRACE] <root>: eval: terraform.EvalNoop
2021/01/10 22:08:22 [TRACE] <root>: eval: *terraform.EvalReadData
2021/01/10 22:08:22 [TRACE] EvalReadData: working on data.aws_instances.web_instances_b
2021/01/10 22:08:22 [TRACE] Re-validating config for data.aws_instances.web_instances_b
2021/01/10 22:08:22 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021-01-10T22:08:22.043Z [DEBUG] plugin: plugin process exited: path=/bin/terraform pid=38223
2021-01-10T22:08:22.043Z [DEBUG] plugin: plugin exited
2021/01/10 22:08:22 [TRACE] [walkApply] Exiting eval tree: provisioner.local-exec (close)
2021/01/10 22:08:22 [TRACE] vertex "provisioner.local-exec (close)": visit complete
2021-01-10T22:08:22.046Z [DEBUG] plugin: plugin process exited: path=/bin/terraform pid=38207
2021-01-10T22:08:22.046Z [DEBUG] plugin: plugin exited
2021/01/10 22:08:22 [TRACE] [walkApply] Exiting eval tree: provisioner.remote-exec (close)
2021/01/10 22:08:22 [TRACE] vertex "provisioner.remote-exec (close)": visit complete
2021/01/10 22:08:22 [ERROR] <root>: eval: *terraform.EvalReadData, err: rpc error: code = Unavailable desc = all SubConns are in TransientFailure, latest connection error: connection error: desc = "transport: authentication handshake failed: read unix @->/tmp/plugin007757412: read: connection reset by peer"
2021/01/10 22:08:22 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = all SubConns are in TransientFailure, latest connection error: connection error: desc = "transport: authentication handshake failed: read unix @->/tmp/plugin007757412: read: connection reset by peer"
2021/01/10 22:08:22 [TRACE] [walkApply] Exiting eval tree: data.aws_instances.web_instances_b
2021/01/10 22:08:22 [TRACE] vertex "data.aws_instances.web_instances_b": visit complete
2021/01/10 22:08:22 [TRACE] dag/walk: upstream of "aws_lb_target_group_attachment.attach_web_b[0]" errored, so skipping
2021/01/10 22:08:22 [TRACE] dag/walk: upstream of "provider.aws (close)" errored, so skipping
2021/01/10 22:08:22 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2021/01/10 22:08:22 [TRACE] dag/walk: upstream of "root" errored, so skipping
2021/01/10 22:08:22 [TRACE] backend/local: graceful stop has completed
2021/01/10 22:08:22 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/01/10 22:08:22 [WARN] terraform: stop complete
2021/01/10 22:08:22 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 925
2021/01/10 22:08:22 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021-01-10T22:08:22.052Z [DEBUG] plugin: plugin process exited: path=/home/harry/ovp_devops_app/ovp_devops_app/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.23.0_x5 pid=38206 error="exit status 2"
2021/01/10 22:08:22 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/01/10 22:08:22 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021-01-10T22:08:22.060Z [DEBUG] plugin: plugin exited
